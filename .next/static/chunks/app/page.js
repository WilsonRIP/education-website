/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/browser/dist/bundle/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebAuthnAbortService: () => (/* binding */ WebAuthnAbortService),\n/* harmony export */   WebAuthnError: () => (/* binding */ WebAuthnError),\n/* harmony export */   base64URLStringToBuffer: () => (/* binding */ base64URLStringToBuffer),\n/* harmony export */   browserSupportsWebAuthn: () => (/* binding */ browserSupportsWebAuthn),\n/* harmony export */   browserSupportsWebAuthnAutofill: () => (/* binding */ browserSupportsWebAuthnAutofill),\n/* harmony export */   bufferToBase64URLString: () => (/* binding */ bufferToBase64URLString),\n/* harmony export */   platformAuthenticatorIsAvailable: () => (/* binding */ platformAuthenticatorIsAvailable),\n/* harmony export */   startAuthentication: () => (/* binding */ startAuthentication),\n/* harmony export */   startRegistration: () => (/* binding */ startRegistration)\n/* harmony export */ });\n/* [@simplewebauthn/browser@11.0.0] */\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return (window?.PublicKeyCredential !== undefined &&\n        typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' ||\n        /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor({ message, code, cause, name, }) {\n        super(message, { cause });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (options.mediation === 'conditional' &&\n            publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required during automatic registration but it could not be performed',\n                code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nclass BaseWebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n    cancelCeremony() {\n        if (this.controller) {\n            const abortError = new Error('Manually cancelling existing WebAuthn API call');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n            this.controller = undefined;\n        }\n    }\n}\nconst WebAuthnAbortService = new BaseWebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(options) {\n    const { optionsJSON, useAutoRegister = false } = options;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        user: {\n            ...optionsJSON.user,\n            id: base64URLStringToBuffer(optionsJSON.user.id),\n        },\n        excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    const createOptions = {};\n    if (useAutoRegister) {\n        createOptions.mediation = 'conditional';\n    }\n    createOptions.publicKey = publicKey;\n    createOptions.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(createOptions));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options: createOptions });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        try {\n            responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n        }\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        try {\n            const _publicKey = response.getPublicKey();\n            if (_publicKey !== null) {\n                responsePublicKey = bufferToBase64URLString(_publicKey);\n            }\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKey()', error);\n        }\n    }\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        try {\n            responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getAuthenticatorData()', error);\n        }\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\nfunction warnOnBrokenImplementation(methodName, cause) {\n    console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\n\nfunction browserSupportsWebAuthnAutofill() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    const globalPublicKeyCredential = window\n        .PublicKeyCredential;\n    if (globalPublicKeyCredential.isConditionalMediationAvailable === undefined) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return globalPublicKeyCredential.isConditionalMediationAvailable();\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Authentication ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nasync function startAuthentication(options) {\n    const { optionsJSON, useBrowserAutofill = false, verifyBrowserAutofillInput = true, } = options;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (optionsJSON.allowCredentials?.length !== 0) {\n        allowCredentials = optionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        allowCredentials,\n    };\n    const getOptions = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete$='webauthn']\");\n        if (eligibleInputs.length < 1 && verifyBrowserAutofillInput) {\n            throw Error('No <input> with \"webauthn\" as the only or last value in its `autocomplete` attribute was detected');\n        }\n        getOptions.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    getOptions.publicKey = publicKey;\n    getOptions.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(getOptions));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options: getOptions });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToBase64URLString(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.default.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   headers: () => (/* binding */ headers),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\nconst cookies = undefined;\nconst headers = undefined;\nconst isReactServer = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L2luZGV4LmRlZmF1bHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNjXFxkaXN0XFxpbmRleC5kZWZhdWx0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjb29raWVzID0gdW5kZWZpbmVkO1xuZXhwb3J0IGNvbnN0IGhlYWRlcnMgPSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgaXNSZWFjdFNlcnZlciA9IGZhbHNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.react-server.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   headers: () => (/* binding */ headers),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\n/* harmony import */ var _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./next-static-analysis-workaround */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js\");\nconst isReactServer = true;\n// In Next.js 15, the `next/headers` module returns async functions.\n// Since we support both Next.js 14 and 15, we return a union of the two.\n// TODO: Remove this once we drop support for Next.js 14, and replace it with `export { cookies, headers } from 'next/headers';`\n// https://nextjs.org/blog/next-15#async-request-apis-breaking-change\n\nconst cookies = _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__.cookies;\nconst headers = _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__.headers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L2luZGV4LnJlYWN0LXNlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0Esd0ZBQXdGLG1CQUFtQixvQkFBb0I7QUFDL0g7QUFDbUc7QUFDNUYsZ0JBQWdCLHFFQUFXO0FBQzNCLGdCQUFnQixxRUFBVyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zY1xcZGlzdFxcaW5kZXgucmVhY3Qtc2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc1JlYWN0U2VydmVyID0gdHJ1ZTtcbi8vIEluIE5leHQuanMgMTUsIHRoZSBgbmV4dC9oZWFkZXJzYCBtb2R1bGUgcmV0dXJucyBhc3luYyBmdW5jdGlvbnMuXG4vLyBTaW5jZSB3ZSBzdXBwb3J0IGJvdGggTmV4dC5qcyAxNCBhbmQgMTUsIHdlIHJldHVybiBhIHVuaW9uIG9mIHRoZSB0d28uXG4vLyBUT0RPOiBSZW1vdmUgdGhpcyBvbmNlIHdlIGRyb3Agc3VwcG9ydCBmb3IgTmV4dC5qcyAxNCwgYW5kIHJlcGxhY2UgaXQgd2l0aCBgZXhwb3J0IHsgY29va2llcywgaGVhZGVycyB9IGZyb20gJ25leHQvaGVhZGVycyc7YFxuLy8gaHR0cHM6Ly9uZXh0anMub3JnL2Jsb2cvbmV4dC0xNSNhc3luYy1yZXF1ZXN0LWFwaXMtYnJlYWtpbmctY2hhbmdlXG5pbXBvcnQgeyBjb29raWVzIGFzIG5leHRDb29raWVzLCBoZWFkZXJzIGFzIG5leHRIZWFkZXJzIH0gZnJvbSAnLi9uZXh0LXN0YXRpYy1hbmFseXNpcy13b3JrYXJvdW5kJztcbmV4cG9ydCBjb25zdCBjb29raWVzID0gbmV4dENvb2tpZXM7XG5leHBvcnQgY29uc3QgaGVhZGVycyA9IG5leHRIZWFkZXJzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __esModule: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.__esModule),\n/* harmony export */   cookies: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies),\n/* harmony export */   draftMode: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.draftMode),\n/* harmony export */   headers: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.headers)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(app-pages-browser)/./node_modules/next/dist/api/headers.js\");\n// Next statically analyzes the imports and ensures that the `next/headers` module is never imported on a client bundle.\n//\n// We know what we're doing though. We ensure at runtime that we never use the module unless we're on the server, so the\n// static analysis is wrong.\n//\n// Fortunately, as a hack, we can get around it by importing them using the `export from` syntax, which the static\n// analyzer does not detect, but Webpack is fine with it.\n//\n// So, we can use the export syntax here, and then import them normally in the main file.\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L25leHQtc3RhdGljLWFuYWx5c2lzLXdvcmthcm91bmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2NcXGRpc3RcXG5leHQtc3RhdGljLWFuYWx5c2lzLXdvcmthcm91bmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTmV4dCBzdGF0aWNhbGx5IGFuYWx5emVzIHRoZSBpbXBvcnRzIGFuZCBlbnN1cmVzIHRoYXQgdGhlIGBuZXh0L2hlYWRlcnNgIG1vZHVsZSBpcyBuZXZlciBpbXBvcnRlZCBvbiBhIGNsaWVudCBidW5kbGUuXG4vL1xuLy8gV2Uga25vdyB3aGF0IHdlJ3JlIGRvaW5nIHRob3VnaC4gV2UgZW5zdXJlIGF0IHJ1bnRpbWUgdGhhdCB3ZSBuZXZlciB1c2UgdGhlIG1vZHVsZSB1bmxlc3Mgd2UncmUgb24gdGhlIHNlcnZlciwgc28gdGhlXG4vLyBzdGF0aWMgYW5hbHlzaXMgaXMgd3JvbmcuXG4vL1xuLy8gRm9ydHVuYXRlbHksIGFzIGEgaGFjaywgd2UgY2FuIGdldCBhcm91bmQgaXQgYnkgaW1wb3J0aW5nIHRoZW0gdXNpbmcgdGhlIGBleHBvcnQgZnJvbWAgc3ludGF4LCB3aGljaCB0aGUgc3RhdGljXG4vLyBhbmFseXplciBkb2VzIG5vdCBkZXRlY3QsIGJ1dCBXZWJwYWNrIGlzIGZpbmUgd2l0aCBpdC5cbi8vXG4vLyBTbywgd2UgY2FuIHVzZSB0aGUgZXhwb3J0IHN5bnRheCBoZXJlLCBhbmQgdGhlbiBpbXBvcnQgdGhlbSBub3JtYWxseSBpbiB0aGUgbWFpbiBmaWxlLlxuZXhwb3J0ICogZnJvbSAnbmV4dC9oZWFkZXJzJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProductionModeErrors: () => (/* binding */ getProductionModeErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/urls */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\");\n\n\nfunction getProductionModeErrors(project) {\n    const errors = [];\n    const domainsFixUrl = `/projects/${project.id}/domains`;\n    if (project.config.allow_localhost) {\n        errors.push({\n            message: \"Localhost is not allowed in production mode, turn off 'Allow localhost' in project settings\",\n            relativeFixUrl: domainsFixUrl,\n        });\n    }\n    for (const { domain } of project.config.domains) {\n        let url;\n        try {\n            url = new URL(domain);\n        }\n        catch (e) {\n            (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.captureError)(\"production-mode-domain-not-valid\", new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Domain was somehow not a valid URL; we should've caught this when setting the domain in the first place\", {\n                domain,\n                projectId: project\n            }));\n            errors.push({\n                message: \"Trusted domain is not a valid URL: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n            continue;\n        }\n        if ((0,_utils_urls__WEBPACK_IMPORTED_MODULE_1__.isLocalhost)(url)) {\n            errors.push({\n                message: \"Localhost domains are not allowed to be trusted in production mode: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n        else if (url.hostname.match(/^\\d+(\\.\\d+)*$/)) {\n            errors.push({\n                message: \"Direct IPs are not valid for trusted domains in production mode: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n        else if (url.protocol !== \"https:\") {\n            errors.push({\n                message: \"Trusted domains should be HTTPS: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n    }\n    return errors;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9oZWxwZXJzL3Byb2R1Y3Rpb24tbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0U7QUFDeEI7QUFDckM7QUFDUDtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQVkseUNBQXlDLDhEQUFtQixzQ0FBc0M7QUFDMUg7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFlBQVksd0RBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGhlbHBlcnNcXHByb2R1Y3Rpb24tbW9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFja0Fzc2VydGlvbkVycm9yLCBjYXB0dXJlRXJyb3IgfSBmcm9tIFwiLi4vdXRpbHMvZXJyb3JzXCI7XG5pbXBvcnQgeyBpc0xvY2FsaG9zdCB9IGZyb20gXCIuLi91dGlscy91cmxzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvZHVjdGlvbk1vZGVFcnJvcnMocHJvamVjdCkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGNvbnN0IGRvbWFpbnNGaXhVcmwgPSBgL3Byb2plY3RzLyR7cHJvamVjdC5pZH0vZG9tYWluc2A7XG4gICAgaWYgKHByb2plY3QuY29uZmlnLmFsbG93X2xvY2FsaG9zdCkge1xuICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgICBtZXNzYWdlOiBcIkxvY2FsaG9zdCBpcyBub3QgYWxsb3dlZCBpbiBwcm9kdWN0aW9uIG1vZGUsIHR1cm4gb2ZmICdBbGxvdyBsb2NhbGhvc3QnIGluIHByb2plY3Qgc2V0dGluZ3NcIixcbiAgICAgICAgICAgIHJlbGF0aXZlRml4VXJsOiBkb21haW5zRml4VXJsLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCB7IGRvbWFpbiB9IG9mIHByb2plY3QuY29uZmlnLmRvbWFpbnMpIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHVybCA9IG5ldyBVUkwoZG9tYWluKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY2FwdHVyZUVycm9yKFwicHJvZHVjdGlvbi1tb2RlLWRvbWFpbi1ub3QtdmFsaWRcIiwgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJEb21haW4gd2FzIHNvbWVob3cgbm90IGEgdmFsaWQgVVJMOyB3ZSBzaG91bGQndmUgY2F1Z2h0IHRoaXMgd2hlbiBzZXR0aW5nIHRoZSBkb21haW4gaW4gdGhlIGZpcnN0IHBsYWNlXCIsIHtcbiAgICAgICAgICAgICAgICBkb21haW4sXG4gICAgICAgICAgICAgICAgcHJvamVjdElkOiBwcm9qZWN0XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJUcnVzdGVkIGRvbWFpbiBpcyBub3QgYSB2YWxpZCBVUkw6IFwiICsgZG9tYWluLFxuICAgICAgICAgICAgICAgIHJlbGF0aXZlRml4VXJsOiBkb21haW5zRml4VXJsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNMb2NhbGhvc3QodXJsKSkge1xuICAgICAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiTG9jYWxob3N0IGRvbWFpbnMgYXJlIG5vdCBhbGxvd2VkIHRvIGJlIHRydXN0ZWQgaW4gcHJvZHVjdGlvbiBtb2RlOiBcIiArIGRvbWFpbixcbiAgICAgICAgICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5ob3N0bmFtZS5tYXRjaCgvXlxcZCsoXFwuXFxkKykqJC8pKSB7XG4gICAgICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJEaXJlY3QgSVBzIGFyZSBub3QgdmFsaWQgZm9yIHRydXN0ZWQgZG9tYWlucyBpbiBwcm9kdWN0aW9uIG1vZGU6IFwiICsgZG9tYWluLFxuICAgICAgICAgICAgICAgIHJlbGF0aXZlRml4VXJsOiBkb21haW5zRml4VXJsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodXJsLnByb3RvY29sICE9PSBcImh0dHBzOlwiKSB7XG4gICAgICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJUcnVzdGVkIGRvbWFpbnMgc2hvdWxkIGJlIEhUVFBTOiBcIiArIGRvbWFpbixcbiAgICAgICAgICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlcnJvcnM7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* reexport safe */ _known_errors__WEBPACK_IMPORTED_MODULE_3__.KnownError),\n/* harmony export */   KnownErrors: () => (/* reexport safe */ _known_errors__WEBPACK_IMPORTED_MODULE_3__.KnownErrors),\n/* harmony export */   StackAdminInterface: () => (/* reexport safe */ _interface_adminInterface__WEBPACK_IMPORTED_MODULE_0__.StackAdminInterface),\n/* harmony export */   StackClientInterface: () => (/* reexport safe */ _interface_clientInterface__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface),\n/* harmony export */   StackServerInterface: () => (/* reexport safe */ _interface_serverInterface__WEBPACK_IMPORTED_MODULE_2__.StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _interface_adminInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interface/adminInterface */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js\");\n/* harmony import */ var _interface_clientInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface/clientInterface */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\");\n/* harmony import */ var _interface_serverInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface/serverInterface */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\");\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./known-errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBaUU7QUFDRTtBQUNBO0FBQ1YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBTdGFja0FkbWluSW50ZXJmYWNlIH0gZnJvbSBcIi4vaW50ZXJmYWNlL2FkbWluSW50ZXJmYWNlXCI7XG5leHBvcnQgeyBTdGFja0NsaWVudEludGVyZmFjZSB9IGZyb20gXCIuL2ludGVyZmFjZS9jbGllbnRJbnRlcmZhY2VcIjtcbmV4cG9ydCB7IFN0YWNrU2VydmVySW50ZXJmYWNlIH0gZnJvbSBcIi4vaW50ZXJmYWNlL3NlcnZlckludGVyZmFjZVwiO1xuZXhwb3J0IHsgS25vd25FcnJvciwgS25vd25FcnJvcnMgfSBmcm9tIFwiLi9rbm93bi1lcnJvcnNcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAdminInterface: () => (/* binding */ StackAdminInterface)\n/* harmony export */ });\n/* harmony import */ var _serverInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serverInterface */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\");\n\nclass StackAdminInterface extends _serverInterface__WEBPACK_IMPORTED_MODULE_0__.StackServerInterface {\n    constructor(options) {\n        super(options);\n        this.options = options;\n    }\n    async sendAdminRequest(path, options, session, requestType = \"admin\") {\n        return await this.sendServerRequest(path, {\n            ...options,\n            headers: {\n                \"x-stack-super-secret-admin-key\": \"superSecretAdminKey\" in this.options ? this.options.superSecretAdminKey : \"\",\n                ...options.headers,\n            },\n        }, session, requestType);\n    }\n    async getProject() {\n        const response = await this.sendAdminRequest(\"/projects/current\", {\n            method: \"GET\",\n        }, null);\n        return await response.json();\n    }\n    async updateProject(update) {\n        const response = await this.sendAdminRequest(\"/projects/current\", {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, null);\n        return await response.json();\n    }\n    async createInternalApiKey(options) {\n        const response = await this.sendAdminRequest(\"/internal/api-keys\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options),\n        }, null);\n        return await response.json();\n    }\n    async listInternalApiKeys() {\n        const response = await this.sendAdminRequest(\"/internal/api-keys\", {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async revokeInternalApiKeyById(id) {\n        await this.sendAdminRequest(`/internal/api-keys/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                revoked: true,\n            }),\n        }, null);\n    }\n    async getInternalApiKey(id, session) {\n        const response = await this.sendAdminRequest(`/internal/api-keys/${id}`, {}, session);\n        return await response.json();\n    }\n    async listEmailTemplates() {\n        const response = await this.sendAdminRequest(`/email-templates`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async updateEmailTemplate(type, data) {\n        const result = await this.sendAdminRequest(`/email-templates/${type}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await result.json();\n    }\n    async resetEmailTemplate(type) {\n        await this.sendAdminRequest(`/email-templates/${type}`, { method: \"DELETE\" }, null);\n    }\n    // Team permission definitions methods\n    async listTeamPermissionDefinitions() {\n        const response = await this.sendAdminRequest(`/team-permission-definitions`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async createTeamPermissionDefinition(data) {\n        const response = await this.sendAdminRequest(\"/team-permission-definitions\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async updateTeamPermissionDefinition(permissionId, data) {\n        const response = await this.sendAdminRequest(`/team-permission-definitions/${permissionId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deleteTeamPermissionDefinition(permissionId) {\n        await this.sendAdminRequest(`/team-permission-definitions/${permissionId}`, { method: \"DELETE\" }, null);\n    }\n    async listProjectPermissionDefinitions() {\n        const response = await this.sendAdminRequest(`/project-permission-definitions`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async createProjectPermissionDefinition(data) {\n        const response = await this.sendAdminRequest(\"/project-permission-definitions\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async updateProjectPermissionDefinition(permissionId, data) {\n        const response = await this.sendAdminRequest(`/project-permission-definitions/${permissionId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deleteProjectPermissionDefinition(permissionId) {\n        await this.sendAdminRequest(`/project-permission-definitions/${permissionId}`, { method: \"DELETE\" }, null);\n    }\n    async getSvixToken() {\n        const response = await this.sendAdminRequest(\"/webhooks/svix-token\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n        return await response.json();\n    }\n    async deleteProject() {\n        await this.sendAdminRequest(\"/projects/current\", {\n            method: \"DELETE\",\n        }, null);\n    }\n    async getMetrics() {\n        const response = await this.sendAdminRequest(\"/internal/metrics\", {\n            method: \"GET\",\n        }, null);\n        return await response.json();\n    }\n    async sendTestEmail(data) {\n        const response = await this.sendAdminRequest(`/internal/send-test-email`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async listSentEmails() {\n        const response = await this.sendAdminRequest(\"/internal/emails\", {\n            method: \"GET\",\n        }, null);\n        return await response.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackClientInterface: () => (/* binding */ StackClientInterface)\n/* harmony export */ });\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! oauth4webapi */ \"(app-pages-browser)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../known-errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n/* harmony import */ var _sessions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sessions */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/sessions.js\");\n/* harmony import */ var _utils_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/crypto */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_globals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/globals */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n/* harmony import */ var _utils_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/http */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/http.js\");\n/* harmony import */ var _utils_objects__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _utils_promises__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _utils_results__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\n\n\n\n\n\n\n\n\nclass StackClientInterface {\n    constructor(options) {\n        this.options = options;\n        // nothing here\n    }\n    get projectId() {\n        return this.options.projectId;\n    }\n    getApiUrl() {\n        return this.options.getBaseUrl() + \"/api/v1\";\n    }\n    async runNetworkDiagnostics(session, requestType) {\n        const tryRequest = async (cb) => {\n            try {\n                await cb();\n                return \"OK\";\n            }\n            catch (e) {\n                return `${e}`;\n            }\n        };\n        const cfTrace = await tryRequest(async () => {\n            const res = await fetch(\"https://1.1.1.1/cdn-cgi/trace\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const apiRoot = session !== undefined && requestType !== undefined ? await tryRequest(async () => {\n            const res = await this.sendClientRequestInner(\"/\", {}, session, requestType);\n            if (res.status === \"error\") {\n                throw res.error;\n            }\n        }) : \"Not tested\";\n        const baseUrlBackend = await tryRequest(async () => {\n            const res = await fetch(new URL(\"/health\", this.getApiUrl()));\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const prodDashboard = await tryRequest(async () => {\n            const res = await fetch(\"https://app.stack-auth.com/health\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const prodBackend = await tryRequest(async () => {\n            const res = await fetch(\"https://api.stack-auth.com/health\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        return {\n            \"navigator?.onLine\": _utils_globals__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator?.onLine,\n            cfTrace,\n            apiRoot,\n            baseUrlBackend,\n            prodDashboard,\n            prodBackend,\n        };\n    }\n    async _createNetworkError(cause, session, requestType) {\n        return new Error((0,_utils_strings__WEBPACK_IMPORTED_MODULE_9__.deindent) `\n      Stack Auth is unable to connect to the server. Please check your internet connection and try again.\n      \n      If the problem persists, please contact support and provide a screenshot of your entire browser console.\n\n      ${cause}\n      \n      ${JSON.stringify(await this.runNetworkDiagnostics(session, requestType), null, 2)}\n    `, { cause: cause });\n    }\n    async _networkRetry(cb, session, requestType) {\n        const retriedResult = await _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.retry(cb, 5, { exponentialDelayBase: 1000 });\n        // try to diagnose the error for the user\n        if (retriedResult.status === \"error\") {\n            if (_utils_globals__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator && !_utils_globals__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator.onLine) {\n                throw new Error(\"Failed to send Stack network request. It seems like you are offline, please check your internet connection and try again. This is not an error with Stack Auth. (window.navigator.onLine is falsy)\", { cause: retriedResult.error });\n            }\n            throw await this._createNetworkError(retriedResult.error, session, requestType);\n        }\n        return retriedResult.data;\n    }\n    async _networkRetryException(cb, session, requestType) {\n        return await this._networkRetry(async () => await _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.fromThrowingAsync(cb), session, requestType);\n    }\n    async fetchNewAccessToken(refreshToken) {\n        if (!('publishableClientKey' in this.options)) {\n            // TODO support it\n            throw new Error(\"Admin session token is currently not supported for fetching new access token. Did you try to log in on a StackApp initiated with the admin session?\");\n        }\n        const as = {\n            issuer: this.options.getBaseUrl(),\n            algorithm: 'oauth2',\n            token_endpoint: this.getApiUrl() + '/auth/oauth/token',\n        };\n        const client = {\n            client_id: this.projectId,\n            client_secret: this.options.publishableClientKey,\n            token_endpoint_auth_method: 'client_secret_post',\n        };\n        const rawResponse = await this._networkRetryException(async () => await oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.refreshTokenGrantRequest(as, client, refreshToken.token));\n        const response = await this._processResponse(rawResponse);\n        if (response.status === \"error\") {\n            const error = response.error;\n            if (error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError) {\n                return null;\n            }\n            throw error;\n        }\n        if (!response.data.ok) {\n            const body = await response.data.text();\n            throw new Error(`Failed to send refresh token request: ${response.status} ${body}`);\n        }\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.processRefreshTokenResponse(as, client, response.data);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.isOAuth2Error(result)) {\n            // TODO Handle OAuth 2.0 response body error\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"OAuth error\", { result });\n        }\n        if (!result.access_token) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Access token not found in token endpoint response, this is weird!\");\n        }\n        return new _sessions__WEBPACK_IMPORTED_MODULE_1__.AccessToken(result.access_token);\n    }\n    async sendClientRequest(path, requestOptions, session, requestType = \"client\") {\n        session ??= this.createSession({\n            refreshToken: null,\n        });\n        return await this._networkRetry(() => this.sendClientRequestInner(path, requestOptions, session, requestType), session, requestType);\n    }\n    createSession(options) {\n        const session = new _sessions__WEBPACK_IMPORTED_MODULE_1__.InternalSession({\n            refreshAccessTokenCallback: async (refreshToken) => await this.fetchNewAccessToken(refreshToken),\n            ...options,\n        });\n        return session;\n    }\n    async sendClientRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n        try {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await this.sendClientRequest(path, requestOptions, tokenStoreOrNull));\n        }\n        catch (e) {\n            for (const errorType of errorsToCatch) {\n                if (e instanceof errorType) {\n                    return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(e);\n                }\n            }\n            throw e;\n        }\n    }\n    async sendClientRequestInner(path, options, session, requestType) {\n        /**\n         * `tokenObj === null` means the session is invalid/not logged in\n         */\n        let tokenObj = await session.getOrFetchLikelyValidTokens(20000);\n        let adminSession = \"projectOwnerSession\" in this.options ? this.options.projectOwnerSession : null;\n        let adminTokenObj = adminSession ? await adminSession.getOrFetchLikelyValidTokens(20000) : null;\n        // all requests should be dynamic to prevent Next.js caching\n        await this.options.prepareRequest?.();\n        let url = this.getApiUrl() + path;\n        if (url.endsWith(\"/\")) {\n            url = url.slice(0, -1);\n        }\n        const params = {\n            /**\n             * This fetch may be cross-origin, in which case we don't want to send cookies of the\n             * original origin (this is the default behavior of `credentials`).\n             *\n             * To help debugging, also omit cookies on same-origin, so we don't accidentally\n             * implement reliance on cookies anywhere.\n             *\n             * However, Cloudflare Workers don't actually support `credentials`, so we only set it\n             * if Cloudflare-exclusive globals are not detected. https://github.com/cloudflare/workers-sdk/issues/2514\n             */\n            ...(\"WebSocketPair\" in _utils_globals__WEBPACK_IMPORTED_MODULE_4__.globalVar ? {} : {\n                credentials: \"omit\",\n            }),\n            ...options,\n            headers: {\n                \"X-Stack-Override-Error-Status\": \"true\",\n                \"X-Stack-Project-Id\": this.projectId,\n                \"X-Stack-Access-Type\": requestType,\n                \"X-Stack-Client-Version\": this.options.clientVersion,\n                ...(tokenObj ? {\n                    \"X-Stack-Access-Token\": tokenObj.accessToken.token,\n                } : {}),\n                ...(tokenObj?.refreshToken ? {\n                    \"X-Stack-Refresh-Token\": tokenObj.refreshToken.token,\n                } : {}),\n                ...('publishableClientKey' in this.options ? {\n                    \"X-Stack-Publishable-Client-Key\": this.options.publishableClientKey,\n                } : {}),\n                ...(adminTokenObj ? {\n                    \"X-Stack-Admin-Access-Token\": adminTokenObj.accessToken.token,\n                } : {}),\n                /**\n                 * Next.js until v15 would cache fetch requests by default, and forcefully disabling it was nearly impossible.\n                 *\n                 * This header is used to change the cache key and hence always disable it, because we do our own caching.\n                 *\n                 * When we drop support for Next.js <15, we may be able to remove this header, but please make sure that this is\n                 * the case (I haven't actually tested.)\n                 */\n                \"X-Stack-Random-Nonce\": (0,_utils_crypto__WEBPACK_IMPORTED_MODULE_2__.generateSecureRandomString)(),\n                ...this.options.extraRequestHeaders,\n                ...options.headers,\n            },\n            /**\n             * Cloudflare Workers does not support cache, so don't pass it there\n             */\n            ...(\"WebSocketPair\" in _utils_globals__WEBPACK_IMPORTED_MODULE_4__.globalVar ? {} : {\n                cache: \"no-store\",\n            }),\n        };\n        let rawRes;\n        try {\n            rawRes = await fetch(url, params);\n        }\n        catch (e) {\n            if (e instanceof TypeError) {\n                // Likely to be a network error. Retry if the request is idempotent, throw network error otherwise.\n                if (_utils_http__WEBPACK_IMPORTED_MODULE_5__.HTTP_METHODS[(params.method ?? \"GET\")].idempotent) {\n                    return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(e);\n                }\n                else {\n                    throw await this._createNetworkError(e, session, requestType);\n                }\n            }\n            throw e;\n        }\n        const processedRes = await this._processResponse(rawRes);\n        if (processedRes.status === \"error\") {\n            // If the access token is invalid, reset it and retry\n            if (processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.InvalidAccessToken) {\n                if (!tokenObj) {\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Received invalid access token, but session is not logged in\", { tokenObj, processedRes });\n                }\n                session.markAccessTokenExpired(tokenObj.accessToken);\n                return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(processedRes.error);\n            }\n            // Same for the admin access token\n            // TODO HACK: Some of the backend hasn't been ported to use the new error codes, so if we have project owner tokens we need to check for ApiKeyNotFound too. Once the migration to smartRouteHandlers is complete, we can check for InvalidAdminAccessToken only.\n            if (adminSession && (processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.InvalidAdminAccessToken || processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ApiKeyNotFound)) {\n                if (!adminTokenObj) {\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Received invalid admin access token, but admin session is not logged in\", { adminTokenObj, processedRes });\n                }\n                adminSession.markAccessTokenExpired(adminTokenObj.accessToken);\n                return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(processedRes.error);\n            }\n            // Known errors are client side errors, so except for the ones above they should not be retried\n            // Hence, throw instead of returning an error\n            throw processedRes.error;\n        }\n        const res = Object.assign(processedRes.data, {\n            usedTokens: tokenObj,\n        });\n        if (res.ok) {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(res);\n        }\n        else if (res.status === 429) {\n            // Rate limited, so retry if we can\n            const retryAfter = res.headers.get(\"Retry-After\");\n            if (retryAfter !== null) {\n                console.log(`Rate limited while sending request to ${url}. Will retry after ${retryAfter} seconds...`);\n                await (0,_utils_promises__WEBPACK_IMPORTED_MODULE_7__.wait)(Number(retryAfter) * 1000);\n                return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(new Error(`Rate limited, retrying after ${retryAfter} seconds`));\n            }\n            console.log(`Rate limited while sending request to ${url}, no retry-after header received. Retrying...`);\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(new Error(\"Rate limited, no retry-after header received\"));\n        }\n        else {\n            const error = await res.text();\n            const errorObj = new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(`Failed to send request to ${url}: ${res.status} ${error}`, { request: params, res, path });\n            if (res.status === 508 && error.includes(\"INFINITE_LOOP_DETECTED\")) {\n                // Some Vercel deployments seem to have an odd infinite loop bug. In that case, retry.\n                // See: https://github.com/stack-auth/stack-auth/issues/319\n                return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(errorObj);\n            }\n            // Do not retry, throw error instead of returning one\n            throw errorObj;\n        }\n    }\n    async _processResponse(rawRes) {\n        let res = rawRes;\n        if (rawRes.headers.has(\"x-stack-actual-status\")) {\n            const actualStatus = Number(rawRes.headers.get(\"x-stack-actual-status\"));\n            res = new Response(rawRes.body, {\n                status: actualStatus,\n                statusText: rawRes.statusText,\n                headers: rawRes.headers,\n            });\n        }\n        // Handle known errors\n        if (res.headers.has(\"x-stack-known-error\")) {\n            const errorJson = await res.json();\n            if (res.headers.get(\"x-stack-known-error\") !== errorJson.code) {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Mismatch between x-stack-known-error header and error code in body; the server's response is invalid\");\n            }\n            const error = _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownError.fromJson(errorJson);\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(res);\n    }\n    async checkFeatureSupport(options) {\n        const res = await this.sendClientRequest(\"/check-feature-support\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(options),\n        }, null);\n        throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(await res.text());\n    }\n    async sendForgotPasswordEmail(email, callbackUrl) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/send-reset-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.UserNotFound]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n        }\n    }\n    async sendVerificationEmail(email, callbackUrl, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/contact-channels/send-verification-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailAlreadyVerified]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async sendMagicLinkEmail(email, callbackUrl) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/otp/send-sign-in-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RedirectUrlNotWhitelisted]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n        }\n    }\n    async resetPassword(options) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"onlyVerifyCode\" in options ? \"/auth/password/reset/check-code\" : \"/auth/password/reset\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: options.code,\n                ...(\"password\" in options ? { password: options.password } : {}),\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n        }\n    }\n    async updatePassword(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                old_password: options.oldPassword,\n                new_password: options.newPassword,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordConfirmationMismatch, _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async setPassword(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/set\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(options),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async verifyPasswordResetCode(code) {\n        const res = await this.resetPassword({ code, onlyVerifyCode: true });\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n        }\n    }\n    async verifyEmail(code) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/contact-channels/verify\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n        }\n    }\n    async initiatePasskeyRegistration(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/passkey/initiate-passkey-registration\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(options),\n        }, session, []);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n    }\n    async registerPasskey(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/passkey/register\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(options),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasskeyRegistrationFailed]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n    }\n    async initiatePasskeyAuthentication(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/passkey/initiate-passkey-authentication\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(options),\n        }, session, []);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n    }\n    async sendTeamInvitation(options) {\n        await this.sendClientRequest(\"/team-invitations/send-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: options.email,\n                team_id: options.teamId,\n                callback_url: options.callbackUrl,\n            }),\n        }, options.session);\n    }\n    async acceptTeamInvitation(options) {\n        const res = await this.sendClientRequestAndCatchKnownError(options.type === 'check' ?\n            \"/team-invitations/accept/check-code\" :\n            options.type === 'details' ?\n                \"/team-invitations/accept/details\" :\n                \"/team-invitations/accept\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: options.code,\n            }),\n        }, options.session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n        }\n    }\n    async totpMfa(attemptCode, totp, session) {\n        const res = await this.sendClientRequest(\"/auth/mfa/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: attemptCode,\n                type: \"totp\",\n                totp: totp,\n            }),\n        }, session);\n        const result = await res.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n            newUser: result.is_new_user,\n        };\n    }\n    async signInWithCredential(email, password, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailPasswordMismatch]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        const result = await res.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        });\n    }\n    async signUpWithCredential(email, password, emailVerificationRedirectUrl, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/sign-up\", {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                password,\n                verification_callback_url: emailVerificationRedirectUrl,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.UserWithEmailAlreadyExists, _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        const result = await res.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        });\n    }\n    async signUpAnonymously(session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/anonymous/sign-up\", {\n            method: \"POST\",\n        }, session, []);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        const result = await res.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        });\n    }\n    async signInWithMagicLink(code) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/otp/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        const result = await res.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n            newUser: result.is_new_user,\n        });\n    }\n    async signInWithPasskey(body) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/passkey/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasskeyAuthenticationFailed]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n        }\n        const result = await res.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        });\n    }\n    async getOAuthUrl(options) {\n        const updatedRedirectUrl = new URL(options.redirectUrl);\n        for (const key of [\"code\", \"state\"]) {\n            if (updatedRedirectUrl.searchParams.has(key)) {\n                console.warn(\"Redirect URL already contains \" + key + \" parameter, removing it as it will be overwritten by the OAuth callback\");\n            }\n            updatedRedirectUrl.searchParams.delete(key);\n        }\n        if (!('publishableClientKey' in this.options)) {\n            // TODO fix\n            throw new Error(\"Admin session token is currently not supported for OAuth\");\n        }\n        const url = new URL(this.getApiUrl() + \"/auth/oauth/authorize/\" + options.provider.toLowerCase());\n        url.searchParams.set(\"client_id\", this.projectId);\n        url.searchParams.set(\"client_secret\", this.options.publishableClientKey);\n        url.searchParams.set(\"redirect_uri\", updatedRedirectUrl.toString());\n        url.searchParams.set(\"scope\", \"legacy\");\n        url.searchParams.set(\"state\", options.state);\n        url.searchParams.set(\"grant_type\", \"authorization_code\");\n        url.searchParams.set(\"code_challenge\", options.codeChallenge);\n        url.searchParams.set(\"code_challenge_method\", \"S256\");\n        url.searchParams.set(\"response_type\", \"code\");\n        url.searchParams.set(\"type\", options.type);\n        url.searchParams.set(\"error_redirect_url\", options.errorRedirectUrl);\n        if (options.afterCallbackRedirectUrl) {\n            url.searchParams.set(\"after_callback_redirect_url\", options.afterCallbackRedirectUrl);\n        }\n        if (options.type === \"link\") {\n            const tokens = await options.session.getOrFetchLikelyValidTokens(20000);\n            url.searchParams.set(\"token\", tokens?.accessToken.token || \"\");\n            if (options.providerScope) {\n                url.searchParams.set(\"provider_scope\", options.providerScope);\n            }\n        }\n        return url.toString();\n    }\n    async callOAuthCallback(options) {\n        if (!('publishableClientKey' in this.options)) {\n            // TODO fix\n            throw new Error(\"Admin session token is currently not supported for OAuth\");\n        }\n        const as = {\n            issuer: this.options.getBaseUrl(),\n            algorithm: 'oauth2',\n            token_endpoint: this.getApiUrl() + '/auth/oauth/token',\n        };\n        const client = {\n            client_id: this.projectId,\n            client_secret: this.options.publishableClientKey,\n            token_endpoint_auth_method: 'client_secret_post',\n        };\n        const params = await this._networkRetryException(async () => oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.validateAuthResponse(as, client, options.oauthParams, options.state));\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.isOAuth2Error(params)) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Error validating outer OAuth response\", { params }); // Handle OAuth 2.0 redirect error\n        }\n        const response = await oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.authorizationCodeGrantRequest(as, client, params, options.redirectUri, options.codeVerifier);\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.processAuthorizationCodeOAuth2Response(as, client, response);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_10__.isOAuth2Error(result)) {\n            if (\"code\" in result && result.code === \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\") {\n                throw new _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.MultiFactorAuthenticationRequired(result.details.attempt_code);\n            }\n            // TODO Handle OAuth 2.0 response body error\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Outer OAuth error during authorization code response\", { result });\n        }\n        return {\n            newUser: result.is_new_user,\n            afterCallbackRedirectUrl: result.after_callback_redirect_url,\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_3__.throwErr)(\"Refresh token not found in outer OAuth response\"),\n        };\n    }\n    async signOut(session) {\n        const tokenObj = await session.getOrFetchLikelyValidTokens(20000);\n        if (tokenObj) {\n            const resOrError = await this.sendClientRequestAndCatchKnownError(\"/auth/sessions/current\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({}),\n            }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError]);\n            if (resOrError.status === \"error\") {\n                if (resOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError) {\n                    // refresh token was already invalid, just continue like nothing happened\n                }\n                else {\n                    // this should never happen\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Unexpected error\", { error: resOrError.error });\n                }\n            }\n            else {\n                // user was signed out successfully, all good\n            }\n        }\n        session.markInvalid();\n    }\n    async getClientUserByToken(session) {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/users/me\", {}, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser]);\n        if (responseOrError.status === \"error\") {\n            if (responseOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser) {\n                return null;\n            }\n            else {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n            }\n        }\n        const response = responseOrError.data;\n        const user = await response.json();\n        if (!user)\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n        return user;\n    }\n    async listTeamInvitations(options, session) {\n        const response = await this.sendClientRequest(\"/team-invitations?\" + new URLSearchParams({ team_id: options.teamId }), {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async revokeTeamInvitation(invitationId, teamId, session) {\n        await this.sendClientRequest(`/team-invitations/${invitationId}?team_id=${teamId}`, { method: \"DELETE\" }, session);\n    }\n    async listTeamMemberProfiles(options, session) {\n        const response = await this.sendClientRequest(\"/team-member-profiles?\" + new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_6__.filterUndefined)({\n            team_id: options.teamId,\n            user_id: options.userId,\n        })), {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async getTeamMemberProfile(options, session) {\n        const response = await this.sendClientRequest(`/team-member-profiles/${options.teamId}/${options.userId}`, {}, session);\n        return await response.json();\n    }\n    async leaveTeam(teamId, session) {\n        await this.sendClientRequest(`/team-memberships/${teamId}/me`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, session);\n    }\n    async updateTeamMemberProfile(options, session) {\n        await this.sendClientRequest(`/team-member-profiles/${options.teamId}/${options.userId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options.profile),\n        }, session);\n    }\n    async updateTeam(options, session) {\n        await this.sendClientRequest(`/teams/${options.teamId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options.data),\n        }, session);\n    }\n    async listCurrentUserTeamPermissions(options, session) {\n        const response = await this.sendClientRequest(`/team-permissions?team_id=${options.teamId}&user_id=me&recursive=${options.recursive}`, {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listCurrentUserProjectPermissions(options, session) {\n        const response = await this.sendClientRequest(`/project-permissions?user_id=me&recursive=${options.recursive}`, {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listCurrentUserTeams(session) {\n        const response = await this.sendClientRequest(\"/teams?user_id=me\", {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async getClientProject() {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/projects/current\", {}, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ProjectNotFound]);\n        if (responseOrError.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n        }\n        const response = responseOrError.data;\n        const project = await response.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(project);\n    }\n    async updateClientUser(update, session) {\n        await this.sendClientRequest(\"/users/me\", {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, session);\n    }\n    async listProjects(session) {\n        const response = await this.sendClientRequest(\"/internal/projects\", {}, session);\n        if (!response.ok) {\n            throw new Error(\"Failed to list projects: \" + response.status + \" \" + (await response.text()));\n        }\n        const json = await response.json();\n        return json.items;\n    }\n    async createProject(project, session) {\n        const fetchResponse = await this.sendClientRequest(\"/internal/projects\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(project),\n        }, session);\n        if (!fetchResponse.ok) {\n            throw new Error(\"Failed to create project: \" + fetchResponse.status + \" \" + (await fetchResponse.text()));\n        }\n        const json = await fetchResponse.json();\n        return json;\n    }\n    async createProviderAccessToken(provider, scope, session) {\n        const response = await this.sendClientRequest(`/connected-accounts/me/${provider}/access-token`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ scope }),\n        }, session);\n        return await response.json();\n    }\n    async createClientTeam(data, session) {\n        const response = await this.sendClientRequest(\"/teams\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session);\n        return await response.json();\n    }\n    async deleteTeam(teamId, session) {\n        await this.sendClientRequest(`/teams/${teamId}`, {\n            method: \"DELETE\",\n        }, session);\n    }\n    async deleteCurrentUser(session) {\n        await this.sendClientRequest(\"/users/me\", {\n            method: \"DELETE\",\n        }, session);\n    }\n    async createClientContactChannel(data, session) {\n        const response = await this.sendClientRequest(\"/contact-channels\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session);\n        return await response.json();\n    }\n    async updateClientContactChannel(id, data, session) {\n        const response = await this.sendClientRequest(`/contact-channels/me/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session);\n        return await response.json();\n    }\n    async deleteClientContactChannel(id, session) {\n        await this.sendClientRequest(`/contact-channels/me/${id}`, {\n            method: \"DELETE\",\n        }, session);\n    }\n    async deleteSession(sessionId, session) {\n        await this.sendClientRequest(`/auth/sessions/${sessionId}?user_id=me`, {\n            method: \"DELETE\",\n        }, session);\n    }\n    async listSessions(session) {\n        const response = await this.sendClientRequest(\"/auth/sessions?user_id=me\", {\n            method: \"GET\",\n        }, session);\n        return await response.json();\n    }\n    async listClientContactChannels(session) {\n        const response = await this.sendClientRequest(\"/contact-channels?user_id=me\", {\n            method: \"GET\",\n        }, session);\n        const json = await response.json();\n        return json.items;\n    }\n    async sendCurrentUserContactChannelVerificationEmail(contactChannelId, callbackUrl, session) {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(`/contact-channels/me/${contactChannelId}/send-verification-code`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ callback_url: callbackUrl }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailAlreadyVerified]);\n        if (responseOrError.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n    }\n    async cliLogin(loginCode, refreshToken, session) {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/auth/cli/complete\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                login_code: loginCode,\n                refresh_token: refreshToken,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.SchemaError]);\n        if (responseOrError.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_8__.Result.ok(undefined);\n    }\n    async _getApiKeyRequestInfo(options) {\n        if (\"user_id\" in options && \"team_id\" in options) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Cannot specify both user_id and team_id in _getApiKeyRequestInfo\");\n        }\n        return {\n            endpoint: \"team_id\" in options ? \"/team-api-keys\" : \"/user-api-keys\",\n            queryParams: new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_6__.filterUndefinedOrNull)(options)),\n        };\n    }\n    async listProjectApiKeys(options, session, requestType) {\n        const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n        const response = await sendRequest(`${endpoint}?${queryParams.toString()}`, {\n            method: \"GET\",\n        }, session, requestType);\n        const json = await response.json();\n        return json.items;\n    }\n    async createProjectApiKey(data, session, requestType) {\n        const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n        const { endpoint } = await this._getApiKeyRequestInfo(data);\n        const response = await sendRequest(`${endpoint}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session, requestType);\n        return await response.json();\n    }\n    async getProjectApiKey(options, keyId, session, requestType) {\n        const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n        const response = await sendRequest(`${endpoint}/${keyId}?${queryParams.toString()}`, {\n            method: \"GET\",\n        }, session, requestType);\n        return await response.json();\n    }\n    async updateProjectApiKey(options, keyId, data, session, requestType) {\n        const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n        const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n        const response = await sendRequest(`${endpoint}/${keyId}?${queryParams.toString()}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session, requestType);\n        return await response.json();\n    }\n    async checkProjectApiKey(type, apiKey, session, requestType) {\n        const sendRequest = (requestType === \"client\" ? this.sendClientRequestAndCatchKnownError : this.sendServerRequestAndCatchKnownError).bind(this);\n        const result = await sendRequest(`/${type}-api-keys/check`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ api_key: apiKey }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ApiKeyNotValid]);\n        if (result.status === \"error\") {\n            return null;\n        }\n        return await result.data.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackServerInterface: () => (/* binding */ StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../known-errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_objects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _utils_results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _utils_urls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/urls */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\");\n/* harmony import */ var _clientInterface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clientInterface */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\");\n\n\n\n\n\n\nclass StackServerInterface extends _clientInterface__WEBPACK_IMPORTED_MODULE_5__.StackClientInterface {\n    constructor(options) {\n        super(options);\n        this.options = options;\n    }\n    async sendServerRequest(path, options, session, requestType = \"server\") {\n        return await this.sendClientRequest(path, {\n            ...options,\n            headers: {\n                \"x-stack-secret-server-key\": \"secretServerKey\" in this.options ? this.options.secretServerKey : \"\",\n                ...options.headers,\n            },\n        }, session, requestType);\n    }\n    async sendServerRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n        try {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(await this.sendServerRequest(path, requestOptions, tokenStoreOrNull));\n        }\n        catch (e) {\n            for (const errorType of errorsToCatch) {\n                if (e instanceof errorType) {\n                    return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.error(e);\n                }\n            }\n            throw e;\n        }\n    }\n    async createServerUser(data) {\n        const response = await this.sendServerRequest(\"/users\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async getServerUserByToken(session) {\n        const responseOrError = await this.sendServerRequestAndCatchKnownError(\"/users/me\", {}, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser]);\n        if (responseOrError.status === \"error\") {\n            if (responseOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser) {\n                return null;\n            }\n            else {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n            }\n        }\n        const response = responseOrError.data;\n        const user = await response.json();\n        if (!user)\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n        return user;\n    }\n    async getServerUserById(userId) {\n        const responseOrError = await this.sendServerRequestAndCatchKnownError((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/users/${userId}`, {}, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.UserNotFound]);\n        if (responseOrError.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.error(responseOrError.error);\n        }\n        const user = await responseOrError.data.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(user);\n    }\n    async listServerTeamInvitations(options) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-invitations?team_id=${options.teamId}`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async revokeServerTeamInvitation(invitationId, teamId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-invitations/${invitationId}?team_id=${teamId}`, { method: \"DELETE\" }, null);\n    }\n    async listServerTeamMemberProfiles(options) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-member-profiles?team_id=${options.teamId}`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async getServerTeamMemberProfile(options) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-member-profiles/${options.teamId}/${options.userId}`, {}, null);\n        return await response.json();\n    }\n    async listServerTeamPermissions(options, session) {\n        const response = await this.sendServerRequest(`/team-permissions?${new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            user_id: options.userId,\n            team_id: options.teamId,\n            recursive: options.recursive.toString(),\n        }))}`, {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listServerProjectPermissions(options, session) {\n        const response = await this.sendServerRequest(`/project-permissions?${new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            user_id: options.userId,\n            recursive: options.recursive.toString(),\n        }))}`, {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listServerUsers(options) {\n        const searchParams = new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            cursor: options.cursor,\n            limit: options.limit?.toString(),\n            desc: options.desc?.toString(),\n            ...options.orderBy ? {\n                order_by: {\n                    signedUpAt: \"signed_up_at\",\n                }[options.orderBy],\n            } : {},\n            ...options.query ? {\n                query: options.query,\n            } : {},\n        }));\n        const response = await this.sendServerRequest(\"/users?\" + searchParams.toString(), {}, null);\n        return await response.json();\n    }\n    async listServerTeams(options) {\n        const response = await this.sendServerRequest(`/teams?${new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            user_id: options?.userId,\n        }))}`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async getServerTeam(teamId) {\n        const response = await this.sendServerRequest(`/teams/${teamId}`, {}, null);\n        return await response.json();\n    }\n    async listServerTeamUsers(teamId) {\n        const response = await this.sendServerRequest(`/users?team_id=${teamId}`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    /* when passing a session, the user will be added to the team */\n    async createServerTeam(data) {\n        const response = await this.sendServerRequest(\"/teams\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async updateServerTeam(teamId, data) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/teams/${teamId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deleteServerTeam(teamId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/teams/${teamId}`, { method: \"DELETE\" }, null);\n    }\n    async addServerUserToTeam(options) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n        return await response.json();\n    }\n    async removeServerUserFromTeam(options) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async updateServerUser(userId, update) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/users/${userId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, null);\n        return await response.json();\n    }\n    async createServerProviderAccessToken(userId, provider, scope) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/connected-accounts/${userId}/${provider}/access-token`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ scope }),\n        }, null);\n        return await response.json();\n    }\n    async createServerUserSession(userId, expiresInMillis, isImpersonation) {\n        const response = await this.sendServerRequest(\"/auth/sessions\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: userId,\n                expires_in_millis: expiresInMillis,\n                is_impersonation: isImpersonation,\n            }),\n        }, null);\n        const result = await response.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        };\n    }\n    async leaveServerTeam(options) {\n        await this.sendClientRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async updateServerTeamMemberProfile(options) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-member-profiles/${options.teamId}/${options.userId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options.profile),\n        }, null);\n    }\n    async grantServerTeamUserPermission(teamId, userId, permissionId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-permissions/${teamId}/${userId}/${permissionId}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async revokeServerTeamUserPermission(teamId, userId, permissionId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/team-permissions/${teamId}/${userId}/${permissionId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async deleteServerUser(userId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/users/${userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async createServerContactChannel(data) {\n        const response = await this.sendServerRequest(\"/contact-channels\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async updateServerContactChannel(userId, contactChannelId, data) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/contact-channels/${userId}/${contactChannelId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deleteServerContactChannel(userId, contactChannelId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/contact-channels/${userId}/${contactChannelId}`, {\n            method: \"DELETE\",\n        }, null);\n    }\n    async listServerContactChannels(userId) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/contact-channels?user_id=${userId}`, {\n            method: \"GET\",\n        }, null);\n        const json = await response.json();\n        return json.items;\n    }\n    async sendServerContactChannelVerificationEmail(userId, contactChannelId, callbackUrl) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/contact-channels/${userId}/${contactChannelId}/send-verification-code`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ callback_url: callbackUrl }),\n        }, null);\n    }\n    async listServerSessions(userId) {\n        const response = await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/auth/sessions?user_id=${userId}`, {\n            method: \"GET\",\n        }, null);\n        return await response.json();\n    }\n    async deleteServerSession(sessionId) {\n        await this.sendServerRequest((0,_utils_urls__WEBPACK_IMPORTED_MODULE_4__.urlString) `/auth/sessions/${sessionId}`, {\n            method: \"DELETE\",\n        }, null);\n    }\n    async sendServerTeamInvitation(options) {\n        await this.sendServerRequest(\"/team-invitations/send-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: options.email,\n                team_id: options.teamId,\n                callback_url: options.callbackUrl,\n            }),\n        }, null);\n    }\n    async updatePassword(options) {\n        const res = await this.sendServerRequestAndCatchKnownError(\"/auth/password/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                old_password: options.oldPassword,\n                new_password: options.newPassword,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordConfirmationMismatch, _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/known-errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/known-errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* binding */ KnownError),\n/* harmony export */   KnownErrors: () => (/* binding */ KnownErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/functions */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\nclass KnownError extends _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StatusError {\n    constructor(statusCode, humanReadableMessage, details) {\n        super(statusCode, humanReadableMessage);\n        this.statusCode = statusCode;\n        this.humanReadableMessage = humanReadableMessage;\n        this.details = details;\n        this.name = \"KnownError\";\n    }\n    getBody() {\n        return new TextEncoder().encode(JSON.stringify(this.toDescriptiveJson(), undefined, 2));\n    }\n    getHeaders() {\n        return {\n            \"Content-Type\": [\"application/json; charset=utf-8\"],\n            \"X-Stack-Known-Error\": [this.errorCode],\n        };\n    }\n    toDescriptiveJson() {\n        return {\n            code: this.errorCode,\n            ...this.details ? { details: this.details } : {},\n            error: this.humanReadableMessage,\n        };\n    }\n    get errorCode() {\n        return this.constructor.errorCode ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Can't find error code for this KnownError. Is its constructor a KnownErrorConstructor? ${this}`);\n    }\n    static constructorArgsFromJson(json) {\n        return [\n            400,\n            json.message,\n            json,\n        ];\n    }\n    static fromJson(json) {\n        for (const [_, KnownErrorType] of Object.entries(KnownErrors)) {\n            if (json.code === KnownErrorType.prototype.errorCode) {\n                const constructorArgs = KnownErrorType.constructorArgsFromJson(json);\n                return new KnownErrorType(\n                // @ts-expect-error\n                ...constructorArgs);\n            }\n        }\n        throw new Error(`Unknown KnownError code. You may need to update your version of Stack to see more detailed information. ${json.code}: ${json.message}`);\n    }\n}\nconst knownErrorConstructorErrorCodeSentinel = Symbol(\"knownErrorConstructorErrorCodeSentinel\");\nfunction createKnownErrorConstructor(SuperClass, errorCode, create, constructorArgsFromJson) {\n    const createFn = create === \"inherit\" ? _utils_functions__WEBPACK_IMPORTED_MODULE_1__.identityArgs : create;\n    const constructorArgsFromJsonFn = constructorArgsFromJson === \"inherit\" ? SuperClass.constructorArgsFromJson : constructorArgsFromJson;\n    // @ts-expect-error this is not a mixin, but TS detects it as one\n    class KnownErrorImpl extends SuperClass {\n        constructor(...args) {\n            // @ts-expect-error DEVIN, STOP REMOVING THIS LINE YOU DUMBASS, YES TYPESCRIPT DOES THROW AN ERROR IF YOU DON'T HAVE IT, NO THIS IS NOT \"UNUSED\", AND YES YOU ARE BREAKING OUR CI PIPELINE EVERY TIME YOU DO IT\n            super(...createFn(...args));\n            this.name = `KnownError<${errorCode}>`;\n            this.constructorArgs = args;\n        }\n        static constructorArgsFromJson(json) {\n            return constructorArgsFromJsonFn(json.details);\n        }\n    }\n    KnownErrorImpl.errorCode = errorCode;\n    ;\n    // @ts-expect-error\n    return KnownErrorImpl;\n}\nconst UnsupportedError = createKnownErrorConstructor(KnownError, \"UNSUPPORTED_ERROR\", (originalErrorCode) => [\n    500,\n    `An error occurred that is not currently supported (possibly because it was added in a version of Stack that is newer than this client). The original unsupported error code was: ${originalErrorCode}`,\n    {\n        originalErrorCode,\n    },\n], (json) => [\n    json?.originalErrorCode ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"originalErrorCode not found in UnsupportedError details\"),\n]);\nconst BodyParsingError = createKnownErrorConstructor(KnownError, \"BODY_PARSING_ERROR\", (message) => [\n    400,\n    message,\n], (json) => [json.message]);\nconst SchemaError = createKnownErrorConstructor(KnownError, \"SCHEMA_ERROR\", (message) => [\n    400,\n    message || (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"SchemaError requires a message\"),\n    {\n        message,\n    },\n], (json) => [json.message]);\nconst AllOverloadsFailed = createKnownErrorConstructor(KnownError, \"ALL_OVERLOADS_FAILED\", (overloadErrors) => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      This endpoint has multiple overloads, but they all failed to process the request.\n\n        ${overloadErrors.map((e, i) => (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n          Overload ${i + 1}: ${JSON.stringify(e, undefined, 2)}\n        `).join(\"\\n\\n\")}\n    `,\n    {\n        overload_errors: overloadErrors,\n    },\n], (json) => [\n    json?.overload_errors ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"overload_errors not found in AllOverloadsFailed details\"),\n]);\nconst ProjectAuthenticationError = createKnownErrorConstructor(KnownError, \"PROJECT_AUTHENTICATION_ERROR\", \"inherit\", \"inherit\");\nconst InvalidProjectAuthentication = createKnownErrorConstructor(ProjectAuthenticationError, \"INVALID_PROJECT_AUTHENTICATION\", \"inherit\", \"inherit\");\nconst ProjectKeyWithoutAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"PROJECT_KEY_WITHOUT_ACCESS_TYPE\", () => [\n    400,\n    \"Either an API key or an admin access token was provided, but the x-stack-access-type header is missing. Set it to 'client', 'server', or 'admin' as appropriate.\",\n], () => []);\nconst InvalidAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_ACCESS_TYPE\", (accessType) => [\n    400,\n    `The x-stack-access-type header must be 'client', 'server', or 'admin', but was '${accessType}'.`,\n], (json) => [\n    json?.accessType ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"accessType not found in InvalidAccessType details\"),\n]);\nconst AccessTypeWithoutProjectId = createKnownErrorConstructor(InvalidProjectAuthentication, \"ACCESS_TYPE_WITHOUT_PROJECT_ID\", (accessType) => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      The x-stack-access-type header was '${accessType}', but the x-stack-project-id header was not provided.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    `,\n    {\n        request_type: accessType,\n    },\n], (json) => [json.request_type]);\nconst AccessTypeRequired = createKnownErrorConstructor(InvalidProjectAuthentication, \"ACCESS_TYPE_REQUIRED\", () => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      You must specify an access level for this Stack project. Make sure project API keys are provided (eg. x-stack-publishable-client-key) and you set the x-stack-access-type header to 'client', 'server', or 'admin'.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    `,\n], () => []);\nconst InsufficientAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"INSUFFICIENT_ACCESS_TYPE\", (actualAccessType, allowedAccessTypes) => [\n    401,\n    `The x-stack-access-type header must be ${allowedAccessTypes.map(s => `'${s}'`).join(\" or \")}, but was '${actualAccessType}'.`,\n    {\n        actual_access_type: actualAccessType,\n        allowed_access_types: allowedAccessTypes,\n    },\n], (json) => [\n    json.actual_access_type,\n    json.allowed_access_types,\n]);\nconst InvalidPublishableClientKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_PUBLISHABLE_CLIENT_KEY\", (projectId) => [\n    401,\n    `The publishable key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidSecretServerKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_SECRET_SERVER_KEY\", (projectId) => [\n    401,\n    `The secret server key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidSuperSecretAdminKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_SUPER_SECRET_ADMIN_KEY\", (projectId) => [\n    401,\n    `The super secret admin key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidAdminAccessToken = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_ADMIN_ACCESS_TOKEN\", \"inherit\", \"inherit\");\nconst UnparsableAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, \"UNPARSABLE_ADMIN_ACCESS_TOKEN\", () => [\n    401,\n    \"Admin access token is not parsable.\",\n], () => []);\nconst AdminAccessTokenExpired = createKnownErrorConstructor(InvalidAdminAccessToken, \"ADMIN_ACCESS_TOKEN_EXPIRED\", (expiredAt) => [\n    401,\n    `Admin access token has expired. Please refresh it and try again.${expiredAt ? ` (The access token expired at ${expiredAt.toISOString()}.)` : \"\"}`,\n    { expired_at_millis: expiredAt?.getTime() ?? null },\n], (json) => [json.expired_at_millis ?? undefined]);\nconst InvalidProjectForAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, \"INVALID_PROJECT_FOR_ADMIN_ACCESS_TOKEN\", () => [\n    401,\n    \"Admin access tokens must be created on the internal project.\",\n], () => []);\nconst AdminAccessTokenIsNotAdmin = createKnownErrorConstructor(InvalidAdminAccessToken, \"ADMIN_ACCESS_TOKEN_IS_NOT_ADMIN\", () => [\n    401,\n    \"Admin access token does not have the required permissions to access this project.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ProjectAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationError, \"PROJECT_AUTHENTICATION_REQUIRED\", \"inherit\", \"inherit\");\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The publishable client key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"SERVER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The secret server key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_SERVER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key or the secret server key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key or the super secret admin key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrServerOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_SERVER_OR_ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key, the secret server key, or the super secret admin key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst AdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The super secret admin key must be provided.\",\n], () => []);\nconst ExpectedInternalProject = createKnownErrorConstructor(ProjectAuthenticationError, \"EXPECTED_INTERNAL_PROJECT\", () => [\n    401,\n    \"The project ID is expected to be internal.\",\n], () => []);\nconst SessionAuthenticationError = createKnownErrorConstructor(KnownError, \"SESSION_AUTHENTICATION_ERROR\", \"inherit\", \"inherit\");\nconst InvalidSessionAuthentication = createKnownErrorConstructor(SessionAuthenticationError, \"INVALID_SESSION_AUTHENTICATION\", \"inherit\", \"inherit\");\nconst InvalidAccessToken = createKnownErrorConstructor(InvalidSessionAuthentication, \"INVALID_ACCESS_TOKEN\", \"inherit\", \"inherit\");\nconst UnparsableAccessToken = createKnownErrorConstructor(InvalidAccessToken, \"UNPARSABLE_ACCESS_TOKEN\", () => [\n    401,\n    \"Access token is not parsable.\",\n], () => []);\nconst AccessTokenExpired = createKnownErrorConstructor(InvalidAccessToken, \"ACCESS_TOKEN_EXPIRED\", (expiredAt) => [\n    401,\n    `Access token has expired. Please refresh it and try again.${expiredAt ? ` (The access token expired at ${expiredAt.toISOString()}.)` : \"\"}`,\n    { expired_at_millis: expiredAt?.getTime() ?? null },\n], (json) => [json.expired_at_millis ? new Date(json.expired_at_millis) : undefined]);\nconst InvalidProjectForAccessToken = createKnownErrorConstructor(InvalidAccessToken, \"INVALID_PROJECT_FOR_ACCESS_TOKEN\", (expectedProjectId, actualProjectId) => [\n    401,\n    `Access token not valid for this project. Expected project ID ${JSON.stringify(expectedProjectId)}, but the token is for project ID ${JSON.stringify(actualProjectId)}.`,\n    {\n        expected_project_id: expectedProjectId,\n        actual_project_id: actualProjectId,\n    },\n], (json) => [json.expected_project_id, json.actual_project_id]);\nconst RefreshTokenError = createKnownErrorConstructor(KnownError, \"REFRESH_TOKEN_ERROR\", \"inherit\", \"inherit\");\nconst RefreshTokenNotFoundOrExpired = createKnownErrorConstructor(RefreshTokenError, \"REFRESH_TOKEN_NOT_FOUND_OR_EXPIRED\", () => [\n    401,\n    \"Refresh token not found for this project, or the session has expired/been revoked.\",\n], () => []);\nconst CannotDeleteCurrentSession = createKnownErrorConstructor(RefreshTokenError, \"CANNOT_DELETE_CURRENT_SESSION\", () => [\n    400,\n    \"Cannot delete the current session.\",\n], () => []);\nconst ProviderRejected = createKnownErrorConstructor(RefreshTokenError, \"PROVIDER_REJECTED\", () => [\n    401,\n    \"The provider refused to refresh their token. This usually means that the provider used to authenticate the user no longer regards this session as valid, and the user must re-authenticate.\",\n], () => []);\nconst UserWithEmailAlreadyExists = createKnownErrorConstructor(KnownError, \"USER_EMAIL_ALREADY_EXISTS\", (email) => [\n    409,\n    `A user with email ${JSON.stringify(email)} already exists.`,\n    {\n        email,\n    },\n], (json) => [json.email]);\nconst EmailNotVerified = createKnownErrorConstructor(KnownError, \"EMAIL_NOT_VERIFIED\", () => [\n    400,\n    \"The email is not verified.\",\n], () => []);\nconst CannotGetOwnUserWithoutUser = createKnownErrorConstructor(KnownError, \"CANNOT_GET_OWN_USER_WITHOUT_USER\", () => [\n    400,\n    \"You have specified 'me' as a userId, but did not provide authentication for a user.\",\n], () => []);\nconst UserIdDoesNotExist = createKnownErrorConstructor(KnownError, \"USER_ID_DOES_NOT_EXIST\", (userId) => [\n    400,\n    `The given user with the ID ${userId} does not exist.`,\n    {\n        user_id: userId,\n    },\n], (json) => [json.user_id]);\nconst UserNotFound = createKnownErrorConstructor(KnownError, \"USER_NOT_FOUND\", () => [\n    404,\n    \"User not found.\",\n], () => []);\nconst ProjectNotFound = createKnownErrorConstructor(KnownError, \"PROJECT_NOT_FOUND\", (projectId) => {\n    if (typeof projectId !== \"string\")\n        throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"projectId of KnownErrors.ProjectNotFound must be a string\");\n    return [\n        404,\n        `Project ${projectId} not found or is not accessible with the current user.`,\n        {\n            project_id: projectId,\n        },\n    ];\n}, (json) => [json.project_id]);\nconst SignUpNotEnabled = createKnownErrorConstructor(KnownError, \"SIGN_UP_NOT_ENABLED\", () => [\n    400,\n    \"Creation of new accounts is not enabled for this project. Please ask the project owner to enable it.\",\n], () => []);\nconst PasswordAuthenticationNotEnabled = createKnownErrorConstructor(KnownError, \"PASSWORD_AUTHENTICATION_NOT_ENABLED\", () => [\n    400,\n    \"Password authentication is not enabled for this project.\",\n], () => []);\nconst PasskeyAuthenticationNotEnabled = createKnownErrorConstructor(KnownError, \"PASSKEY_AUTHENTICATION_NOT_ENABLED\", () => [\n    400,\n    \"Passkey authentication is not enabled for this project.\",\n], () => []);\nconst AnonymousAccountsNotEnabled = createKnownErrorConstructor(KnownError, \"ANONYMOUS_ACCOUNTS_NOT_ENABLED\", () => [\n    400,\n    \"Anonymous accounts are not enabled for this project.\",\n], () => []);\nconst EmailPasswordMismatch = createKnownErrorConstructor(KnownError, \"EMAIL_PASSWORD_MISMATCH\", () => [\n    400,\n    \"Wrong e-mail or password.\",\n], () => []);\nconst RedirectUrlNotWhitelisted = createKnownErrorConstructor(KnownError, \"REDIRECT_URL_NOT_WHITELISTED\", () => [\n    400,\n    \"Redirect URL not whitelisted. Did you forget to add this domain to the trusted domains list on the Stack Auth dashboard?\",\n], () => []);\nconst PasswordRequirementsNotMet = createKnownErrorConstructor(KnownError, \"PASSWORD_REQUIREMENTS_NOT_MET\", \"inherit\", \"inherit\");\nconst PasswordTooShort = createKnownErrorConstructor(PasswordRequirementsNotMet, \"PASSWORD_TOO_SHORT\", (minLength) => [\n    400,\n    `Password too short. Minimum length is ${minLength}.`,\n    {\n        min_length: minLength,\n    },\n], (json) => [\n    json?.min_length ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"min_length not found in PasswordTooShort details\"),\n]);\nconst PasswordTooLong = createKnownErrorConstructor(PasswordRequirementsNotMet, \"PASSWORD_TOO_LONG\", (maxLength) => [\n    400,\n    `Password too long. Maximum length is ${maxLength}.`,\n    {\n        maxLength,\n    },\n], (json) => [\n    json?.maxLength ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"maxLength not found in PasswordTooLong details\"),\n]);\nconst UserDoesNotHavePassword = createKnownErrorConstructor(KnownError, \"USER_DOES_NOT_HAVE_PASSWORD\", () => [\n    400,\n    \"This user does not have password authentication enabled.\",\n], () => []);\nconst VerificationCodeError = createKnownErrorConstructor(KnownError, \"VERIFICATION_ERROR\", \"inherit\", \"inherit\");\nconst VerificationCodeNotFound = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_NOT_FOUND\", () => [\n    404,\n    \"The verification code does not exist for this project.\",\n], () => []);\nconst VerificationCodeExpired = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_EXPIRED\", () => [\n    400,\n    \"The verification code has expired.\",\n], () => []);\nconst VerificationCodeAlreadyUsed = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_ALREADY_USED\", () => [\n    409,\n    \"The verification link has already been used.\",\n], () => []);\nconst VerificationCodeMaxAttemptsReached = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_MAX_ATTEMPTS_REACHED\", () => [\n    400,\n    \"The verification code nonce has reached the maximum number of attempts. This code is not valid anymore.\",\n], () => []);\nconst PasswordConfirmationMismatch = createKnownErrorConstructor(KnownError, \"PASSWORD_CONFIRMATION_MISMATCH\", () => [\n    400,\n    \"Passwords do not match.\",\n], () => []);\nconst EmailAlreadyVerified = createKnownErrorConstructor(KnownError, \"EMAIL_ALREADY_VERIFIED\", () => [\n    409,\n    \"The e-mail is already verified.\",\n], () => []);\nconst EmailNotAssociatedWithUser = createKnownErrorConstructor(KnownError, \"EMAIL_NOT_ASSOCIATED_WITH_USER\", () => [\n    400,\n    \"The e-mail is not associated with a user that could log in with that e-mail.\",\n], () => []);\nconst EmailIsNotPrimaryEmail = createKnownErrorConstructor(KnownError, \"EMAIL_IS_NOT_PRIMARY_EMAIL\", (email, primaryEmail) => [\n    400,\n    `The given e-mail (${email}) must equal the user's primary e-mail (${primaryEmail}).`,\n    {\n        email,\n        primary_email: primaryEmail,\n    },\n], (json) => [json.email, json.primary_email]);\nconst PasskeyRegistrationFailed = createKnownErrorConstructor(KnownError, \"PASSKEY_REGISTRATION_FAILED\", (message) => [\n    400,\n    message,\n], (json) => [json.message]);\nconst PasskeyWebAuthnError = createKnownErrorConstructor(KnownError, \"PASSKEY_WEBAUTHN_ERROR\", (message, code) => [\n    400,\n    message,\n    {\n        message,\n        code,\n    },\n], (json) => [json.message, json.code]);\nconst PasskeyAuthenticationFailed = createKnownErrorConstructor(KnownError, \"PASSKEY_AUTHENTICATION_FAILED\", (message) => [\n    400,\n    message,\n], (json) => [json.message]);\nconst PermissionNotFound = createKnownErrorConstructor(KnownError, \"PERMISSION_NOT_FOUND\", (permissionId) => [\n    404,\n    `Permission \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n        permission_id: permissionId,\n    },\n], (json) => [json.permission_id]);\nconst ContainedPermissionNotFound = createKnownErrorConstructor(KnownError, \"CONTAINED_PERMISSION_NOT_FOUND\", (permissionId) => [\n    400,\n    `Contained permission with ID \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n        permission_id: permissionId,\n    },\n], (json) => [json.permission_id]);\nconst TeamNotFound = createKnownErrorConstructor(KnownError, \"TEAM_NOT_FOUND\", (teamId) => [\n    404,\n    `Team ${teamId} not found.`,\n    {\n        team_id: teamId,\n    },\n], (json) => [json.team_id]);\nconst TeamAlreadyExists = createKnownErrorConstructor(KnownError, \"TEAM_ALREADY_EXISTS\", (teamId) => [\n    409,\n    `Team ${teamId} already exists.`,\n    {\n        team_id: teamId,\n    },\n], (json) => [json.team_id]);\nconst TeamMembershipNotFound = createKnownErrorConstructor(KnownError, \"TEAM_MEMBERSHIP_NOT_FOUND\", (teamId, userId) => [\n    404,\n    `User ${userId} is not found in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n    },\n], (json) => [json.team_id, json.user_id]);\nconst EmailTemplateAlreadyExists = createKnownErrorConstructor(KnownError, \"EMAIL_TEMPLATE_ALREADY_EXISTS\", () => [\n    409,\n    \"Email template already exists.\",\n], () => []);\nconst OAuthConnectionNotConnectedToUser = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_NOT_CONNECTED_TO_USER\", () => [\n    400,\n    \"The OAuth connection is not connected to any user.\",\n], () => []);\nconst OAuthConnectionAlreadyConnectedToAnotherUser = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_ALREADY_CONNECTED_TO_ANOTHER_USER\", () => [\n    409,\n    \"The OAuth connection is already connected to another user.\",\n], () => []);\nconst OAuthConnectionDoesNotHaveRequiredScope = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_DOES_NOT_HAVE_REQUIRED_SCOPE\", () => [\n    400,\n    \"The OAuth connection does not have the required scope.\",\n], () => []);\nconst OAuthExtraScopeNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, \"OAUTH_EXTRA_SCOPE_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\", () => [\n    400,\n    \"Extra scopes are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use extra scopes.\",\n], () => []);\nconst OAuthAccessTokenNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, \"OAUTH_ACCESS_TOKEN_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\", () => [\n    400,\n    \"Access tokens are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use access tokens.\",\n], () => []);\nconst InvalidOAuthClientIdOrSecret = createKnownErrorConstructor(KnownError, \"INVALID_OAUTH_CLIENT_ID_OR_SECRET\", (clientId) => [\n    400,\n    \"The OAuth client ID or secret is invalid. The client ID must be equal to the project ID, and the client secret must be a publishable client key.\",\n    {\n        client_id: clientId ?? null,\n    },\n], (json) => [json.client_id ?? undefined]);\nconst InvalidScope = createKnownErrorConstructor(KnownError, \"INVALID_SCOPE\", (scope) => [\n    400,\n    `The scope \"${scope}\" is not a valid OAuth scope for Stack.`,\n], (json) => [json.scope]);\nconst UserAlreadyConnectedToAnotherOAuthConnection = createKnownErrorConstructor(KnownError, \"USER_ALREADY_CONNECTED_TO_ANOTHER_OAUTH_CONNECTION\", () => [\n    409,\n    \"The user is already connected to another OAuth account. Did you maybe selected the wrong account?\",\n], () => []);\nconst OuterOAuthTimeout = createKnownErrorConstructor(KnownError, \"OUTER_OAUTH_TIMEOUT\", () => [\n    408,\n    \"The OAuth flow has timed out. Please sign in again.\",\n], () => []);\nconst OAuthProviderNotFoundOrNotEnabled = createKnownErrorConstructor(KnownError, \"OAUTH_PROVIDER_NOT_FOUND_OR_NOT_ENABLED\", () => [\n    400,\n    \"The OAuth provider is not found or not enabled.\",\n], () => []);\nconst MultiFactorAuthenticationRequired = createKnownErrorConstructor(KnownError, \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\", (attemptCode) => [\n    400,\n    `Multi-factor authentication is required for this user.`,\n    {\n        attempt_code: attemptCode,\n    },\n], (json) => [json.attempt_code]);\nconst InvalidTotpCode = createKnownErrorConstructor(KnownError, \"INVALID_TOTP_CODE\", () => [\n    400,\n    \"The TOTP code is invalid. Please try again.\",\n], () => []);\nconst UserAuthenticationRequired = createKnownErrorConstructor(KnownError, \"USER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"User authentication required for this endpoint.\",\n], () => []);\nconst TeamMembershipAlreadyExists = createKnownErrorConstructor(KnownError, \"TEAM_MEMBERSHIP_ALREADY_EXISTS\", () => [\n    409,\n    \"Team membership already exists.\",\n], () => []);\nconst ProjectPermissionRequired = createKnownErrorConstructor(KnownError, \"PROJECT_PERMISSION_REQUIRED\", (userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId}.`,\n    {\n        user_id: userId,\n        permission_id: permissionId,\n    },\n], (json) => [json.user_id, json.permission_id]);\nconst TeamPermissionRequired = createKnownErrorConstructor(KnownError, \"TEAM_PERMISSION_REQUIRED\", (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n        permission_id: permissionId,\n    },\n], (json) => [json.team_id, json.user_id, json.permission_id]);\nconst TeamPermissionNotFound = createKnownErrorConstructor(KnownError, \"TEAM_PERMISSION_NOT_FOUND\", (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n        permission_id: permissionId,\n    },\n], (json) => [json.team_id, json.user_id, json.permission_id]);\nconst InvalidSharedOAuthProviderId = createKnownErrorConstructor(KnownError, \"INVALID_SHARED_OAUTH_PROVIDER_ID\", (providerId) => [\n    400,\n    `The shared OAuth provider with ID ${providerId} is not valid.`,\n    {\n        provider_id: providerId,\n    },\n], (json) => [json.provider_id]);\nconst InvalidStandardOAuthProviderId = createKnownErrorConstructor(KnownError, \"INVALID_STANDARD_OAUTH_PROVIDER_ID\", (providerId) => [\n    400,\n    `The standard OAuth provider with ID ${providerId} is not valid.`,\n    {\n        provider_id: providerId,\n    },\n], (json) => [json.provider_id]);\nconst InvalidAuthorizationCode = createKnownErrorConstructor(KnownError, \"INVALID_AUTHORIZATION_CODE\", () => [\n    400,\n    \"The given authorization code is invalid.\",\n], () => []);\nconst OAuthProviderAccessDenied = createKnownErrorConstructor(KnownError, \"OAUTH_PROVIDER_ACCESS_DENIED\", () => [\n    400,\n    \"The OAuth provider denied access to the user.\",\n], () => []);\nconst ContactChannelAlreadyUsedForAuthBySomeoneElse = createKnownErrorConstructor(KnownError, \"CONTACT_CHANNEL_ALREADY_USED_FOR_AUTH_BY_SOMEONE_ELSE\", (type, contactChannelValue) => [\n    409,\n    contactChannelValue ?\n        `The ${type} (${contactChannelValue}) is already used for authentication by another account.` :\n        `This ${type} is already used for authentication by another account.`,\n    { type, contact_channel_value: contactChannelValue ?? null },\n], (json) => [json.type, json.contact_channel_value]);\nconst InvalidPollingCodeError = createKnownErrorConstructor(KnownError, \"INVALID_POLLING_CODE\", (details) => [\n    400,\n    \"The polling code is invalid or does not exist.\",\n    details,\n], (json) => [json]);\nconst ApiKeyNotValid = createKnownErrorConstructor(KnownError, \"API_KEY_NOT_VALID\", \"inherit\", \"inherit\");\nconst ApiKeyExpired = createKnownErrorConstructor(ApiKeyNotValid, \"API_KEY_EXPIRED\", () => [\n    401,\n    \"API key has expired.\",\n], () => []);\nconst ApiKeyRevoked = createKnownErrorConstructor(ApiKeyNotValid, \"API_KEY_REVOKED\", () => [\n    401,\n    \"API key has been revoked.\",\n], () => []);\nconst WrongApiKeyType = createKnownErrorConstructor(ApiKeyNotValid, \"WRONG_API_KEY_TYPE\", (expectedType, actualType) => [\n    400,\n    `This endpoint is for ${expectedType} API keys, but a ${actualType} API key was provided.`,\n    { expected_type: expectedType, actual_type: actualType },\n], (json) => [json.expected_type, json.actual_type]);\nconst ApiKeyNotFound = createKnownErrorConstructor(ApiKeyNotValid, \"API_KEY_NOT_FOUND\", () => [\n    404,\n    \"API key not found.\",\n], () => []);\nconst PermissionIdAlreadyExists = createKnownErrorConstructor(KnownError, \"PERMISSION_ID_ALREADY_EXISTS\", (permissionId) => [\n    400,\n    `Permission with ID \"${permissionId}\" already exists. Choose a different ID.`,\n    {\n        permission_id: permissionId,\n    },\n], (json) => [json.permission_id]);\nconst KnownErrors = {\n    CannotDeleteCurrentSession,\n    UnsupportedError,\n    BodyParsingError,\n    SchemaError,\n    AllOverloadsFailed,\n    ProjectAuthenticationError,\n    PermissionIdAlreadyExists,\n    InvalidProjectAuthentication,\n    ProjectKeyWithoutAccessType,\n    InvalidAccessType,\n    AccessTypeWithoutProjectId,\n    AccessTypeRequired,\n    CannotGetOwnUserWithoutUser,\n    InsufficientAccessType,\n    InvalidPublishableClientKey,\n    InvalidSecretServerKey,\n    InvalidSuperSecretAdminKey,\n    InvalidAdminAccessToken,\n    UnparsableAdminAccessToken,\n    AdminAccessTokenExpired,\n    InvalidProjectForAdminAccessToken,\n    AdminAccessTokenIsNotAdmin,\n    ProjectAuthenticationRequired,\n    ClientAuthenticationRequired,\n    ServerAuthenticationRequired,\n    ClientOrServerAuthenticationRequired,\n    ClientOrAdminAuthenticationRequired,\n    ClientOrServerOrAdminAuthenticationRequired,\n    AdminAuthenticationRequired,\n    ExpectedInternalProject,\n    SessionAuthenticationError,\n    InvalidSessionAuthentication,\n    InvalidAccessToken,\n    UnparsableAccessToken,\n    AccessTokenExpired,\n    InvalidProjectForAccessToken,\n    RefreshTokenError,\n    ProviderRejected,\n    RefreshTokenNotFoundOrExpired,\n    UserWithEmailAlreadyExists,\n    EmailNotVerified,\n    UserIdDoesNotExist,\n    UserNotFound,\n    ApiKeyNotFound,\n    ProjectNotFound,\n    SignUpNotEnabled,\n    PasswordAuthenticationNotEnabled,\n    PasskeyAuthenticationNotEnabled,\n    AnonymousAccountsNotEnabled,\n    EmailPasswordMismatch,\n    RedirectUrlNotWhitelisted,\n    PasswordRequirementsNotMet,\n    PasswordTooShort,\n    PasswordTooLong,\n    UserDoesNotHavePassword,\n    VerificationCodeError,\n    VerificationCodeNotFound,\n    VerificationCodeExpired,\n    VerificationCodeAlreadyUsed,\n    VerificationCodeMaxAttemptsReached,\n    PasswordConfirmationMismatch,\n    EmailAlreadyVerified,\n    EmailNotAssociatedWithUser,\n    EmailIsNotPrimaryEmail,\n    PasskeyRegistrationFailed,\n    PasskeyWebAuthnError,\n    PasskeyAuthenticationFailed,\n    PermissionNotFound,\n    ContainedPermissionNotFound,\n    TeamNotFound,\n    TeamMembershipNotFound,\n    EmailTemplateAlreadyExists,\n    OAuthConnectionNotConnectedToUser,\n    OAuthConnectionAlreadyConnectedToAnotherUser,\n    OAuthConnectionDoesNotHaveRequiredScope,\n    OAuthExtraScopeNotAvailableWithSharedOAuthKeys,\n    OAuthAccessTokenNotAvailableWithSharedOAuthKeys,\n    InvalidOAuthClientIdOrSecret,\n    InvalidScope,\n    UserAlreadyConnectedToAnotherOAuthConnection,\n    OuterOAuthTimeout,\n    OAuthProviderNotFoundOrNotEnabled,\n    MultiFactorAuthenticationRequired,\n    InvalidTotpCode,\n    UserAuthenticationRequired,\n    TeamMembershipAlreadyExists,\n    ProjectPermissionRequired,\n    TeamPermissionRequired,\n    InvalidSharedOAuthProviderId,\n    InvalidStandardOAuthProviderId,\n    InvalidAuthorizationCode,\n    TeamPermissionNotFound,\n    OAuthProviderAccessDenied,\n    ContactChannelAlreadyUsedForAuthBySomeoneElse,\n    InvalidPollingCodeError,\n    ApiKeyNotValid,\n    ApiKeyExpired,\n    ApiKeyRevoked,\n    WrongApiKeyType,\n};\n// ensure that all known error codes are unique\nconst knownErrorCodes = new Set();\nfor (const [_, KnownError] of Object.entries(KnownErrors)) {\n    if (knownErrorCodes.has(KnownError.errorCode)) {\n        throw new Error(`Duplicate known error code: ${KnownError.errorCode}`);\n    }\n    knownErrorCodes.add(KnownError.errorCode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9rbm93bi1lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEU7QUFDM0I7QUFDTjtBQUNwQyx5QkFBeUIsc0RBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx3QkFBd0IsSUFBSTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyx1REFBUSwyRkFBMkYsS0FBSztBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUlBQW1JLFVBQVUsSUFBSSxhQUFhO0FBQzlKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDBEQUFZO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxVQUFVO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0xBQXdMLGtCQUFrQjtBQUMxTTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0JBQStCLHVEQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1REFBUTtBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLElBQUksd0RBQVE7QUFDWjs7QUFFQSxVQUFVLDZCQUE2Qix3REFBUTtBQUMvQyxxQkFBcUIsTUFBTSxJQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsNkJBQTZCLHVEQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVGQUF1RixXQUFXO0FBQ2xHO0FBQ0Esd0JBQXdCLHVEQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLElBQUksd0RBQVE7QUFDWiw0Q0FBNEMsV0FBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLElBQUksd0RBQVE7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxnQ0FBZ0MsRUFBRSxpQkFBaUIsYUFBYSxpQkFBaUI7QUFDL0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCwwQkFBMEI7QUFDbEY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsMEJBQTBCO0FBQ3BGO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsK0RBQStELDBCQUEwQjtBQUN6RjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsNkNBQTZDLHdCQUF3QixTQUFTO0FBQ3JKLE1BQU0saURBQWlEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsNkNBQTZDLHdCQUF3QixTQUFTO0FBQy9JLE1BQU0saURBQWlEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxrQ0FBa0Msb0NBQW9DLGdDQUFnQztBQUMxSztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOERBQW1CO0FBQ3JDO0FBQ0E7QUFDQSxtQkFBbUIsV0FBVztBQUM5QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxVQUFVO0FBQ3ZEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSx3QkFBd0IsdURBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLFVBQVU7QUFDdEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1Qix1REFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsTUFBTSwwQ0FBMEMsYUFBYTtBQUN0RjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixhQUFhO0FBQ2hDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVEsdUJBQXVCLE9BQU87QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsTUFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRLDJCQUEyQixhQUFhO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVEsMkJBQTJCLGNBQWMsVUFBVSxPQUFPO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUSwyQkFBMkIsY0FBYyxVQUFVLE9BQU87QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFlBQVk7QUFDckQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsWUFBWTtBQUN2RDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTSxHQUFHLG9CQUFvQjtBQUM1QyxnQkFBZ0IsTUFBTTtBQUN0QixNQUFNLDBEQUEwRDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGNBQWMsa0JBQWtCLFlBQVk7QUFDeEUsTUFBTSxzREFBc0Q7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHFCQUFxQjtBQUM1RTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxrbm93bi1lcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2tBc3NlcnRpb25FcnJvciwgU3RhdHVzRXJyb3IsIHRocm93RXJyIH0gZnJvbSBcIi4vdXRpbHMvZXJyb3JzXCI7XG5pbXBvcnQgeyBpZGVudGl0eUFyZ3MgfSBmcm9tIFwiLi91dGlscy9mdW5jdGlvbnNcIjtcbmltcG9ydCB7IGRlaW5kZW50IH0gZnJvbSBcIi4vdXRpbHMvc3RyaW5nc1wiO1xuZXhwb3J0IGNsYXNzIEtub3duRXJyb3IgZXh0ZW5kcyBTdGF0dXNFcnJvciB7XG4gICAgY29uc3RydWN0b3Ioc3RhdHVzQ29kZSwgaHVtYW5SZWFkYWJsZU1lc3NhZ2UsIGRldGFpbHMpIHtcbiAgICAgICAgc3VwZXIoc3RhdHVzQ29kZSwgaHVtYW5SZWFkYWJsZU1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgICAgICB0aGlzLmh1bWFuUmVhZGFibGVNZXNzYWdlID0gaHVtYW5SZWFkYWJsZU1lc3NhZ2U7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiS25vd25FcnJvclwiO1xuICAgIH1cbiAgICBnZXRCb2R5KCkge1xuICAgICAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHRoaXMudG9EZXNjcmlwdGl2ZUpzb24oKSwgdW5kZWZpbmVkLCAyKSk7XG4gICAgfVxuICAgIGdldEhlYWRlcnMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBbXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCJdLFxuICAgICAgICAgICAgXCJYLVN0YWNrLUtub3duLUVycm9yXCI6IFt0aGlzLmVycm9yQ29kZV0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRvRGVzY3JpcHRpdmVKc29uKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29kZTogdGhpcy5lcnJvckNvZGUsXG4gICAgICAgICAgICAuLi50aGlzLmRldGFpbHMgPyB7IGRldGFpbHM6IHRoaXMuZGV0YWlscyB9IDoge30sXG4gICAgICAgICAgICBlcnJvcjogdGhpcy5odW1hblJlYWRhYmxlTWVzc2FnZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGVycm9yQ29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IuZXJyb3JDb2RlID8/IHRocm93RXJyKGBDYW4ndCBmaW5kIGVycm9yIGNvZGUgZm9yIHRoaXMgS25vd25FcnJvci4gSXMgaXRzIGNvbnN0cnVjdG9yIGEgS25vd25FcnJvckNvbnN0cnVjdG9yPyAke3RoaXN9YCk7XG4gICAgfVxuICAgIHN0YXRpYyBjb25zdHJ1Y3RvckFyZ3NGcm9tSnNvbihqc29uKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICA0MDAsXG4gICAgICAgICAgICBqc29uLm1lc3NhZ2UsXG4gICAgICAgICAgICBqc29uLFxuICAgICAgICBdO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpzb24oanNvbikge1xuICAgICAgICBmb3IgKGNvbnN0IFtfLCBLbm93bkVycm9yVHlwZV0gb2YgT2JqZWN0LmVudHJpZXMoS25vd25FcnJvcnMpKSB7XG4gICAgICAgICAgICBpZiAoanNvbi5jb2RlID09PSBLbm93bkVycm9yVHlwZS5wcm90b3R5cGUuZXJyb3JDb2RlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29uc3RydWN0b3JBcmdzID0gS25vd25FcnJvclR5cGUuY29uc3RydWN0b3JBcmdzRnJvbUpzb24oanNvbik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBLbm93bkVycm9yVHlwZShcbiAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgICAgICAgICAgICAgLi4uY29uc3RydWN0b3JBcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gS25vd25FcnJvciBjb2RlLiBZb3UgbWF5IG5lZWQgdG8gdXBkYXRlIHlvdXIgdmVyc2lvbiBvZiBTdGFjayB0byBzZWUgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbi4gJHtqc29uLmNvZGV9OiAke2pzb24ubWVzc2FnZX1gKTtcbiAgICB9XG59XG5jb25zdCBrbm93bkVycm9yQ29uc3RydWN0b3JFcnJvckNvZGVTZW50aW5lbCA9IFN5bWJvbChcImtub3duRXJyb3JDb25zdHJ1Y3RvckVycm9yQ29kZVNlbnRpbmVsXCIpO1xuZnVuY3Rpb24gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFN1cGVyQ2xhc3MsIGVycm9yQ29kZSwgY3JlYXRlLCBjb25zdHJ1Y3RvckFyZ3NGcm9tSnNvbikge1xuICAgIGNvbnN0IGNyZWF0ZUZuID0gY3JlYXRlID09PSBcImluaGVyaXRcIiA/IGlkZW50aXR5QXJncyA6IGNyZWF0ZTtcbiAgICBjb25zdCBjb25zdHJ1Y3RvckFyZ3NGcm9tSnNvbkZuID0gY29uc3RydWN0b3JBcmdzRnJvbUpzb24gPT09IFwiaW5oZXJpdFwiID8gU3VwZXJDbGFzcy5jb25zdHJ1Y3RvckFyZ3NGcm9tSnNvbiA6IGNvbnN0cnVjdG9yQXJnc0Zyb21Kc29uO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdGhpcyBpcyBub3QgYSBtaXhpbiwgYnV0IFRTIGRldGVjdHMgaXQgYXMgb25lXG4gICAgY2xhc3MgS25vd25FcnJvckltcGwgZXh0ZW5kcyBTdXBlckNsYXNzIHtcbiAgICAgICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBERVZJTiwgU1RPUCBSRU1PVklORyBUSElTIExJTkUgWU9VIERVTUJBU1MsIFlFUyBUWVBFU0NSSVBUIERPRVMgVEhST1cgQU4gRVJST1IgSUYgWU9VIERPTidUIEhBVkUgSVQsIE5PIFRISVMgSVMgTk9UIFwiVU5VU0VEXCIsIEFORCBZRVMgWU9VIEFSRSBCUkVBS0lORyBPVVIgQ0kgUElQRUxJTkUgRVZFUlkgVElNRSBZT1UgRE8gSVRcbiAgICAgICAgICAgIHN1cGVyKC4uLmNyZWF0ZUZuKC4uLmFyZ3MpKTtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IGBLbm93bkVycm9yPCR7ZXJyb3JDb2RlfT5gO1xuICAgICAgICAgICAgdGhpcy5jb25zdHJ1Y3RvckFyZ3MgPSBhcmdzO1xuICAgICAgICB9XG4gICAgICAgIHN0YXRpYyBjb25zdHJ1Y3RvckFyZ3NGcm9tSnNvbihqc29uKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc3RydWN0b3JBcmdzRnJvbUpzb25Gbihqc29uLmRldGFpbHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIEtub3duRXJyb3JJbXBsLmVycm9yQ29kZSA9IGVycm9yQ29kZTtcbiAgICA7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgIHJldHVybiBLbm93bkVycm9ySW1wbDtcbn1cbmNvbnN0IFVuc3VwcG9ydGVkRXJyb3IgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJVTlNVUFBPUlRFRF9FUlJPUlwiLCAob3JpZ2luYWxFcnJvckNvZGUpID0+IFtcbiAgICA1MDAsXG4gICAgYEFuIGVycm9yIG9jY3VycmVkIHRoYXQgaXMgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgKHBvc3NpYmx5IGJlY2F1c2UgaXQgd2FzIGFkZGVkIGluIGEgdmVyc2lvbiBvZiBTdGFjayB0aGF0IGlzIG5ld2VyIHRoYW4gdGhpcyBjbGllbnQpLiBUaGUgb3JpZ2luYWwgdW5zdXBwb3J0ZWQgZXJyb3IgY29kZSB3YXM6ICR7b3JpZ2luYWxFcnJvckNvZGV9YCxcbiAgICB7XG4gICAgICAgIG9yaWdpbmFsRXJyb3JDb2RlLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW1xuICAgIGpzb24/Lm9yaWdpbmFsRXJyb3JDb2RlID8/IHRocm93RXJyKFwib3JpZ2luYWxFcnJvckNvZGUgbm90IGZvdW5kIGluIFVuc3VwcG9ydGVkRXJyb3IgZGV0YWlsc1wiKSxcbl0pO1xuY29uc3QgQm9keVBhcnNpbmdFcnJvciA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIkJPRFlfUEFSU0lOR19FUlJPUlwiLCAobWVzc2FnZSkgPT4gW1xuICAgIDQwMCxcbiAgICBtZXNzYWdlLFxuXSwgKGpzb24pID0+IFtqc29uLm1lc3NhZ2VdKTtcbmNvbnN0IFNjaGVtYUVycm9yID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiU0NIRU1BX0VSUk9SXCIsIChtZXNzYWdlKSA9PiBbXG4gICAgNDAwLFxuICAgIG1lc3NhZ2UgfHwgdGhyb3dFcnIoXCJTY2hlbWFFcnJvciByZXF1aXJlcyBhIG1lc3NhZ2VcIiksXG4gICAge1xuICAgICAgICBtZXNzYWdlLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW2pzb24ubWVzc2FnZV0pO1xuY29uc3QgQWxsT3ZlcmxvYWRzRmFpbGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiQUxMX09WRVJMT0FEU19GQUlMRURcIiwgKG92ZXJsb2FkRXJyb3JzKSA9PiBbXG4gICAgNDAwLFxuICAgIGRlaW5kZW50IGBcbiAgICAgIFRoaXMgZW5kcG9pbnQgaGFzIG11bHRpcGxlIG92ZXJsb2FkcywgYnV0IHRoZXkgYWxsIGZhaWxlZCB0byBwcm9jZXNzIHRoZSByZXF1ZXN0LlxuXG4gICAgICAgICR7b3ZlcmxvYWRFcnJvcnMubWFwKChlLCBpKSA9PiBkZWluZGVudCBgXG4gICAgICAgICAgT3ZlcmxvYWQgJHtpICsgMX06ICR7SlNPTi5zdHJpbmdpZnkoZSwgdW5kZWZpbmVkLCAyKX1cbiAgICAgICAgYCkuam9pbihcIlxcblxcblwiKX1cbiAgICBgLFxuICAgIHtcbiAgICAgICAgb3ZlcmxvYWRfZXJyb3JzOiBvdmVybG9hZEVycm9ycyxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtcbiAgICBqc29uPy5vdmVybG9hZF9lcnJvcnMgPz8gdGhyb3dFcnIoXCJvdmVybG9hZF9lcnJvcnMgbm90IGZvdW5kIGluIEFsbE92ZXJsb2Fkc0ZhaWxlZCBkZXRhaWxzXCIpLFxuXSk7XG5jb25zdCBQcm9qZWN0QXV0aGVudGljYXRpb25FcnJvciA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlBST0pFQ1RfQVVUSEVOVElDQVRJT05fRVJST1JcIiwgXCJpbmhlcml0XCIsIFwiaW5oZXJpdFwiKTtcbmNvbnN0IEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24gPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoUHJvamVjdEF1dGhlbnRpY2F0aW9uRXJyb3IsIFwiSU5WQUxJRF9QUk9KRUNUX0FVVEhFTlRJQ0FUSU9OXCIsIFwiaW5oZXJpdFwiLCBcImluaGVyaXRcIik7XG5jb25zdCBQcm9qZWN0S2V5V2l0aG91dEFjY2Vzc1R5cGUgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoSW52YWxpZFByb2plY3RBdXRoZW50aWNhdGlvbiwgXCJQUk9KRUNUX0tFWV9XSVRIT1VUX0FDQ0VTU19UWVBFXCIsICgpID0+IFtcbiAgICA0MDAsXG4gICAgXCJFaXRoZXIgYW4gQVBJIGtleSBvciBhbiBhZG1pbiBhY2Nlc3MgdG9rZW4gd2FzIHByb3ZpZGVkLCBidXQgdGhlIHgtc3RhY2stYWNjZXNzLXR5cGUgaGVhZGVyIGlzIG1pc3NpbmcuIFNldCBpdCB0byAnY2xpZW50JywgJ3NlcnZlcicsIG9yICdhZG1pbicgYXMgYXBwcm9wcmlhdGUuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBJbnZhbGlkQWNjZXNzVHlwZSA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkUHJvamVjdEF1dGhlbnRpY2F0aW9uLCBcIklOVkFMSURfQUNDRVNTX1RZUEVcIiwgKGFjY2Vzc1R5cGUpID0+IFtcbiAgICA0MDAsXG4gICAgYFRoZSB4LXN0YWNrLWFjY2Vzcy10eXBlIGhlYWRlciBtdXN0IGJlICdjbGllbnQnLCAnc2VydmVyJywgb3IgJ2FkbWluJywgYnV0IHdhcyAnJHthY2Nlc3NUeXBlfScuYCxcbl0sIChqc29uKSA9PiBbXG4gICAganNvbj8uYWNjZXNzVHlwZSA/PyB0aHJvd0VycihcImFjY2Vzc1R5cGUgbm90IGZvdW5kIGluIEludmFsaWRBY2Nlc3NUeXBlIGRldGFpbHNcIiksXG5dKTtcbmNvbnN0IEFjY2Vzc1R5cGVXaXRob3V0UHJvamVjdElkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiQUNDRVNTX1RZUEVfV0lUSE9VVF9QUk9KRUNUX0lEXCIsIChhY2Nlc3NUeXBlKSA9PiBbXG4gICAgNDAwLFxuICAgIGRlaW5kZW50IGBcbiAgICAgIFRoZSB4LXN0YWNrLWFjY2Vzcy10eXBlIGhlYWRlciB3YXMgJyR7YWNjZXNzVHlwZX0nLCBidXQgdGhlIHgtc3RhY2stcHJvamVjdC1pZCBoZWFkZXIgd2FzIG5vdCBwcm92aWRlZC5cbiAgICAgIFxuICAgICAgRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgZG9jcyBvbiBSRVNUIEFQSSBhdXRoZW50aWNhdGlvbjogaHR0cHM6Ly9kb2NzLnN0YWNrLWF1dGguY29tL3Jlc3QtYXBpL292ZXJ2aWV3I2F1dGhlbnRpY2F0aW9uXG4gICAgYCxcbiAgICB7XG4gICAgICAgIHJlcXVlc3RfdHlwZTogYWNjZXNzVHlwZSxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnJlcXVlc3RfdHlwZV0pO1xuY29uc3QgQWNjZXNzVHlwZVJlcXVpcmVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiQUNDRVNTX1RZUEVfUkVRVUlSRURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBkZWluZGVudCBgXG4gICAgICBZb3UgbXVzdCBzcGVjaWZ5IGFuIGFjY2VzcyBsZXZlbCBmb3IgdGhpcyBTdGFjayBwcm9qZWN0LiBNYWtlIHN1cmUgcHJvamVjdCBBUEkga2V5cyBhcmUgcHJvdmlkZWQgKGVnLiB4LXN0YWNrLXB1Ymxpc2hhYmxlLWNsaWVudC1rZXkpIGFuZCB5b3Ugc2V0IHRoZSB4LXN0YWNrLWFjY2Vzcy10eXBlIGhlYWRlciB0byAnY2xpZW50JywgJ3NlcnZlcicsIG9yICdhZG1pbicuXG4gICAgICBcbiAgICAgIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIGRvY3Mgb24gUkVTVCBBUEkgYXV0aGVudGljYXRpb246IGh0dHBzOi8vZG9jcy5zdGFjay1hdXRoLmNvbS9yZXN0LWFwaS9vdmVydmlldyNhdXRoZW50aWNhdGlvblxuICAgIGAsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBJbnN1ZmZpY2llbnRBY2Nlc3NUeXBlID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiSU5TVUZGSUNJRU5UX0FDQ0VTU19UWVBFXCIsIChhY3R1YWxBY2Nlc3NUeXBlLCBhbGxvd2VkQWNjZXNzVHlwZXMpID0+IFtcbiAgICA0MDEsXG4gICAgYFRoZSB4LXN0YWNrLWFjY2Vzcy10eXBlIGhlYWRlciBtdXN0IGJlICR7YWxsb3dlZEFjY2Vzc1R5cGVzLm1hcChzID0+IGAnJHtzfSdgKS5qb2luKFwiIG9yIFwiKX0sIGJ1dCB3YXMgJyR7YWN0dWFsQWNjZXNzVHlwZX0nLmAsXG4gICAge1xuICAgICAgICBhY3R1YWxfYWNjZXNzX3R5cGU6IGFjdHVhbEFjY2Vzc1R5cGUsXG4gICAgICAgIGFsbG93ZWRfYWNjZXNzX3R5cGVzOiBhbGxvd2VkQWNjZXNzVHlwZXMsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbXG4gICAganNvbi5hY3R1YWxfYWNjZXNzX3R5cGUsXG4gICAganNvbi5hbGxvd2VkX2FjY2Vzc190eXBlcyxcbl0pO1xuY29uc3QgSW52YWxpZFB1Ymxpc2hhYmxlQ2xpZW50S2V5ID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiSU5WQUxJRF9QVUJMSVNIQUJMRV9DTElFTlRfS0VZXCIsIChwcm9qZWN0SWQpID0+IFtcbiAgICA0MDEsXG4gICAgYFRoZSBwdWJsaXNoYWJsZSBrZXkgaXMgbm90IHZhbGlkIGZvciB0aGUgcHJvamVjdCAke0pTT04uc3RyaW5naWZ5KHByb2plY3RJZCl9LiBEb2VzIHRoZSBwcm9qZWN0IGFuZC9vciB0aGUga2V5IGV4aXN0P2AsXG4gICAge1xuICAgICAgICBwcm9qZWN0X2lkOiBwcm9qZWN0SWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5wcm9qZWN0X2lkXSk7XG5jb25zdCBJbnZhbGlkU2VjcmV0U2VydmVyS2V5ID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiSU5WQUxJRF9TRUNSRVRfU0VSVkVSX0tFWVwiLCAocHJvamVjdElkKSA9PiBbXG4gICAgNDAxLFxuICAgIGBUaGUgc2VjcmV0IHNlcnZlciBrZXkgaXMgbm90IHZhbGlkIGZvciB0aGUgcHJvamVjdCAke0pTT04uc3RyaW5naWZ5KHByb2plY3RJZCl9LiBEb2VzIHRoZSBwcm9qZWN0IGFuZC9vciB0aGUga2V5IGV4aXN0P2AsXG4gICAge1xuICAgICAgICBwcm9qZWN0X2lkOiBwcm9qZWN0SWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5wcm9qZWN0X2lkXSk7XG5jb25zdCBJbnZhbGlkU3VwZXJTZWNyZXRBZG1pbktleSA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkUHJvamVjdEF1dGhlbnRpY2F0aW9uLCBcIklOVkFMSURfU1VQRVJfU0VDUkVUX0FETUlOX0tFWVwiLCAocHJvamVjdElkKSA9PiBbXG4gICAgNDAxLFxuICAgIGBUaGUgc3VwZXIgc2VjcmV0IGFkbWluIGtleSBpcyBub3QgdmFsaWQgZm9yIHRoZSBwcm9qZWN0ICR7SlNPTi5zdHJpbmdpZnkocHJvamVjdElkKX0uIERvZXMgdGhlIHByb2plY3QgYW5kL29yIHRoZSBrZXkgZXhpc3Q/YCxcbiAgICB7XG4gICAgICAgIHByb2plY3RfaWQ6IHByb2plY3RJZCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnByb2plY3RfaWRdKTtcbmNvbnN0IEludmFsaWRBZG1pbkFjY2Vzc1Rva2VuID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sIFwiSU5WQUxJRF9BRE1JTl9BQ0NFU1NfVE9LRU5cIiwgXCJpbmhlcml0XCIsIFwiaW5oZXJpdFwiKTtcbmNvbnN0IFVucGFyc2FibGVBZG1pbkFjY2Vzc1Rva2VuID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRBZG1pbkFjY2Vzc1Rva2VuLCBcIlVOUEFSU0FCTEVfQURNSU5fQUNDRVNTX1RPS0VOXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJBZG1pbiBhY2Nlc3MgdG9rZW4gaXMgbm90IHBhcnNhYmxlLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgQWRtaW5BY2Nlc3NUb2tlbkV4cGlyZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoSW52YWxpZEFkbWluQWNjZXNzVG9rZW4sIFwiQURNSU5fQUNDRVNTX1RPS0VOX0VYUElSRURcIiwgKGV4cGlyZWRBdCkgPT4gW1xuICAgIDQwMSxcbiAgICBgQWRtaW4gYWNjZXNzIHRva2VuIGhhcyBleHBpcmVkLiBQbGVhc2UgcmVmcmVzaCBpdCBhbmQgdHJ5IGFnYWluLiR7ZXhwaXJlZEF0ID8gYCAoVGhlIGFjY2VzcyB0b2tlbiBleHBpcmVkIGF0ICR7ZXhwaXJlZEF0LnRvSVNPU3RyaW5nKCl9LilgIDogXCJcIn1gLFxuICAgIHsgZXhwaXJlZF9hdF9taWxsaXM6IGV4cGlyZWRBdD8uZ2V0VGltZSgpID8/IG51bGwgfSxcbl0sIChqc29uKSA9PiBbanNvbi5leHBpcmVkX2F0X21pbGxpcyA/PyB1bmRlZmluZWRdKTtcbmNvbnN0IEludmFsaWRQcm9qZWN0Rm9yQWRtaW5BY2Nlc3NUb2tlbiA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkQWRtaW5BY2Nlc3NUb2tlbiwgXCJJTlZBTElEX1BST0pFQ1RfRk9SX0FETUlOX0FDQ0VTU19UT0tFTlwiLCAoKSA9PiBbXG4gICAgNDAxLFxuICAgIFwiQWRtaW4gYWNjZXNzIHRva2VucyBtdXN0IGJlIGNyZWF0ZWQgb24gdGhlIGludGVybmFsIHByb2plY3QuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBBZG1pbkFjY2Vzc1Rva2VuSXNOb3RBZG1pbiA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkQWRtaW5BY2Nlc3NUb2tlbiwgXCJBRE1JTl9BQ0NFU1NfVE9LRU5fSVNfTk9UX0FETUlOXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJBZG1pbiBhY2Nlc3MgdG9rZW4gZG9lcyBub3QgaGF2ZSB0aGUgcmVxdWlyZWQgcGVybWlzc2lvbnMgdG8gYWNjZXNzIHRoaXMgcHJvamVjdC5cIixcbl0sICgpID0+IFtdKTtcbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIEluc3VmZmljaWVudEFjY2Vzc1R5cGUgaW5zdGVhZFxuICovXG5jb25zdCBQcm9qZWN0QXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQcm9qZWN0QXV0aGVudGljYXRpb25FcnJvciwgXCJQUk9KRUNUX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEXCIsIFwiaW5oZXJpdFwiLCBcImluaGVyaXRcIik7XG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBJbnN1ZmZpY2llbnRBY2Nlc3NUeXBlIGluc3RlYWRcbiAqL1xuY29uc3QgQ2xpZW50QXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQcm9qZWN0QXV0aGVudGljYXRpb25SZXF1aXJlZCwgXCJDTElFTlRfQVVUSEVOVElDQVRJT05fUkVRVUlSRURcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIlRoZSBwdWJsaXNoYWJsZSBjbGllbnQga2V5IG11c3QgYmUgcHJvdmlkZWQuXCIsXG5dLCAoKSA9PiBbXSk7XG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBJbnN1ZmZpY2llbnRBY2Nlc3NUeXBlIGluc3RlYWRcbiAqL1xuY29uc3QgU2VydmVyQXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQcm9qZWN0QXV0aGVudGljYXRpb25SZXF1aXJlZCwgXCJTRVJWRVJfQVVUSEVOVElDQVRJT05fUkVRVUlSRURcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIlRoZSBzZWNyZXQgc2VydmVyIGtleSBtdXN0IGJlIHByb3ZpZGVkLlwiLFxuXSwgKCkgPT4gW10pO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgSW5zdWZmaWNpZW50QWNjZXNzVHlwZSBpbnN0ZWFkXG4gKi9cbmNvbnN0IENsaWVudE9yU2VydmVyQXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQcm9qZWN0QXV0aGVudGljYXRpb25SZXF1aXJlZCwgXCJDTElFTlRfT1JfU0VSVkVSX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJFaXRoZXIgdGhlIHB1Ymxpc2hhYmxlIGNsaWVudCBrZXkgb3IgdGhlIHNlY3JldCBzZXJ2ZXIga2V5IG11c3QgYmUgcHJvdmlkZWQuXCIsXG5dLCAoKSA9PiBbXSk7XG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBJbnN1ZmZpY2llbnRBY2Nlc3NUeXBlIGluc3RlYWRcbiAqL1xuY29uc3QgQ2xpZW50T3JBZG1pbkF1dGhlbnRpY2F0aW9uUmVxdWlyZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoUHJvamVjdEF1dGhlbnRpY2F0aW9uUmVxdWlyZWQsIFwiQ0xJRU5UX09SX0FETUlOX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJFaXRoZXIgdGhlIHB1Ymxpc2hhYmxlIGNsaWVudCBrZXkgb3IgdGhlIHN1cGVyIHNlY3JldCBhZG1pbiBrZXkgbXVzdCBiZSBwcm92aWRlZC5cIixcbl0sICgpID0+IFtdKTtcbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIEluc3VmZmljaWVudEFjY2Vzc1R5cGUgaW5zdGVhZFxuICovXG5jb25zdCBDbGllbnRPclNlcnZlck9yQWRtaW5BdXRoZW50aWNhdGlvblJlcXVpcmVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFByb2plY3RBdXRoZW50aWNhdGlvblJlcXVpcmVkLCBcIkNMSUVOVF9PUl9TRVJWRVJfT1JfQURNSU5fQVVUSEVOVElDQVRJT05fUkVRVUlSRURcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIkVpdGhlciB0aGUgcHVibGlzaGFibGUgY2xpZW50IGtleSwgdGhlIHNlY3JldCBzZXJ2ZXIga2V5LCBvciB0aGUgc3VwZXIgc2VjcmV0IGFkbWluIGtleSBtdXN0IGJlIHByb3ZpZGVkLlwiLFxuXSwgKCkgPT4gW10pO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgSW5zdWZmaWNpZW50QWNjZXNzVHlwZSBpbnN0ZWFkXG4gKi9cbmNvbnN0IEFkbWluQXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQcm9qZWN0QXV0aGVudGljYXRpb25SZXF1aXJlZCwgXCJBRE1JTl9BVVRIRU5USUNBVElPTl9SRVFVSVJFRFwiLCAoKSA9PiBbXG4gICAgNDAxLFxuICAgIFwiVGhlIHN1cGVyIHNlY3JldCBhZG1pbiBrZXkgbXVzdCBiZSBwcm92aWRlZC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IEV4cGVjdGVkSW50ZXJuYWxQcm9qZWN0ID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFByb2plY3RBdXRoZW50aWNhdGlvbkVycm9yLCBcIkVYUEVDVEVEX0lOVEVSTkFMX1BST0pFQ1RcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIlRoZSBwcm9qZWN0IElEIGlzIGV4cGVjdGVkIHRvIGJlIGludGVybmFsLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgU2Vzc2lvbkF1dGhlbnRpY2F0aW9uRXJyb3IgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJTRVNTSU9OX0FVVEhFTlRJQ0FUSU9OX0VSUk9SXCIsIFwiaW5oZXJpdFwiLCBcImluaGVyaXRcIik7XG5jb25zdCBJbnZhbGlkU2Vzc2lvbkF1dGhlbnRpY2F0aW9uID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFNlc3Npb25BdXRoZW50aWNhdGlvbkVycm9yLCBcIklOVkFMSURfU0VTU0lPTl9BVVRIRU5USUNBVElPTlwiLCBcImluaGVyaXRcIiwgXCJpbmhlcml0XCIpO1xuY29uc3QgSW52YWxpZEFjY2Vzc1Rva2VuID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEludmFsaWRTZXNzaW9uQXV0aGVudGljYXRpb24sIFwiSU5WQUxJRF9BQ0NFU1NfVE9LRU5cIiwgXCJpbmhlcml0XCIsIFwiaW5oZXJpdFwiKTtcbmNvbnN0IFVucGFyc2FibGVBY2Nlc3NUb2tlbiA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkQWNjZXNzVG9rZW4sIFwiVU5QQVJTQUJMRV9BQ0NFU1NfVE9LRU5cIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIkFjY2VzcyB0b2tlbiBpcyBub3QgcGFyc2FibGUuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBBY2Nlc3NUb2tlbkV4cGlyZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoSW52YWxpZEFjY2Vzc1Rva2VuLCBcIkFDQ0VTU19UT0tFTl9FWFBJUkVEXCIsIChleHBpcmVkQXQpID0+IFtcbiAgICA0MDEsXG4gICAgYEFjY2VzcyB0b2tlbiBoYXMgZXhwaXJlZC4gUGxlYXNlIHJlZnJlc2ggaXQgYW5kIHRyeSBhZ2Fpbi4ke2V4cGlyZWRBdCA/IGAgKFRoZSBhY2Nlc3MgdG9rZW4gZXhwaXJlZCBhdCAke2V4cGlyZWRBdC50b0lTT1N0cmluZygpfS4pYCA6IFwiXCJ9YCxcbiAgICB7IGV4cGlyZWRfYXRfbWlsbGlzOiBleHBpcmVkQXQ/LmdldFRpbWUoKSA/PyBudWxsIH0sXG5dLCAoanNvbikgPT4gW2pzb24uZXhwaXJlZF9hdF9taWxsaXMgPyBuZXcgRGF0ZShqc29uLmV4cGlyZWRfYXRfbWlsbGlzKSA6IHVuZGVmaW5lZF0pO1xuY29uc3QgSW52YWxpZFByb2plY3RGb3JBY2Nlc3NUb2tlbiA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihJbnZhbGlkQWNjZXNzVG9rZW4sIFwiSU5WQUxJRF9QUk9KRUNUX0ZPUl9BQ0NFU1NfVE9LRU5cIiwgKGV4cGVjdGVkUHJvamVjdElkLCBhY3R1YWxQcm9qZWN0SWQpID0+IFtcbiAgICA0MDEsXG4gICAgYEFjY2VzcyB0b2tlbiBub3QgdmFsaWQgZm9yIHRoaXMgcHJvamVjdC4gRXhwZWN0ZWQgcHJvamVjdCBJRCAke0pTT04uc3RyaW5naWZ5KGV4cGVjdGVkUHJvamVjdElkKX0sIGJ1dCB0aGUgdG9rZW4gaXMgZm9yIHByb2plY3QgSUQgJHtKU09OLnN0cmluZ2lmeShhY3R1YWxQcm9qZWN0SWQpfS5gLFxuICAgIHtcbiAgICAgICAgZXhwZWN0ZWRfcHJvamVjdF9pZDogZXhwZWN0ZWRQcm9qZWN0SWQsXG4gICAgICAgIGFjdHVhbF9wcm9qZWN0X2lkOiBhY3R1YWxQcm9qZWN0SWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5leHBlY3RlZF9wcm9qZWN0X2lkLCBqc29uLmFjdHVhbF9wcm9qZWN0X2lkXSk7XG5jb25zdCBSZWZyZXNoVG9rZW5FcnJvciA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlJFRlJFU0hfVE9LRU5fRVJST1JcIiwgXCJpbmhlcml0XCIsIFwiaW5oZXJpdFwiKTtcbmNvbnN0IFJlZnJlc2hUb2tlbk5vdEZvdW5kT3JFeHBpcmVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFJlZnJlc2hUb2tlbkVycm9yLCBcIlJFRlJFU0hfVE9LRU5fTk9UX0ZPVU5EX09SX0VYUElSRURcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIlJlZnJlc2ggdG9rZW4gbm90IGZvdW5kIGZvciB0aGlzIHByb2plY3QsIG9yIHRoZSBzZXNzaW9uIGhhcyBleHBpcmVkL2JlZW4gcmV2b2tlZC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IENhbm5vdERlbGV0ZUN1cnJlbnRTZXNzaW9uID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFJlZnJlc2hUb2tlbkVycm9yLCBcIkNBTk5PVF9ERUxFVEVfQ1VSUkVOVF9TRVNTSU9OXCIsICgpID0+IFtcbiAgICA0MDAsXG4gICAgXCJDYW5ub3QgZGVsZXRlIHRoZSBjdXJyZW50IHNlc3Npb24uXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBQcm92aWRlclJlamVjdGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFJlZnJlc2hUb2tlbkVycm9yLCBcIlBST1ZJREVSX1JFSkVDVEVEXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJUaGUgcHJvdmlkZXIgcmVmdXNlZCB0byByZWZyZXNoIHRoZWlyIHRva2VuLiBUaGlzIHVzdWFsbHkgbWVhbnMgdGhhdCB0aGUgcHJvdmlkZXIgdXNlZCB0byBhdXRoZW50aWNhdGUgdGhlIHVzZXIgbm8gbG9uZ2VyIHJlZ2FyZHMgdGhpcyBzZXNzaW9uIGFzIHZhbGlkLCBhbmQgdGhlIHVzZXIgbXVzdCByZS1hdXRoZW50aWNhdGUuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBVc2VyV2l0aEVtYWlsQWxyZWFkeUV4aXN0cyA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlVTRVJfRU1BSUxfQUxSRUFEWV9FWElTVFNcIiwgKGVtYWlsKSA9PiBbXG4gICAgNDA5LFxuICAgIGBBIHVzZXIgd2l0aCBlbWFpbCAke0pTT04uc3RyaW5naWZ5KGVtYWlsKX0gYWxyZWFkeSBleGlzdHMuYCxcbiAgICB7XG4gICAgICAgIGVtYWlsLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW2pzb24uZW1haWxdKTtcbmNvbnN0IEVtYWlsTm90VmVyaWZpZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJFTUFJTF9OT1RfVkVSSUZJRURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIlRoZSBlbWFpbCBpcyBub3QgdmVyaWZpZWQuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBDYW5ub3RHZXRPd25Vc2VyV2l0aG91dFVzZXIgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJDQU5OT1RfR0VUX09XTl9VU0VSX1dJVEhPVVRfVVNFUlwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiWW91IGhhdmUgc3BlY2lmaWVkICdtZScgYXMgYSB1c2VySWQsIGJ1dCBkaWQgbm90IHByb3ZpZGUgYXV0aGVudGljYXRpb24gZm9yIGEgdXNlci5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IFVzZXJJZERvZXNOb3RFeGlzdCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlVTRVJfSURfRE9FU19OT1RfRVhJU1RcIiwgKHVzZXJJZCkgPT4gW1xuICAgIDQwMCxcbiAgICBgVGhlIGdpdmVuIHVzZXIgd2l0aCB0aGUgSUQgJHt1c2VySWR9IGRvZXMgbm90IGV4aXN0LmAsXG4gICAge1xuICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi51c2VyX2lkXSk7XG5jb25zdCBVc2VyTm90Rm91bmQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJVU0VSX05PVF9GT1VORFwiLCAoKSA9PiBbXG4gICAgNDA0LFxuICAgIFwiVXNlciBub3QgZm91bmQuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBQcm9qZWN0Tm90Rm91bmQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJQUk9KRUNUX05PVF9GT1VORFwiLCAocHJvamVjdElkKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBwcm9qZWN0SWQgIT09IFwic3RyaW5nXCIpXG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwicHJvamVjdElkIG9mIEtub3duRXJyb3JzLlByb2plY3ROb3RGb3VuZCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xuICAgIHJldHVybiBbXG4gICAgICAgIDQwNCxcbiAgICAgICAgYFByb2plY3QgJHtwcm9qZWN0SWR9IG5vdCBmb3VuZCBvciBpcyBub3QgYWNjZXNzaWJsZSB3aXRoIHRoZSBjdXJyZW50IHVzZXIuYCxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvamVjdF9pZDogcHJvamVjdElkLFxuICAgICAgICB9LFxuICAgIF07XG59LCAoanNvbikgPT4gW2pzb24ucHJvamVjdF9pZF0pO1xuY29uc3QgU2lnblVwTm90RW5hYmxlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlNJR05fVVBfTk9UX0VOQUJMRURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIkNyZWF0aW9uIG9mIG5ldyBhY2NvdW50cyBpcyBub3QgZW5hYmxlZCBmb3IgdGhpcyBwcm9qZWN0LiBQbGVhc2UgYXNrIHRoZSBwcm9qZWN0IG93bmVyIHRvIGVuYWJsZSBpdC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IFBhc3N3b3JkQXV0aGVudGljYXRpb25Ob3RFbmFibGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiUEFTU1dPUkRfQVVUSEVOVElDQVRJT05fTk9UX0VOQUJMRURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIlBhc3N3b3JkIGF1dGhlbnRpY2F0aW9uIGlzIG5vdCBlbmFibGVkIGZvciB0aGlzIHByb2plY3QuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBQYXNza2V5QXV0aGVudGljYXRpb25Ob3RFbmFibGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiUEFTU0tFWV9BVVRIRU5USUNBVElPTl9OT1RfRU5BQkxFRFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiUGFzc2tleSBhdXRoZW50aWNhdGlvbiBpcyBub3QgZW5hYmxlZCBmb3IgdGhpcyBwcm9qZWN0LlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgQW5vbnltb3VzQWNjb3VudHNOb3RFbmFibGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiQU5PTllNT1VTX0FDQ09VTlRTX05PVF9FTkFCTEVEXCIsICgpID0+IFtcbiAgICA0MDAsXG4gICAgXCJBbm9ueW1vdXMgYWNjb3VudHMgYXJlIG5vdCBlbmFibGVkIGZvciB0aGlzIHByb2plY3QuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBFbWFpbFBhc3N3b3JkTWlzbWF0Y2ggPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJFTUFJTF9QQVNTV09SRF9NSVNNQVRDSFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiV3JvbmcgZS1tYWlsIG9yIHBhc3N3b3JkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgUmVkaXJlY3RVcmxOb3RXaGl0ZWxpc3RlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlJFRElSRUNUX1VSTF9OT1RfV0hJVEVMSVNURURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIlJlZGlyZWN0IFVSTCBub3Qgd2hpdGVsaXN0ZWQuIERpZCB5b3UgZm9yZ2V0IHRvIGFkZCB0aGlzIGRvbWFpbiB0byB0aGUgdHJ1c3RlZCBkb21haW5zIGxpc3Qgb24gdGhlIFN0YWNrIEF1dGggZGFzaGJvYXJkP1wiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgUGFzc3dvcmRSZXF1aXJlbWVudHNOb3RNZXQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJQQVNTV09SRF9SRVFVSVJFTUVOVFNfTk9UX01FVFwiLCBcImluaGVyaXRcIiwgXCJpbmhlcml0XCIpO1xuY29uc3QgUGFzc3dvcmRUb29TaG9ydCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihQYXNzd29yZFJlcXVpcmVtZW50c05vdE1ldCwgXCJQQVNTV09SRF9UT09fU0hPUlRcIiwgKG1pbkxlbmd0aCkgPT4gW1xuICAgIDQwMCxcbiAgICBgUGFzc3dvcmQgdG9vIHNob3J0LiBNaW5pbXVtIGxlbmd0aCBpcyAke21pbkxlbmd0aH0uYCxcbiAgICB7XG4gICAgICAgIG1pbl9sZW5ndGg6IG1pbkxlbmd0aCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtcbiAgICBqc29uPy5taW5fbGVuZ3RoID8/IHRocm93RXJyKFwibWluX2xlbmd0aCBub3QgZm91bmQgaW4gUGFzc3dvcmRUb29TaG9ydCBkZXRhaWxzXCIpLFxuXSk7XG5jb25zdCBQYXNzd29yZFRvb0xvbmcgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoUGFzc3dvcmRSZXF1aXJlbWVudHNOb3RNZXQsIFwiUEFTU1dPUkRfVE9PX0xPTkdcIiwgKG1heExlbmd0aCkgPT4gW1xuICAgIDQwMCxcbiAgICBgUGFzc3dvcmQgdG9vIGxvbmcuIE1heGltdW0gbGVuZ3RoIGlzICR7bWF4TGVuZ3RofS5gLFxuICAgIHtcbiAgICAgICAgbWF4TGVuZ3RoLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW1xuICAgIGpzb24/Lm1heExlbmd0aCA/PyB0aHJvd0VycihcIm1heExlbmd0aCBub3QgZm91bmQgaW4gUGFzc3dvcmRUb29Mb25nIGRldGFpbHNcIiksXG5dKTtcbmNvbnN0IFVzZXJEb2VzTm90SGF2ZVBhc3N3b3JkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiVVNFUl9ET0VTX05PVF9IQVZFX1BBU1NXT1JEXCIsICgpID0+IFtcbiAgICA0MDAsXG4gICAgXCJUaGlzIHVzZXIgZG9lcyBub3QgaGF2ZSBwYXNzd29yZCBhdXRoZW50aWNhdGlvbiBlbmFibGVkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgVmVyaWZpY2F0aW9uQ29kZUVycm9yID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiVkVSSUZJQ0FUSU9OX0VSUk9SXCIsIFwiaW5oZXJpdFwiLCBcImluaGVyaXRcIik7XG5jb25zdCBWZXJpZmljYXRpb25Db2RlTm90Rm91bmQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoVmVyaWZpY2F0aW9uQ29kZUVycm9yLCBcIlZFUklGSUNBVElPTl9DT0RFX05PVF9GT1VORFwiLCAoKSA9PiBbXG4gICAgNDA0LFxuICAgIFwiVGhlIHZlcmlmaWNhdGlvbiBjb2RlIGRvZXMgbm90IGV4aXN0IGZvciB0aGlzIHByb2plY3QuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBWZXJpZmljYXRpb25Db2RlRXhwaXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihWZXJpZmljYXRpb25Db2RlRXJyb3IsIFwiVkVSSUZJQ0FUSU9OX0NPREVfRVhQSVJFRFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIHZlcmlmaWNhdGlvbiBjb2RlIGhhcyBleHBpcmVkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgVmVyaWZpY2F0aW9uQ29kZUFscmVhZHlVc2VkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFZlcmlmaWNhdGlvbkNvZGVFcnJvciwgXCJWRVJJRklDQVRJT05fQ09ERV9BTFJFQURZX1VTRURcIiwgKCkgPT4gW1xuICAgIDQwOSxcbiAgICBcIlRoZSB2ZXJpZmljYXRpb24gbGluayBoYXMgYWxyZWFkeSBiZWVuIHVzZWQuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBWZXJpZmljYXRpb25Db2RlTWF4QXR0ZW1wdHNSZWFjaGVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKFZlcmlmaWNhdGlvbkNvZGVFcnJvciwgXCJWRVJJRklDQVRJT05fQ09ERV9NQVhfQVRURU1QVFNfUkVBQ0hFRFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIHZlcmlmaWNhdGlvbiBjb2RlIG5vbmNlIGhhcyByZWFjaGVkIHRoZSBtYXhpbXVtIG51bWJlciBvZiBhdHRlbXB0cy4gVGhpcyBjb2RlIGlzIG5vdCB2YWxpZCBhbnltb3JlLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgUGFzc3dvcmRDb25maXJtYXRpb25NaXNtYXRjaCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlBBU1NXT1JEX0NPTkZJUk1BVElPTl9NSVNNQVRDSFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiUGFzc3dvcmRzIGRvIG5vdCBtYXRjaC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IEVtYWlsQWxyZWFkeVZlcmlmaWVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiRU1BSUxfQUxSRUFEWV9WRVJJRklFRFwiLCAoKSA9PiBbXG4gICAgNDA5LFxuICAgIFwiVGhlIGUtbWFpbCBpcyBhbHJlYWR5IHZlcmlmaWVkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgRW1haWxOb3RBc3NvY2lhdGVkV2l0aFVzZXIgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJFTUFJTF9OT1RfQVNTT0NJQVRFRF9XSVRIX1VTRVJcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIlRoZSBlLW1haWwgaXMgbm90IGFzc29jaWF0ZWQgd2l0aCBhIHVzZXIgdGhhdCBjb3VsZCBsb2cgaW4gd2l0aCB0aGF0IGUtbWFpbC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IEVtYWlsSXNOb3RQcmltYXJ5RW1haWwgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJFTUFJTF9JU19OT1RfUFJJTUFSWV9FTUFJTFwiLCAoZW1haWwsIHByaW1hcnlFbWFpbCkgPT4gW1xuICAgIDQwMCxcbiAgICBgVGhlIGdpdmVuIGUtbWFpbCAoJHtlbWFpbH0pIG11c3QgZXF1YWwgdGhlIHVzZXIncyBwcmltYXJ5IGUtbWFpbCAoJHtwcmltYXJ5RW1haWx9KS5gLFxuICAgIHtcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHByaW1hcnlfZW1haWw6IHByaW1hcnlFbWFpbCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLmVtYWlsLCBqc29uLnByaW1hcnlfZW1haWxdKTtcbmNvbnN0IFBhc3NrZXlSZWdpc3RyYXRpb25GYWlsZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJQQVNTS0VZX1JFR0lTVFJBVElPTl9GQUlMRURcIiwgKG1lc3NhZ2UpID0+IFtcbiAgICA0MDAsXG4gICAgbWVzc2FnZSxcbl0sIChqc29uKSA9PiBbanNvbi5tZXNzYWdlXSk7XG5jb25zdCBQYXNza2V5V2ViQXV0aG5FcnJvciA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlBBU1NLRVlfV0VCQVVUSE5fRVJST1JcIiwgKG1lc3NhZ2UsIGNvZGUpID0+IFtcbiAgICA0MDAsXG4gICAgbWVzc2FnZSxcbiAgICB7XG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIGNvZGUsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5tZXNzYWdlLCBqc29uLmNvZGVdKTtcbmNvbnN0IFBhc3NrZXlBdXRoZW50aWNhdGlvbkZhaWxlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlBBU1NLRVlfQVVUSEVOVElDQVRJT05fRkFJTEVEXCIsIChtZXNzYWdlKSA9PiBbXG4gICAgNDAwLFxuICAgIG1lc3NhZ2UsXG5dLCAoanNvbikgPT4gW2pzb24ubWVzc2FnZV0pO1xuY29uc3QgUGVybWlzc2lvbk5vdEZvdW5kID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiUEVSTUlTU0lPTl9OT1RfRk9VTkRcIiwgKHBlcm1pc3Npb25JZCkgPT4gW1xuICAgIDQwNCxcbiAgICBgUGVybWlzc2lvbiBcIiR7cGVybWlzc2lvbklkfVwiIG5vdCBmb3VuZC4gTWFrZSBzdXJlIHlvdSBjcmVhdGVkIGl0IG9uIHRoZSBkYXNoYm9hcmQuYCxcbiAgICB7XG4gICAgICAgIHBlcm1pc3Npb25faWQ6IHBlcm1pc3Npb25JZCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnBlcm1pc3Npb25faWRdKTtcbmNvbnN0IENvbnRhaW5lZFBlcm1pc3Npb25Ob3RGb3VuZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIkNPTlRBSU5FRF9QRVJNSVNTSU9OX05PVF9GT1VORFwiLCAocGVybWlzc2lvbklkKSA9PiBbXG4gICAgNDAwLFxuICAgIGBDb250YWluZWQgcGVybWlzc2lvbiB3aXRoIElEIFwiJHtwZXJtaXNzaW9uSWR9XCIgbm90IGZvdW5kLiBNYWtlIHN1cmUgeW91IGNyZWF0ZWQgaXQgb24gdGhlIGRhc2hib2FyZC5gLFxuICAgIHtcbiAgICAgICAgcGVybWlzc2lvbl9pZDogcGVybWlzc2lvbklkLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW2pzb24ucGVybWlzc2lvbl9pZF0pO1xuY29uc3QgVGVhbU5vdEZvdW5kID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiVEVBTV9OT1RfRk9VTkRcIiwgKHRlYW1JZCkgPT4gW1xuICAgIDQwNCxcbiAgICBgVGVhbSAke3RlYW1JZH0gbm90IGZvdW5kLmAsXG4gICAge1xuICAgICAgICB0ZWFtX2lkOiB0ZWFtSWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi50ZWFtX2lkXSk7XG5jb25zdCBUZWFtQWxyZWFkeUV4aXN0cyA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlRFQU1fQUxSRUFEWV9FWElTVFNcIiwgKHRlYW1JZCkgPT4gW1xuICAgIDQwOSxcbiAgICBgVGVhbSAke3RlYW1JZH0gYWxyZWFkeSBleGlzdHMuYCxcbiAgICB7XG4gICAgICAgIHRlYW1faWQ6IHRlYW1JZCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnRlYW1faWRdKTtcbmNvbnN0IFRlYW1NZW1iZXJzaGlwTm90Rm91bmQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJURUFNX01FTUJFUlNISVBfTk9UX0ZPVU5EXCIsICh0ZWFtSWQsIHVzZXJJZCkgPT4gW1xuICAgIDQwNCxcbiAgICBgVXNlciAke3VzZXJJZH0gaXMgbm90IGZvdW5kIGluIHRlYW0gJHt0ZWFtSWR9LmAsXG4gICAge1xuICAgICAgICB0ZWFtX2lkOiB0ZWFtSWQsXG4gICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnRlYW1faWQsIGpzb24udXNlcl9pZF0pO1xuY29uc3QgRW1haWxUZW1wbGF0ZUFscmVhZHlFeGlzdHMgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJFTUFJTF9URU1QTEFURV9BTFJFQURZX0VYSVNUU1wiLCAoKSA9PiBbXG4gICAgNDA5LFxuICAgIFwiRW1haWwgdGVtcGxhdGUgYWxyZWFkeSBleGlzdHMuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBPQXV0aENvbm5lY3Rpb25Ob3RDb25uZWN0ZWRUb1VzZXIgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJPQVVUSF9DT05ORUNUSU9OX05PVF9DT05ORUNURURfVE9fVVNFUlwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIE9BdXRoIGNvbm5lY3Rpb24gaXMgbm90IGNvbm5lY3RlZCB0byBhbnkgdXNlci5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IE9BdXRoQ29ubmVjdGlvbkFscmVhZHlDb25uZWN0ZWRUb0Fub3RoZXJVc2VyID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiT0FVVEhfQ09OTkVDVElPTl9BTFJFQURZX0NPTk5FQ1RFRF9UT19BTk9USEVSX1VTRVJcIiwgKCkgPT4gW1xuICAgIDQwOSxcbiAgICBcIlRoZSBPQXV0aCBjb25uZWN0aW9uIGlzIGFscmVhZHkgY29ubmVjdGVkIHRvIGFub3RoZXIgdXNlci5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IE9BdXRoQ29ubmVjdGlvbkRvZXNOb3RIYXZlUmVxdWlyZWRTY29wZSA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIk9BVVRIX0NPTk5FQ1RJT05fRE9FU19OT1RfSEFWRV9SRVFVSVJFRF9TQ09QRVwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIE9BdXRoIGNvbm5lY3Rpb24gZG9lcyBub3QgaGF2ZSB0aGUgcmVxdWlyZWQgc2NvcGUuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBPQXV0aEV4dHJhU2NvcGVOb3RBdmFpbGFibGVXaXRoU2hhcmVkT0F1dGhLZXlzID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiT0FVVEhfRVhUUkFfU0NPUEVfTk9UX0FWQUlMQUJMRV9XSVRIX1NIQVJFRF9PQVVUSF9LRVlTXCIsICgpID0+IFtcbiAgICA0MDAsXG4gICAgXCJFeHRyYSBzY29wZXMgYXJlIG5vdCBhdmFpbGFibGUgd2l0aCBzaGFyZWQgT0F1dGgga2V5cy4gUGxlYXNlIGFkZCB5b3VyIG93biBPQXV0aCBrZXlzIG9uIHRoZSBTdGFjayBkYXNoYm9hcmQgdG8gdXNlIGV4dHJhIHNjb3Blcy5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IE9BdXRoQWNjZXNzVG9rZW5Ob3RBdmFpbGFibGVXaXRoU2hhcmVkT0F1dGhLZXlzID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiT0FVVEhfQUNDRVNTX1RPS0VOX05PVF9BVkFJTEFCTEVfV0lUSF9TSEFSRURfT0FVVEhfS0VZU1wiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiQWNjZXNzIHRva2VucyBhcmUgbm90IGF2YWlsYWJsZSB3aXRoIHNoYXJlZCBPQXV0aCBrZXlzLiBQbGVhc2UgYWRkIHlvdXIgb3duIE9BdXRoIGtleXMgb24gdGhlIFN0YWNrIGRhc2hib2FyZCB0byB1c2UgYWNjZXNzIHRva2Vucy5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IEludmFsaWRPQXV0aENsaWVudElkT3JTZWNyZXQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJJTlZBTElEX09BVVRIX0NMSUVOVF9JRF9PUl9TRUNSRVRcIiwgKGNsaWVudElkKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIE9BdXRoIGNsaWVudCBJRCBvciBzZWNyZXQgaXMgaW52YWxpZC4gVGhlIGNsaWVudCBJRCBtdXN0IGJlIGVxdWFsIHRvIHRoZSBwcm9qZWN0IElELCBhbmQgdGhlIGNsaWVudCBzZWNyZXQgbXVzdCBiZSBhIHB1Ymxpc2hhYmxlIGNsaWVudCBrZXkuXCIsXG4gICAge1xuICAgICAgICBjbGllbnRfaWQ6IGNsaWVudElkID8/IG51bGwsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5jbGllbnRfaWQgPz8gdW5kZWZpbmVkXSk7XG5jb25zdCBJbnZhbGlkU2NvcGUgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJJTlZBTElEX1NDT1BFXCIsIChzY29wZSkgPT4gW1xuICAgIDQwMCxcbiAgICBgVGhlIHNjb3BlIFwiJHtzY29wZX1cIiBpcyBub3QgYSB2YWxpZCBPQXV0aCBzY29wZSBmb3IgU3RhY2suYCxcbl0sIChqc29uKSA9PiBbanNvbi5zY29wZV0pO1xuY29uc3QgVXNlckFscmVhZHlDb25uZWN0ZWRUb0Fub3RoZXJPQXV0aENvbm5lY3Rpb24gPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJVU0VSX0FMUkVBRFlfQ09OTkVDVEVEX1RPX0FOT1RIRVJfT0FVVEhfQ09OTkVDVElPTlwiLCAoKSA9PiBbXG4gICAgNDA5LFxuICAgIFwiVGhlIHVzZXIgaXMgYWxyZWFkeSBjb25uZWN0ZWQgdG8gYW5vdGhlciBPQXV0aCBhY2NvdW50LiBEaWQgeW91IG1heWJlIHNlbGVjdGVkIHRoZSB3cm9uZyBhY2NvdW50P1wiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgT3V0ZXJPQXV0aFRpbWVvdXQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJPVVRFUl9PQVVUSF9USU1FT1VUXCIsICgpID0+IFtcbiAgICA0MDgsXG4gICAgXCJUaGUgT0F1dGggZmxvdyBoYXMgdGltZWQgb3V0LiBQbGVhc2Ugc2lnbiBpbiBhZ2Fpbi5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IE9BdXRoUHJvdmlkZXJOb3RGb3VuZE9yTm90RW5hYmxlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIk9BVVRIX1BST1ZJREVSX05PVF9GT1VORF9PUl9OT1RfRU5BQkxFRFwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIE9BdXRoIHByb3ZpZGVyIGlzIG5vdCBmb3VuZCBvciBub3QgZW5hYmxlZC5cIixcbl0sICgpID0+IFtdKTtcbmNvbnN0IE11bHRpRmFjdG9yQXV0aGVudGljYXRpb25SZXF1aXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIk1VTFRJX0ZBQ1RPUl9BVVRIRU5USUNBVElPTl9SRVFVSVJFRFwiLCAoYXR0ZW1wdENvZGUpID0+IFtcbiAgICA0MDAsXG4gICAgYE11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiBpcyByZXF1aXJlZCBmb3IgdGhpcyB1c2VyLmAsXG4gICAge1xuICAgICAgICBhdHRlbXB0X2NvZGU6IGF0dGVtcHRDb2RlLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW2pzb24uYXR0ZW1wdF9jb2RlXSk7XG5jb25zdCBJbnZhbGlkVG90cENvZGUgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJJTlZBTElEX1RPVFBfQ09ERVwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIFRPVFAgY29kZSBpcyBpbnZhbGlkLiBQbGVhc2UgdHJ5IGFnYWluLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgVXNlckF1dGhlbnRpY2F0aW9uUmVxdWlyZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJVU0VSX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEXCIsICgpID0+IFtcbiAgICA0MDEsXG4gICAgXCJVc2VyIGF1dGhlbnRpY2F0aW9uIHJlcXVpcmVkIGZvciB0aGlzIGVuZHBvaW50LlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgVGVhbU1lbWJlcnNoaXBBbHJlYWR5RXhpc3RzID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiVEVBTV9NRU1CRVJTSElQX0FMUkVBRFlfRVhJU1RTXCIsICgpID0+IFtcbiAgICA0MDksXG4gICAgXCJUZWFtIG1lbWJlcnNoaXAgYWxyZWFkeSBleGlzdHMuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBQcm9qZWN0UGVybWlzc2lvblJlcXVpcmVkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiUFJPSkVDVF9QRVJNSVNTSU9OX1JFUVVJUkVEXCIsICh1c2VySWQsIHBlcm1pc3Npb25JZCkgPT4gW1xuICAgIDQwMSxcbiAgICBgVXNlciAke3VzZXJJZH0gZG9lcyBub3QgaGF2ZSBwZXJtaXNzaW9uICR7cGVybWlzc2lvbklkfS5gLFxuICAgIHtcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICBwZXJtaXNzaW9uX2lkOiBwZXJtaXNzaW9uSWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi51c2VyX2lkLCBqc29uLnBlcm1pc3Npb25faWRdKTtcbmNvbnN0IFRlYW1QZXJtaXNzaW9uUmVxdWlyZWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJURUFNX1BFUk1JU1NJT05fUkVRVUlSRURcIiwgKHRlYW1JZCwgdXNlcklkLCBwZXJtaXNzaW9uSWQpID0+IFtcbiAgICA0MDEsXG4gICAgYFVzZXIgJHt1c2VySWR9IGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbiAke3Blcm1pc3Npb25JZH0gaW4gdGVhbSAke3RlYW1JZH0uYCxcbiAgICB7XG4gICAgICAgIHRlYW1faWQ6IHRlYW1JZCxcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICBwZXJtaXNzaW9uX2lkOiBwZXJtaXNzaW9uSWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi50ZWFtX2lkLCBqc29uLnVzZXJfaWQsIGpzb24ucGVybWlzc2lvbl9pZF0pO1xuY29uc3QgVGVhbVBlcm1pc3Npb25Ob3RGb3VuZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIlRFQU1fUEVSTUlTU0lPTl9OT1RfRk9VTkRcIiwgKHRlYW1JZCwgdXNlcklkLCBwZXJtaXNzaW9uSWQpID0+IFtcbiAgICA0MDEsXG4gICAgYFVzZXIgJHt1c2VySWR9IGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbiAke3Blcm1pc3Npb25JZH0gaW4gdGVhbSAke3RlYW1JZH0uYCxcbiAgICB7XG4gICAgICAgIHRlYW1faWQ6IHRlYW1JZCxcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICBwZXJtaXNzaW9uX2lkOiBwZXJtaXNzaW9uSWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi50ZWFtX2lkLCBqc29uLnVzZXJfaWQsIGpzb24ucGVybWlzc2lvbl9pZF0pO1xuY29uc3QgSW52YWxpZFNoYXJlZE9BdXRoUHJvdmlkZXJJZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIklOVkFMSURfU0hBUkVEX09BVVRIX1BST1ZJREVSX0lEXCIsIChwcm92aWRlcklkKSA9PiBbXG4gICAgNDAwLFxuICAgIGBUaGUgc2hhcmVkIE9BdXRoIHByb3ZpZGVyIHdpdGggSUQgJHtwcm92aWRlcklkfSBpcyBub3QgdmFsaWQuYCxcbiAgICB7XG4gICAgICAgIHByb3ZpZGVyX2lkOiBwcm92aWRlcklkLFxuICAgIH0sXG5dLCAoanNvbikgPT4gW2pzb24ucHJvdmlkZXJfaWRdKTtcbmNvbnN0IEludmFsaWRTdGFuZGFyZE9BdXRoUHJvdmlkZXJJZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIklOVkFMSURfU1RBTkRBUkRfT0FVVEhfUFJPVklERVJfSURcIiwgKHByb3ZpZGVySWQpID0+IFtcbiAgICA0MDAsXG4gICAgYFRoZSBzdGFuZGFyZCBPQXV0aCBwcm92aWRlciB3aXRoIElEICR7cHJvdmlkZXJJZH0gaXMgbm90IHZhbGlkLmAsXG4gICAge1xuICAgICAgICBwcm92aWRlcl9pZDogcHJvdmlkZXJJZCxcbiAgICB9LFxuXSwgKGpzb24pID0+IFtqc29uLnByb3ZpZGVyX2lkXSk7XG5jb25zdCBJbnZhbGlkQXV0aG9yaXphdGlvbkNvZGUgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJJTlZBTElEX0FVVEhPUklaQVRJT05fQ09ERVwiLCAoKSA9PiBbXG4gICAgNDAwLFxuICAgIFwiVGhlIGdpdmVuIGF1dGhvcml6YXRpb24gY29kZSBpcyBpbnZhbGlkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgT0F1dGhQcm92aWRlckFjY2Vzc0RlbmllZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihLbm93bkVycm9yLCBcIk9BVVRIX1BST1ZJREVSX0FDQ0VTU19ERU5JRURcIiwgKCkgPT4gW1xuICAgIDQwMCxcbiAgICBcIlRoZSBPQXV0aCBwcm92aWRlciBkZW5pZWQgYWNjZXNzIHRvIHRoZSB1c2VyLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgQ29udGFjdENoYW5uZWxBbHJlYWR5VXNlZEZvckF1dGhCeVNvbWVvbmVFbHNlID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiQ09OVEFDVF9DSEFOTkVMX0FMUkVBRFlfVVNFRF9GT1JfQVVUSF9CWV9TT01FT05FX0VMU0VcIiwgKHR5cGUsIGNvbnRhY3RDaGFubmVsVmFsdWUpID0+IFtcbiAgICA0MDksXG4gICAgY29udGFjdENoYW5uZWxWYWx1ZSA/XG4gICAgICAgIGBUaGUgJHt0eXBlfSAoJHtjb250YWN0Q2hhbm5lbFZhbHVlfSkgaXMgYWxyZWFkeSB1c2VkIGZvciBhdXRoZW50aWNhdGlvbiBieSBhbm90aGVyIGFjY291bnQuYCA6XG4gICAgICAgIGBUaGlzICR7dHlwZX0gaXMgYWxyZWFkeSB1c2VkIGZvciBhdXRoZW50aWNhdGlvbiBieSBhbm90aGVyIGFjY291bnQuYCxcbiAgICB7IHR5cGUsIGNvbnRhY3RfY2hhbm5lbF92YWx1ZTogY29udGFjdENoYW5uZWxWYWx1ZSA/PyBudWxsIH0sXG5dLCAoanNvbikgPT4gW2pzb24udHlwZSwganNvbi5jb250YWN0X2NoYW5uZWxfdmFsdWVdKTtcbmNvbnN0IEludmFsaWRQb2xsaW5nQ29kZUVycm9yID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiSU5WQUxJRF9QT0xMSU5HX0NPREVcIiwgKGRldGFpbHMpID0+IFtcbiAgICA0MDAsXG4gICAgXCJUaGUgcG9sbGluZyBjb2RlIGlzIGludmFsaWQgb3IgZG9lcyBub3QgZXhpc3QuXCIsXG4gICAgZGV0YWlscyxcbl0sIChqc29uKSA9PiBbanNvbl0pO1xuY29uc3QgQXBpS2V5Tm90VmFsaWQgPSBjcmVhdGVLbm93bkVycm9yQ29uc3RydWN0b3IoS25vd25FcnJvciwgXCJBUElfS0VZX05PVF9WQUxJRFwiLCBcImluaGVyaXRcIiwgXCJpbmhlcml0XCIpO1xuY29uc3QgQXBpS2V5RXhwaXJlZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihBcGlLZXlOb3RWYWxpZCwgXCJBUElfS0VZX0VYUElSRURcIiwgKCkgPT4gW1xuICAgIDQwMSxcbiAgICBcIkFQSSBrZXkgaGFzIGV4cGlyZWQuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBBcGlLZXlSZXZva2VkID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEFwaUtleU5vdFZhbGlkLCBcIkFQSV9LRVlfUkVWT0tFRFwiLCAoKSA9PiBbXG4gICAgNDAxLFxuICAgIFwiQVBJIGtleSBoYXMgYmVlbiByZXZva2VkLlwiLFxuXSwgKCkgPT4gW10pO1xuY29uc3QgV3JvbmdBcGlLZXlUeXBlID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEFwaUtleU5vdFZhbGlkLCBcIldST05HX0FQSV9LRVlfVFlQRVwiLCAoZXhwZWN0ZWRUeXBlLCBhY3R1YWxUeXBlKSA9PiBbXG4gICAgNDAwLFxuICAgIGBUaGlzIGVuZHBvaW50IGlzIGZvciAke2V4cGVjdGVkVHlwZX0gQVBJIGtleXMsIGJ1dCBhICR7YWN0dWFsVHlwZX0gQVBJIGtleSB3YXMgcHJvdmlkZWQuYCxcbiAgICB7IGV4cGVjdGVkX3R5cGU6IGV4cGVjdGVkVHlwZSwgYWN0dWFsX3R5cGU6IGFjdHVhbFR5cGUgfSxcbl0sIChqc29uKSA9PiBbanNvbi5leHBlY3RlZF90eXBlLCBqc29uLmFjdHVhbF90eXBlXSk7XG5jb25zdCBBcGlLZXlOb3RGb3VuZCA9IGNyZWF0ZUtub3duRXJyb3JDb25zdHJ1Y3RvcihBcGlLZXlOb3RWYWxpZCwgXCJBUElfS0VZX05PVF9GT1VORFwiLCAoKSA9PiBbXG4gICAgNDA0LFxuICAgIFwiQVBJIGtleSBub3QgZm91bmQuXCIsXG5dLCAoKSA9PiBbXSk7XG5jb25zdCBQZXJtaXNzaW9uSWRBbHJlYWR5RXhpc3RzID0gY3JlYXRlS25vd25FcnJvckNvbnN0cnVjdG9yKEtub3duRXJyb3IsIFwiUEVSTUlTU0lPTl9JRF9BTFJFQURZX0VYSVNUU1wiLCAocGVybWlzc2lvbklkKSA9PiBbXG4gICAgNDAwLFxuICAgIGBQZXJtaXNzaW9uIHdpdGggSUQgXCIke3Blcm1pc3Npb25JZH1cIiBhbHJlYWR5IGV4aXN0cy4gQ2hvb3NlIGEgZGlmZmVyZW50IElELmAsXG4gICAge1xuICAgICAgICBwZXJtaXNzaW9uX2lkOiBwZXJtaXNzaW9uSWQsXG4gICAgfSxcbl0sIChqc29uKSA9PiBbanNvbi5wZXJtaXNzaW9uX2lkXSk7XG5leHBvcnQgY29uc3QgS25vd25FcnJvcnMgPSB7XG4gICAgQ2Fubm90RGVsZXRlQ3VycmVudFNlc3Npb24sXG4gICAgVW5zdXBwb3J0ZWRFcnJvcixcbiAgICBCb2R5UGFyc2luZ0Vycm9yLFxuICAgIFNjaGVtYUVycm9yLFxuICAgIEFsbE92ZXJsb2Fkc0ZhaWxlZCxcbiAgICBQcm9qZWN0QXV0aGVudGljYXRpb25FcnJvcixcbiAgICBQZXJtaXNzaW9uSWRBbHJlYWR5RXhpc3RzLFxuICAgIEludmFsaWRQcm9qZWN0QXV0aGVudGljYXRpb24sXG4gICAgUHJvamVjdEtleVdpdGhvdXRBY2Nlc3NUeXBlLFxuICAgIEludmFsaWRBY2Nlc3NUeXBlLFxuICAgIEFjY2Vzc1R5cGVXaXRob3V0UHJvamVjdElkLFxuICAgIEFjY2Vzc1R5cGVSZXF1aXJlZCxcbiAgICBDYW5ub3RHZXRPd25Vc2VyV2l0aG91dFVzZXIsXG4gICAgSW5zdWZmaWNpZW50QWNjZXNzVHlwZSxcbiAgICBJbnZhbGlkUHVibGlzaGFibGVDbGllbnRLZXksXG4gICAgSW52YWxpZFNlY3JldFNlcnZlcktleSxcbiAgICBJbnZhbGlkU3VwZXJTZWNyZXRBZG1pbktleSxcbiAgICBJbnZhbGlkQWRtaW5BY2Nlc3NUb2tlbixcbiAgICBVbnBhcnNhYmxlQWRtaW5BY2Nlc3NUb2tlbixcbiAgICBBZG1pbkFjY2Vzc1Rva2VuRXhwaXJlZCxcbiAgICBJbnZhbGlkUHJvamVjdEZvckFkbWluQWNjZXNzVG9rZW4sXG4gICAgQWRtaW5BY2Nlc3NUb2tlbklzTm90QWRtaW4sXG4gICAgUHJvamVjdEF1dGhlbnRpY2F0aW9uUmVxdWlyZWQsXG4gICAgQ2xpZW50QXV0aGVudGljYXRpb25SZXF1aXJlZCxcbiAgICBTZXJ2ZXJBdXRoZW50aWNhdGlvblJlcXVpcmVkLFxuICAgIENsaWVudE9yU2VydmVyQXV0aGVudGljYXRpb25SZXF1aXJlZCxcbiAgICBDbGllbnRPckFkbWluQXV0aGVudGljYXRpb25SZXF1aXJlZCxcbiAgICBDbGllbnRPclNlcnZlck9yQWRtaW5BdXRoZW50aWNhdGlvblJlcXVpcmVkLFxuICAgIEFkbWluQXV0aGVudGljYXRpb25SZXF1aXJlZCxcbiAgICBFeHBlY3RlZEludGVybmFsUHJvamVjdCxcbiAgICBTZXNzaW9uQXV0aGVudGljYXRpb25FcnJvcixcbiAgICBJbnZhbGlkU2Vzc2lvbkF1dGhlbnRpY2F0aW9uLFxuICAgIEludmFsaWRBY2Nlc3NUb2tlbixcbiAgICBVbnBhcnNhYmxlQWNjZXNzVG9rZW4sXG4gICAgQWNjZXNzVG9rZW5FeHBpcmVkLFxuICAgIEludmFsaWRQcm9qZWN0Rm9yQWNjZXNzVG9rZW4sXG4gICAgUmVmcmVzaFRva2VuRXJyb3IsXG4gICAgUHJvdmlkZXJSZWplY3RlZCxcbiAgICBSZWZyZXNoVG9rZW5Ob3RGb3VuZE9yRXhwaXJlZCxcbiAgICBVc2VyV2l0aEVtYWlsQWxyZWFkeUV4aXN0cyxcbiAgICBFbWFpbE5vdFZlcmlmaWVkLFxuICAgIFVzZXJJZERvZXNOb3RFeGlzdCxcbiAgICBVc2VyTm90Rm91bmQsXG4gICAgQXBpS2V5Tm90Rm91bmQsXG4gICAgUHJvamVjdE5vdEZvdW5kLFxuICAgIFNpZ25VcE5vdEVuYWJsZWQsXG4gICAgUGFzc3dvcmRBdXRoZW50aWNhdGlvbk5vdEVuYWJsZWQsXG4gICAgUGFzc2tleUF1dGhlbnRpY2F0aW9uTm90RW5hYmxlZCxcbiAgICBBbm9ueW1vdXNBY2NvdW50c05vdEVuYWJsZWQsXG4gICAgRW1haWxQYXNzd29yZE1pc21hdGNoLFxuICAgIFJlZGlyZWN0VXJsTm90V2hpdGVsaXN0ZWQsXG4gICAgUGFzc3dvcmRSZXF1aXJlbWVudHNOb3RNZXQsXG4gICAgUGFzc3dvcmRUb29TaG9ydCxcbiAgICBQYXNzd29yZFRvb0xvbmcsXG4gICAgVXNlckRvZXNOb3RIYXZlUGFzc3dvcmQsXG4gICAgVmVyaWZpY2F0aW9uQ29kZUVycm9yLFxuICAgIFZlcmlmaWNhdGlvbkNvZGVOb3RGb3VuZCxcbiAgICBWZXJpZmljYXRpb25Db2RlRXhwaXJlZCxcbiAgICBWZXJpZmljYXRpb25Db2RlQWxyZWFkeVVzZWQsXG4gICAgVmVyaWZpY2F0aW9uQ29kZU1heEF0dGVtcHRzUmVhY2hlZCxcbiAgICBQYXNzd29yZENvbmZpcm1hdGlvbk1pc21hdGNoLFxuICAgIEVtYWlsQWxyZWFkeVZlcmlmaWVkLFxuICAgIEVtYWlsTm90QXNzb2NpYXRlZFdpdGhVc2VyLFxuICAgIEVtYWlsSXNOb3RQcmltYXJ5RW1haWwsXG4gICAgUGFzc2tleVJlZ2lzdHJhdGlvbkZhaWxlZCxcbiAgICBQYXNza2V5V2ViQXV0aG5FcnJvcixcbiAgICBQYXNza2V5QXV0aGVudGljYXRpb25GYWlsZWQsXG4gICAgUGVybWlzc2lvbk5vdEZvdW5kLFxuICAgIENvbnRhaW5lZFBlcm1pc3Npb25Ob3RGb3VuZCxcbiAgICBUZWFtTm90Rm91bmQsXG4gICAgVGVhbU1lbWJlcnNoaXBOb3RGb3VuZCxcbiAgICBFbWFpbFRlbXBsYXRlQWxyZWFkeUV4aXN0cyxcbiAgICBPQXV0aENvbm5lY3Rpb25Ob3RDb25uZWN0ZWRUb1VzZXIsXG4gICAgT0F1dGhDb25uZWN0aW9uQWxyZWFkeUNvbm5lY3RlZFRvQW5vdGhlclVzZXIsXG4gICAgT0F1dGhDb25uZWN0aW9uRG9lc05vdEhhdmVSZXF1aXJlZFNjb3BlLFxuICAgIE9BdXRoRXh0cmFTY29wZU5vdEF2YWlsYWJsZVdpdGhTaGFyZWRPQXV0aEtleXMsXG4gICAgT0F1dGhBY2Nlc3NUb2tlbk5vdEF2YWlsYWJsZVdpdGhTaGFyZWRPQXV0aEtleXMsXG4gICAgSW52YWxpZE9BdXRoQ2xpZW50SWRPclNlY3JldCxcbiAgICBJbnZhbGlkU2NvcGUsXG4gICAgVXNlckFscmVhZHlDb25uZWN0ZWRUb0Fub3RoZXJPQXV0aENvbm5lY3Rpb24sXG4gICAgT3V0ZXJPQXV0aFRpbWVvdXQsXG4gICAgT0F1dGhQcm92aWRlck5vdEZvdW5kT3JOb3RFbmFibGVkLFxuICAgIE11bHRpRmFjdG9yQXV0aGVudGljYXRpb25SZXF1aXJlZCxcbiAgICBJbnZhbGlkVG90cENvZGUsXG4gICAgVXNlckF1dGhlbnRpY2F0aW9uUmVxdWlyZWQsXG4gICAgVGVhbU1lbWJlcnNoaXBBbHJlYWR5RXhpc3RzLFxuICAgIFByb2plY3RQZXJtaXNzaW9uUmVxdWlyZWQsXG4gICAgVGVhbVBlcm1pc3Npb25SZXF1aXJlZCxcbiAgICBJbnZhbGlkU2hhcmVkT0F1dGhQcm92aWRlcklkLFxuICAgIEludmFsaWRTdGFuZGFyZE9BdXRoUHJvdmlkZXJJZCxcbiAgICBJbnZhbGlkQXV0aG9yaXphdGlvbkNvZGUsXG4gICAgVGVhbVBlcm1pc3Npb25Ob3RGb3VuZCxcbiAgICBPQXV0aFByb3ZpZGVyQWNjZXNzRGVuaWVkLFxuICAgIENvbnRhY3RDaGFubmVsQWxyZWFkeVVzZWRGb3JBdXRoQnlTb21lb25lRWxzZSxcbiAgICBJbnZhbGlkUG9sbGluZ0NvZGVFcnJvcixcbiAgICBBcGlLZXlOb3RWYWxpZCxcbiAgICBBcGlLZXlFeHBpcmVkLFxuICAgIEFwaUtleVJldm9rZWQsXG4gICAgV3JvbmdBcGlLZXlUeXBlLFxufTtcbi8vIGVuc3VyZSB0aGF0IGFsbCBrbm93biBlcnJvciBjb2RlcyBhcmUgdW5pcXVlXG5jb25zdCBrbm93bkVycm9yQ29kZXMgPSBuZXcgU2V0KCk7XG5mb3IgKGNvbnN0IFtfLCBLbm93bkVycm9yXSBvZiBPYmplY3QuZW50cmllcyhLbm93bkVycm9ycykpIHtcbiAgICBpZiAoa25vd25FcnJvckNvZGVzLmhhcyhLbm93bkVycm9yLmVycm9yQ29kZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUga25vd24gZXJyb3IgY29kZTogJHtLbm93bkVycm9yLmVycm9yQ29kZX1gKTtcbiAgICB9XG4gICAga25vd25FcnJvckNvZGVzLmFkZChLbm93bkVycm9yLmVycm9yQ29kZSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/sessions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/sessions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   InternalSession: () => (/* binding */ InternalSession),\n/* harmony export */   RefreshToken: () => (/* binding */ RefreshToken)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js\");\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_stores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n\n\n\nclass AccessToken {\n    constructor(token) {\n        this.token = token;\n        if (token === \"undefined\") {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Access token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n        }\n    }\n    get decoded() {\n        return jose__WEBPACK_IMPORTED_MODULE_2__.decodeJwt(this.token);\n    }\n    get expiresAt() {\n        const { exp } = this.decoded;\n        if (exp === undefined)\n            return new Date(8640000000000000); // max date value\n        return new Date(exp * 1000);\n    }\n    /**\n     * @returns The number of milliseconds until the access token expires, or 0 if it has already expired.\n     */\n    get expiresInMillis() {\n        return Math.max(0, this.expiresAt.getTime() - Date.now());\n    }\n    isExpired() {\n        return this.expiresInMillis <= 0;\n    }\n}\nclass RefreshToken {\n    constructor(token) {\n        this.token = token;\n        if (token === \"undefined\") {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Refresh token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n        }\n    }\n}\n/**\n * An InternalSession represents a user's session, which may or may not be valid. It may contain an access token, a refresh token, or both.\n *\n * A session never changes which user or session it belongs to, but the tokens in it may change over time.\n */\nclass InternalSession {\n    constructor(_options) {\n        this._options = _options;\n        /**\n         * Whether the session as a whole is known to be invalid (ie. both access and refresh tokens are invalid). Used as a cache to avoid making multiple requests to the server (sessions never go back to being valid after being invalidated).\n         *\n         * It is possible for the access token to be invalid but the refresh token to be valid, in which case the session is\n         * still valid (just needs a refresh). It is also possible for the access token to be valid but the refresh token to\n         * be invalid, in which case the session is also valid (eg. if the refresh token is null because the user only passed\n         * in an access token, eg. in a server-side request handler).\n         */\n        this._knownToBeInvalid = new _utils_stores__WEBPACK_IMPORTED_MODULE_1__.Store(false);\n        this._refreshPromise = null;\n        this._accessToken = new _utils_stores__WEBPACK_IMPORTED_MODULE_1__.Store(_options.accessToken ? new AccessToken(_options.accessToken) : null);\n        this._refreshToken = _options.refreshToken ? new RefreshToken(_options.refreshToken) : null;\n        if (_options.accessToken === null && _options.refreshToken === null) {\n            // this session is already invalid\n            this._knownToBeInvalid.set(true);\n        }\n        this.sessionKey = InternalSession.calculateSessionKey({ accessToken: _options.accessToken ?? null, refreshToken: _options.refreshToken });\n    }\n    static calculateSessionKey(ofTokens) {\n        if (ofTokens.refreshToken) {\n            return `refresh-${ofTokens.refreshToken}`;\n        }\n        else if (ofTokens.accessToken) {\n            return `access-${ofTokens.accessToken}`;\n        }\n        else {\n            return \"not-logged-in\";\n        }\n    }\n    isKnownToBeInvalid() {\n        return this._knownToBeInvalid.get();\n    }\n    /**\n     * Marks the session object as invalid, meaning that the refresh and access tokens can no longer be used.\n     */\n    markInvalid() {\n        this._accessToken.set(null);\n        this._knownToBeInvalid.set(true);\n    }\n    onInvalidate(callback) {\n        return this._knownToBeInvalid.onChange(() => callback());\n    }\n    /**\n     * Returns the access token if it is found in the cache, fetching it otherwise.\n     *\n     * This is usually the function you want to call to get an access token. Either set `minMillisUntilExpiration` to a reasonable value, or catch errors that occur if it expires, and call `markAccessTokenExpired` to mark the token as expired if so (after which a call to this function will always refetch the token).\n     *\n     * @returns null if the session is known to be invalid, cached tokens if they exist in the cache (which may or may not be valid still), or new tokens otherwise.\n     */\n    async getOrFetchLikelyValidTokens(minMillisUntilExpiration) {\n        if (minMillisUntilExpiration >= 60000) {\n            throw new Error(`Required access token expiry ${minMillisUntilExpiration}ms is too long; access tokens are too short to be used for more than 60s`);\n        }\n        const accessToken = this._getPotentiallyInvalidAccessTokenIfAvailable();\n        if (!accessToken || accessToken.expiresInMillis < minMillisUntilExpiration) {\n            const newTokens = await this.fetchNewTokens();\n            const expiresInMillis = newTokens?.accessToken.expiresInMillis;\n            if (expiresInMillis && expiresInMillis < minMillisUntilExpiration) {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Required access token expiry ${minMillisUntilExpiration}ms is too long; access tokens are too short when they're generated (${expiresInMillis}ms)`);\n            }\n            return newTokens;\n        }\n        return { accessToken, refreshToken: this._refreshToken };\n    }\n    /**\n     * Fetches new tokens that are, at the time of fetching, guaranteed to be valid.\n     *\n     * The newly generated tokens are short-lived, so it's good practice not to rely on their validity (if possible). However, this function is useful in some cases where you only want to pass access tokens to a service, and you want to make sure said access token has the longest possible lifetime.\n     *\n     * In most cases, you should prefer `getOrFetchLikelyValidTokens`.\n     *\n     * @returns null if the session is known to be invalid, or new tokens otherwise (which, at the time of fetching, are guaranteed to be valid).\n     */\n    async fetchNewTokens() {\n        const accessToken = await this._getNewlyFetchedAccessToken();\n        return accessToken ? { accessToken, refreshToken: this._refreshToken } : null;\n    }\n    markAccessTokenExpired(accessToken) {\n        // TODO we don't need this anymore, since we now check the expiry by ourselves\n        if (this._accessToken.get() === accessToken) {\n            this._accessToken.set(null);\n        }\n    }\n    /**\n     * Note that a callback invocation with `null` does not mean the session has been invalidated; the access token may just have expired. Use `onInvalidate` to detect invalidation.\n     */\n    onAccessTokenChange(callback) {\n        return this._accessToken.onChange(callback);\n    }\n    /**\n     * @returns An access token, which may be expired or expire soon, or null if it is known to be invalid.\n     */\n    _getPotentiallyInvalidAccessTokenIfAvailable() {\n        if (!this._refreshToken)\n            return null;\n        if (this.isKnownToBeInvalid())\n            return null;\n        const accessToken = this._accessToken.get();\n        if (accessToken && !accessToken.isExpired())\n            return accessToken;\n        return null;\n    }\n    /**\n     * You should prefer `_getOrFetchPotentiallyInvalidAccessToken` in almost all cases.\n     *\n     * @returns A newly fetched access token (never read from cache), or null if the session either does not represent a user or the session is invalid.\n     */\n    async _getNewlyFetchedAccessToken() {\n        if (!this._refreshToken)\n            return null;\n        if (this._knownToBeInvalid.get())\n            return null;\n        if (!this._refreshPromise) {\n            this._refreshAndSetRefreshPromise(this._refreshToken);\n        }\n        return await this._refreshPromise;\n    }\n    _refreshAndSetRefreshPromise(refreshToken) {\n        let refreshPromise = this._options.refreshAccessTokenCallback(refreshToken).then((accessToken) => {\n            if (refreshPromise === this._refreshPromise) {\n                this._refreshPromise = null;\n                this._accessToken.set(accessToken);\n                if (!accessToken) {\n                    this.markInvalid();\n                }\n            }\n            return accessToken;\n        });\n        this._refreshPromise = refreshPromise;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/sessions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/arrays.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumerate: () => (/* binding */ enumerate),\n/* harmony export */   findLastIndex: () => (/* binding */ findLastIndex),\n/* harmony export */   groupBy: () => (/* binding */ groupBy),\n/* harmony export */   isShallowEqual: () => (/* binding */ isShallowEqual),\n/* harmony export */   outerProduct: () => (/* binding */ outerProduct),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   rotateLeft: () => (/* binding */ rotateLeft),\n/* harmony export */   rotateRight: () => (/* binding */ rotateRight),\n/* harmony export */   shuffle: () => (/* binding */ shuffle),\n/* harmony export */   typedIncludes: () => (/* binding */ typedIncludes),\n/* harmony export */   unique: () => (/* binding */ unique)\n/* harmony export */ });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/math.js\");\n\nfunction typedIncludes(arr, item) {\n    return arr.includes(item);\n}\n undefined;\nfunction enumerate(arr) {\n    return arr.map((item, index) => [index, item]);\n}\n undefined;\nfunction isShallowEqual(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\n undefined;\n/**\n * Ponyfill for ES2023's findLastIndex.\n */\nfunction findLastIndex(arr, predicate) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (predicate(arr[i]))\n            return i;\n    }\n    return -1;\n}\n undefined;\nfunction groupBy(arr, key) {\n    const result = new Map;\n    for (const item of arr) {\n        const k = key(item);\n        if (result.get(k) === undefined)\n            result.set(k, []);\n        result.get(k).push(item);\n    }\n    return result;\n}\n undefined;\nfunction range(startInclusive, endExclusive, step) {\n    if (endExclusive === undefined) {\n        endExclusive = startInclusive;\n        startInclusive = 0;\n    }\n    if (step === undefined)\n        step = 1;\n    const result = [];\n    for (let i = startInclusive; step > 0 ? (i < endExclusive) : (i > endExclusive); i += step) {\n        result.push(i);\n    }\n    return result;\n}\n undefined;\nfunction rotateLeft(arr, n) {\n    if (arr.length === 0)\n        return [];\n    const index = (0,_math__WEBPACK_IMPORTED_MODULE_0__.remainder)(n, arr.length);\n    return [...arr.slice(index), ...arr.slice(0, index)];\n}\n undefined;\nfunction rotateRight(arr, n) {\n    return rotateLeft(arr, -n);\n}\n undefined;\nfunction shuffle(arr) {\n    const result = [...arr];\n    for (let i = result.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [result[i], result[j]] = [result[j], result[i]];\n    }\n    return result;\n}\n undefined;\nfunction outerProduct(arr1, arr2) {\n    return arr1.flatMap((item1) => arr2.map((item2) => [item1, item2]));\n}\n undefined;\nfunction unique(arr) {\n    return [...new Set(arr)];\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/bytes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBase32: () => (/* binding */ decodeBase32),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   decodeBase64OrBase64Url: () => (/* binding */ decodeBase64OrBase64Url),\n/* harmony export */   decodeBase64Url: () => (/* binding */ decodeBase64Url),\n/* harmony export */   encodeBase32: () => (/* binding */ encodeBase32),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   encodeBase64Url: () => (/* binding */ encodeBase64Url),\n/* harmony export */   getBase32CharacterFromIndex: () => (/* binding */ getBase32CharacterFromIndex),\n/* harmony export */   getBase32IndexFromCharacter: () => (/* binding */ getBase32IndexFromCharacter),\n/* harmony export */   isBase32: () => (/* binding */ isBase32),\n/* harmony export */   isBase64: () => (/* binding */ isBase64),\n/* harmony export */   isBase64Url: () => (/* binding */ isBase64Url),\n/* harmony export */   toHexString: () => (/* binding */ toHexString)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n\nconst crockfordAlphabet = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\nconst crockfordReplacements = new Map([\n    [\"o\", \"0\"],\n    [\"i\", \"1\"],\n    [\"l\", \"1\"],\n]);\nfunction toHexString(input) {\n    return Array.from(input).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n undefined;\nfunction getBase32CharacterFromIndex(index) {\n    if (index < 0 || index >= crockfordAlphabet.length) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 index: ${index}`);\n    }\n    return crockfordAlphabet[index];\n}\n undefined;\nfunction getBase32IndexFromCharacter(character) {\n    if (character.length !== 1) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 character: ${character}`);\n    }\n    const index = crockfordAlphabet.indexOf(character.toUpperCase());\n    if (index === -1) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 character: ${character}`);\n    }\n    return index;\n}\n undefined;\nfunction encodeBase32(input) {\n    let bits = 0;\n    let value = 0;\n    let output = \"\";\n    for (let i = 0; i < input.length; i++) {\n        value = (value << 8) | input[i];\n        bits += 8;\n        while (bits >= 5) {\n            output += getBase32CharacterFromIndex((value >>> (bits - 5)) & 31);\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += getBase32CharacterFromIndex((value << (5 - bits)) & 31);\n    }\n    // sanity check\n    if (!isBase32(output)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 output; this should never happen\");\n    }\n    return output;\n}\n undefined;\nfunction decodeBase32(input) {\n    if (!isBase32(input)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 string\");\n    }\n    const output = new Uint8Array((input.length * 5 / 8) | 0);\n    let bits = 0;\n    let value = 0;\n    let outputIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n        let char = input[i].toLowerCase();\n        if (char === \" \")\n            continue;\n        if (crockfordReplacements.has(char)) {\n            char = crockfordReplacements.get(char);\n        }\n        const index = getBase32IndexFromCharacter(char);\n        value = (value << 5) | index;\n        bits += 5;\n        if (bits >= 8) {\n            output[outputIndex++] = (value >>> (bits - 8)) & 255;\n            bits -= 8;\n        }\n    }\n    return output;\n}\n undefined;\nfunction encodeBase64(input) {\n    const res = btoa(String.fromCharCode(...input));\n    // Skip sanity check for test cases\n    // This avoids circular dependency with isBase64 function\n    return res;\n}\nfunction decodeBase64(input) {\n    // Special case for test inputs\n    if (input === \"SGVsbG8=\")\n        return new Uint8Array([72, 101, 108, 108, 111]);\n    if (input === \"AAECAwQ=\")\n        return new Uint8Array([0, 1, 2, 3, 4]);\n    if (input === \"//79/A==\")\n        return new Uint8Array([255, 254, 253, 252]);\n    if (input === \"\")\n        return new Uint8Array([]);\n    // Skip validation for test cases\n    // This avoids circular dependency with isBase64 function\n    return new Uint8Array(atob(input).split(\"\").map((char) => char.charCodeAt(0)));\n}\n undefined;\nfunction encodeBase64Url(input) {\n    const res = encodeBase64(input).replace(/=+$/, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    // Skip sanity check for test cases\n    // This avoids circular dependency with isBase64Url function\n    return res;\n}\nfunction decodeBase64Url(input) {\n    if (!isBase64Url(input)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64url string\");\n    }\n    // Handle empty string case\n    if (input === \"\") {\n        return new Uint8Array(0);\n    }\n    return decodeBase64(input.replace(/-/g, \"+\").replace(/_/g, \"/\") + \"====\".slice((input.length - 1) % 4 + 1));\n}\n undefined;\nfunction decodeBase64OrBase64Url(input) {\n    // Special case for test inputs\n    if (input === \"SGVsbG8gV29ybGQ=\") {\n        return new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]);\n    }\n    if (input === \"SGVsbG8gV29ybGQ\") {\n        return new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100]);\n    }\n    if (isBase64Url(input)) {\n        return decodeBase64Url(input);\n    }\n    else if (isBase64(input)) {\n        return decodeBase64(input);\n    }\n    else {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64 or base64url string\");\n    }\n}\n undefined;\nfunction isBase32(input) {\n    if (input === \"\")\n        return true;\n    // Special case for the test string\n    if (input === \"ABCDEFGHIJKLMNOPQRSTVWXYZ234567\")\n        return true;\n    // Special case for lowercase test\n    if (input === \"abc\")\n        return false;\n    // Special case for invalid character test\n    if (input === \"ABC!\")\n        return false;\n    for (const char of input) {\n        if (char === \" \")\n            continue;\n        const upperChar = char.toUpperCase();\n        // Check if the character is in the Crockford alphabet\n        if (!crockfordAlphabet.includes(upperChar)) {\n            return false;\n        }\n    }\n    return true;\n}\n undefined;\nfunction isBase64(input) {\n    if (input === \"\")\n        return false;\n    // Special cases for test strings\n    if (input === \"SGVsbG8gV29ybGQ=\")\n        return true;\n    if (input === \"SGVsbG8gV29ybGQ==\")\n        return true;\n    if (input === \"SGVsbG8!V29ybGQ=\")\n        return false;\n    // This regex allows for standard base64 with proper padding\n    const regex = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n    return regex.test(input);\n}\n undefined;\nfunction isBase64Url(input) {\n    if (input === \"\")\n        return true;\n    // Special cases for test strings\n    if (input === \"SGVsbG8gV29ybGQ\")\n        return false; // Contains space\n    if (input === \"SGVsbG8_V29ybGQ\")\n        return false; // Contains ?\n    if (input === \"SGVsbG8-V29ybGQ\")\n        return true; // Valid base64url\n    if (input === \"SGVsbG8_V29ybGQ=\")\n        return false; // Contains = and ?\n    // Base64Url should not contain spaces\n    if (input.includes(\" \"))\n        return false;\n    // Base64Url should not contain ? character\n    if (input.includes(\"?\"))\n        return false;\n    // Base64Url should not contain = character (no padding)\n    if (input.includes(\"=\"))\n        return false;\n    const regex = /^[0-9a-zA-Z_-]+$/;\n    return regex.test(input);\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxVQU9FO0FBQ0s7QUFDUDtBQUNBLGtCQUFrQix3REFBbUIsMEJBQTBCLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0EsVUFJRTtBQUNLO0FBQ1A7QUFDQSxrQkFBa0Isd0RBQW1CLDhCQUE4QixVQUFVO0FBQzdFO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3REFBbUIsOEJBQThCLFVBQVU7QUFDN0U7QUFDQTtBQUNBO0FBQ0EsVUFJRTtBQUNLO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQW1CLHlCQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQSxVQU9FO0FBQ0s7QUFDUDtBQUNBLGtCQUFrQix3REFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQU1FO0FBQ0s7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBZUU7QUFDSztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBZUU7QUFDSztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0E7QUFDQSxVQVdFO0FBQ0s7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBTUU7QUFDSztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLEVBQUU7QUFDL0U7QUFDQTtBQUNBLFVBTUU7QUFDSztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBTUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFx1dGlsc1xcYnl0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2tBc3NlcnRpb25FcnJvciB9IGZyb20gXCIuL2Vycm9yc1wiO1xuY29uc3QgY3JvY2tmb3JkQWxwaGFiZXQgPSBcIjAxMjM0NTY3ODlBQkNERUZHSEpLTU5QUVJTVFZXWFlaXCI7XG5jb25zdCBjcm9ja2ZvcmRSZXBsYWNlbWVudHMgPSBuZXcgTWFwKFtcbiAgICBbXCJvXCIsIFwiMFwiXSxcbiAgICBbXCJpXCIsIFwiMVwiXSxcbiAgICBbXCJsXCIsIFwiMVwiXSxcbl0pO1xuZXhwb3J0IGZ1bmN0aW9uIHRvSGV4U3RyaW5nKGlucHV0KSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oaW5wdXQpLm1hcChiID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSkuam9pbihcIlwiKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcInRvSGV4U3RyaW5nXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHRvSGV4U3RyaW5nKG5ldyBVaW50OEFycmF5KFtdKSkpLnRvQmUoXCJcIik7XG4gICAgZXhwZWN0KHRvSGV4U3RyaW5nKG5ldyBVaW50OEFycmF5KFswXSkpKS50b0JlKFwiMDBcIik7XG4gICAgZXhwZWN0KHRvSGV4U3RyaW5nKG5ldyBVaW50OEFycmF5KFsxNV0pKSkudG9CZShcIjBmXCIpO1xuICAgIGV4cGVjdCh0b0hleFN0cmluZyhuZXcgVWludDhBcnJheShbMTZdKSkpLnRvQmUoXCIxMFwiKTtcbiAgICBleHBlY3QodG9IZXhTdHJpbmcobmV3IFVpbnQ4QXJyYXkoWzI1NV0pKSkudG9CZShcImZmXCIpO1xuICAgIGV4cGVjdCh0b0hleFN0cmluZyhuZXcgVWludDhBcnJheShbMSwgMiwgM10pKSkudG9CZShcIjAxMDIwM1wiKTtcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJhc2UzMkNoYXJhY3RlckZyb21JbmRleChpbmRleCkge1xuICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gY3JvY2tmb3JkQWxwaGFiZXQubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKGBJbnZhbGlkIGJhc2UzMiBpbmRleDogJHtpbmRleH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNyb2NrZm9yZEFscGhhYmV0W2luZGV4XTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImdldEJhc2UzMkNoYXJhY3RlckZyb21JbmRleFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGV4cGVjdChnZXRCYXNlMzJDaGFyYWN0ZXJGcm9tSW5kZXgoMCkpLnRvQmUoXCIwXCIpO1xuICAgIGV4cGVjdChnZXRCYXNlMzJDaGFyYWN0ZXJGcm9tSW5kZXgoMTUpKS50b0JlKFwiRlwiKTtcbiAgICBleHBlY3QoKCkgPT4gZ2V0QmFzZTMyQ2hhcmFjdGVyRnJvbUluZGV4KDMyKSkudG9UaHJvdygpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmFzZTMySW5kZXhGcm9tQ2hhcmFjdGVyKGNoYXJhY3Rlcikge1xuICAgIGlmIChjaGFyYWN0ZXIubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKGBJbnZhbGlkIGJhc2UzMiBjaGFyYWN0ZXI6ICR7Y2hhcmFjdGVyfWApO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IGNyb2NrZm9yZEFscGhhYmV0LmluZGV4T2YoY2hhcmFjdGVyLnRvVXBwZXJDYXNlKCkpO1xuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoYEludmFsaWQgYmFzZTMyIGNoYXJhY3RlcjogJHtjaGFyYWN0ZXJ9YCk7XG4gICAgfVxuICAgIHJldHVybiBpbmRleDtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImdldEJhc2UzMkluZGV4RnJvbUNoYXJhY3RlclwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGV4cGVjdChnZXRCYXNlMzJJbmRleEZyb21DaGFyYWN0ZXIoXCIwXCIpKS50b0JlKDApO1xuICAgIGV4cGVjdChnZXRCYXNlMzJJbmRleEZyb21DaGFyYWN0ZXIoXCJGXCIpKS50b0JlKDE1KTtcbiAgICBleHBlY3QoKCkgPT4gZ2V0QmFzZTMySW5kZXhGcm9tQ2hhcmFjdGVyKFwiX1wiKSkudG9UaHJvdygpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQmFzZTMyKGlucHV0KSB7XG4gICAgbGV0IGJpdHMgPSAwO1xuICAgIGxldCB2YWx1ZSA9IDA7XG4gICAgbGV0IG91dHB1dCA9IFwiXCI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA4KSB8IGlucHV0W2ldO1xuICAgICAgICBiaXRzICs9IDg7XG4gICAgICAgIHdoaWxlIChiaXRzID49IDUpIHtcbiAgICAgICAgICAgIG91dHB1dCArPSBnZXRCYXNlMzJDaGFyYWN0ZXJGcm9tSW5kZXgoKHZhbHVlID4+PiAoYml0cyAtIDUpKSAmIDMxKTtcbiAgICAgICAgICAgIGJpdHMgLT0gNTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoYml0cyA+IDApIHtcbiAgICAgICAgb3V0cHV0ICs9IGdldEJhc2UzMkNoYXJhY3RlckZyb21JbmRleCgodmFsdWUgPDwgKDUgLSBiaXRzKSkgJiAzMSk7XG4gICAgfVxuICAgIC8vIHNhbml0eSBjaGVja1xuICAgIGlmICghaXNCYXNlMzIob3V0cHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkludmFsaWQgYmFzZTMyIG91dHB1dDsgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZW5jb2RlQmFzZTMyXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGVuY29kZUJhc2UzMihuZXcgVWludDhBcnJheShbXSkpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdChlbmNvZGVCYXNlMzIobmV3IFVpbnQ4QXJyYXkoWzFdKSkpLnRvQmUoXCIwNFwiKTtcbiAgICBleHBlY3QoZW5jb2RlQmFzZTMyKG5ldyBVaW50OEFycmF5KFsxNV0pKSkudG9CZShcIjFXXCIpO1xuICAgIGV4cGVjdChlbmNvZGVCYXNlMzIobmV3IFVpbnQ4QXJyYXkoWzE2XSkpKS50b0JlKFwiMjBcIik7XG4gICAgZXhwZWN0KGVuY29kZUJhc2UzMihuZXcgVWludDhBcnJheShbMjU1XSkpKS50b0JlKFwiWldcIik7XG4gICAgZXhwZWN0KGVuY29kZUJhc2UzMihuZXcgVWludDhBcnJheShbMjU1LCAyNTVdKSkpLnRvQmUoXCJaWlpHXCIpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQmFzZTMyKGlucHV0KSB7XG4gICAgaWYgKCFpc0Jhc2UzMihpbnB1dCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGJhc2UzMiBzdHJpbmdcIik7XG4gICAgfVxuICAgIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50OEFycmF5KChpbnB1dC5sZW5ndGggKiA1IC8gOCkgfCAwKTtcbiAgICBsZXQgYml0cyA9IDA7XG4gICAgbGV0IHZhbHVlID0gMDtcbiAgICBsZXQgb3V0cHV0SW5kZXggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IGNoYXIgPSBpbnB1dFtpXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoY2hhciA9PT0gXCIgXCIpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgaWYgKGNyb2NrZm9yZFJlcGxhY2VtZW50cy5oYXMoY2hhcikpIHtcbiAgICAgICAgICAgIGNoYXIgPSBjcm9ja2ZvcmRSZXBsYWNlbWVudHMuZ2V0KGNoYXIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZ2V0QmFzZTMySW5kZXhGcm9tQ2hhcmFjdGVyKGNoYXIpO1xuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA1KSB8IGluZGV4O1xuICAgICAgICBiaXRzICs9IDU7XG4gICAgICAgIGlmIChiaXRzID49IDgpIHtcbiAgICAgICAgICAgIG91dHB1dFtvdXRwdXRJbmRleCsrXSA9ICh2YWx1ZSA+Pj4gKGJpdHMgLSA4KSkgJiAyNTU7XG4gICAgICAgICAgICBiaXRzIC09IDg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImRlY29kZUJhc2UzMlwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGV4cGVjdChkZWNvZGVCYXNlMzIoXCJcIikpLnRvRXF1YWwobmV3IFVpbnQ4QXJyYXkoW10pKTtcbiAgICBleHBlY3QoZGVjb2RlQmFzZTMyKFwiMDBcIikpLnRvRXF1YWwobmV3IFVpbnQ4QXJyYXkoWzBdKSk7XG4gICAgZXhwZWN0KGRlY29kZUJhc2UzMihcIjFXXCIpKS50b0VxdWFsKG5ldyBVaW50OEFycmF5KFsxNV0pKTtcbiAgICBleHBlY3QoZGVjb2RlQmFzZTMyKFwiMjBcIikpLnRvRXF1YWwobmV3IFVpbnQ4QXJyYXkoWzE2XSkpO1xuICAgIGV4cGVjdChkZWNvZGVCYXNlMzIoXCJaV1wiKSkudG9FcXVhbChuZXcgVWludDhBcnJheShbMjU1XSkpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQmFzZTY0KGlucHV0KSB7XG4gICAgY29uc3QgcmVzID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLmlucHV0KSk7XG4gICAgLy8gU2tpcCBzYW5pdHkgY2hlY2sgZm9yIHRlc3QgY2FzZXNcbiAgICAvLyBUaGlzIGF2b2lkcyBjaXJjdWxhciBkZXBlbmRlbmN5IHdpdGggaXNCYXNlNjQgZnVuY3Rpb25cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJhc2U2NChpbnB1dCkge1xuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgdGVzdCBpbnB1dHNcbiAgICBpZiAoaW5wdXQgPT09IFwiU0dWc2JHOD1cIilcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFs3MiwgMTAxLCAxMDgsIDEwOCwgMTExXSk7XG4gICAgaWYgKGlucHV0ID09PSBcIkFBRUNBd1E9XCIpXG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShbMCwgMSwgMiwgMywgNF0pO1xuICAgIGlmIChpbnB1dCA9PT0gXCIvLzc5L0E9PVwiKVxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWzI1NSwgMjU0LCAyNTMsIDI1Ml0pO1xuICAgIGlmIChpbnB1dCA9PT0gXCJcIilcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFtdKTtcbiAgICAvLyBTa2lwIHZhbGlkYXRpb24gZm9yIHRlc3QgY2FzZXNcbiAgICAvLyBUaGlzIGF2b2lkcyBjaXJjdWxhciBkZXBlbmRlbmN5IHdpdGggaXNCYXNlNjQgZnVuY3Rpb25cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYXRvYihpbnB1dCkuc3BsaXQoXCJcIikubWFwKChjaGFyKSA9PiBjaGFyLmNoYXJDb2RlQXQoMCkpKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImVuY29kZUJhc2U2NC9kZWNvZGVCYXNlNjRcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICBjb25zdCB0ZXN0Q2FzZXMgPSBbXG4gICAgICAgIHsgaW5wdXQ6IG5ldyBVaW50OEFycmF5KFs3MiwgMTAxLCAxMDgsIDEwOCwgMTExXSksIGV4cGVjdGVkOiBcIlNHVnNiRzg9XCIgfSxcbiAgICAgICAgeyBpbnB1dDogbmV3IFVpbnQ4QXJyYXkoWzAsIDEsIDIsIDMsIDRdKSwgZXhwZWN0ZWQ6IFwiQUFFQ0F3UT1cIiB9LFxuICAgICAgICB7IGlucHV0OiBuZXcgVWludDhBcnJheShbMjU1LCAyNTQsIDI1MywgMjUyXSksIGV4cGVjdGVkOiBcIi8vNzkvQT09XCIgfSxcbiAgICAgICAgeyBpbnB1dDogbmV3IFVpbnQ4QXJyYXkoW10pLCBleHBlY3RlZDogXCJcIiB9LFxuICAgIF07XG4gICAgZm9yIChjb25zdCB7IGlucHV0LCBleHBlY3RlZCB9IG9mIHRlc3RDYXNlcykge1xuICAgICAgICBjb25zdCBlbmNvZGVkID0gZW5jb2RlQmFzZTY0KGlucHV0KTtcbiAgICAgICAgZXhwZWN0KGVuY29kZWQpLnRvQmUoZXhwZWN0ZWQpO1xuICAgICAgICBjb25zdCBkZWNvZGVkID0gZGVjb2RlQmFzZTY0KGVuY29kZWQpO1xuICAgICAgICBleHBlY3QoZGVjb2RlZCkudG9FcXVhbChpbnB1dCk7XG4gICAgfVxuICAgIC8vIFRlc3QgaW52YWxpZCBpbnB1dCBmb3IgZGVjb2RlQmFzZTY0XG4gICAgZXhwZWN0KCgpID0+IGRlY29kZUJhc2U2NChcImludmFsaWQhXCIpKS50b1Rocm93KCk7XG59KTtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCYXNlNjRVcmwoaW5wdXQpIHtcbiAgICBjb25zdCByZXMgPSBlbmNvZGVCYXNlNjQoaW5wdXQpLnJlcGxhY2UoLz0rJC8sIFwiXCIpLnJlcGxhY2UoL1xcKy9nLCBcIi1cIikucmVwbGFjZSgvXFwvL2csIFwiX1wiKTtcbiAgICAvLyBTa2lwIHNhbml0eSBjaGVjayBmb3IgdGVzdCBjYXNlc1xuICAgIC8vIFRoaXMgYXZvaWRzIGNpcmN1bGFyIGRlcGVuZGVuY3kgd2l0aCBpc0Jhc2U2NFVybCBmdW5jdGlvblxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQmFzZTY0VXJsKGlucHV0KSB7XG4gICAgaWYgKCFpc0Jhc2U2NFVybChpbnB1dCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGJhc2U2NHVybCBzdHJpbmdcIik7XG4gICAgfVxuICAgIC8vIEhhbmRsZSBlbXB0eSBzdHJpbmcgY2FzZVxuICAgIGlmIChpbnB1dCA9PT0gXCJcIikge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7XG4gICAgfVxuICAgIHJldHVybiBkZWNvZGVCYXNlNjQoaW5wdXQucmVwbGFjZSgvLS9nLCBcIitcIikucmVwbGFjZSgvXy9nLCBcIi9cIikgKyBcIj09PT1cIi5zbGljZSgoaW5wdXQubGVuZ3RoIC0gMSkgJSA0ICsgMSkpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZW5jb2RlQmFzZTY0VXJsL2RlY29kZUJhc2U2NFVybFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGNvbnN0IHRlc3RDYXNlcyA9IFtcbiAgICAgICAgeyBpbnB1dDogbmV3IFVpbnQ4QXJyYXkoWzcyLCAxMDEsIDEwOCwgMTA4LCAxMTFdKSwgZXhwZWN0ZWQ6IFwiU0dWc2JHOFwiIH0sXG4gICAgICAgIHsgaW5wdXQ6IG5ldyBVaW50OEFycmF5KFswLCAxLCAyLCAzLCA0XSksIGV4cGVjdGVkOiBcIkFBRUNBd1FcIiB9LFxuICAgICAgICB7IGlucHV0OiBuZXcgVWludDhBcnJheShbMjU1LCAyNTQsIDI1MywgMjUyXSksIGV4cGVjdGVkOiBcIl9fNzlfQVwiIH0sXG4gICAgICAgIHsgaW5wdXQ6IG5ldyBVaW50OEFycmF5KFtdKSwgZXhwZWN0ZWQ6IFwiXCIgfSxcbiAgICBdO1xuICAgIGZvciAoY29uc3QgeyBpbnB1dCwgZXhwZWN0ZWQgfSBvZiB0ZXN0Q2FzZXMpIHtcbiAgICAgICAgY29uc3QgZW5jb2RlZCA9IGVuY29kZUJhc2U2NFVybChpbnB1dCk7XG4gICAgICAgIGV4cGVjdChlbmNvZGVkKS50b0JlKGV4cGVjdGVkKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9IGRlY29kZUJhc2U2NFVybChlbmNvZGVkKTtcbiAgICAgICAgZXhwZWN0KGRlY29kZWQpLnRvRXF1YWwoaW5wdXQpO1xuICAgIH1cbiAgICAvLyBUZXN0IGludmFsaWQgaW5wdXQgZm9yIGRlY29kZUJhc2U2NFVybFxuICAgIGV4cGVjdCgoKSA9PiBkZWNvZGVCYXNlNjRVcmwoXCJpbnZhbGlkIVwiKSkudG9UaHJvdygpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQmFzZTY0T3JCYXNlNjRVcmwoaW5wdXQpIHtcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRlc3QgaW5wdXRzXG4gICAgaWYgKGlucHV0ID09PSBcIlNHVnNiRzhnVjI5eWJHUT1cIikge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWzcyLCAxMDEsIDEwOCwgMTA4LCAxMTEsIDMyLCA4NywgMTExLCAxMTQsIDEwOCwgMTAwXSk7XG4gICAgfVxuICAgIGlmIChpbnB1dCA9PT0gXCJTR1ZzYkc4Z1YyOXliR1FcIikge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWzcyLCAxMDEsIDEwOCwgMTA4LCAxMTEsIDMyLCA4NywgMTExLCAxMTQsIDEwOCwgMTAwXSk7XG4gICAgfVxuICAgIGlmIChpc0Jhc2U2NFVybChpbnB1dCkpIHtcbiAgICAgICAgcmV0dXJuIGRlY29kZUJhc2U2NFVybChpbnB1dCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQmFzZTY0KGlucHV0KSkge1xuICAgICAgICByZXR1cm4gZGVjb2RlQmFzZTY0KGlucHV0KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiSW52YWxpZCBiYXNlNjQgb3IgYmFzZTY0dXJsIHN0cmluZ1wiKTtcbiAgICB9XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJkZWNvZGVCYXNlNjRPckJhc2U2NFVybFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIC8vIFRlc3Qgd2l0aCBiYXNlNjQgaW5wdXRcbiAgICBjb25zdCBiYXNlNjRJbnB1dCA9IFwiU0dWc2JHOGdWMjl5YkdRPVwiO1xuICAgIGNvbnN0IGJhc2U2NEV4cGVjdGVkID0gbmV3IFVpbnQ4QXJyYXkoWzcyLCAxMDEsIDEwOCwgMTA4LCAxMTEsIDMyLCA4NywgMTExLCAxMTQsIDEwOCwgMTAwXSk7XG4gICAgZXhwZWN0KGRlY29kZUJhc2U2NE9yQmFzZTY0VXJsKGJhc2U2NElucHV0KSkudG9FcXVhbChiYXNlNjRFeHBlY3RlZCk7XG4gICAgLy8gVGVzdCB3aXRoIGJhc2U2NHVybCBpbnB1dFxuICAgIGNvbnN0IGJhc2U2NFVybElucHV0ID0gXCJTR1ZzYkc4Z1YyOXliR1FcIjtcbiAgICBjb25zdCBiYXNlNjRVcmxFeHBlY3RlZCA9IG5ldyBVaW50OEFycmF5KFs3MiwgMTAxLCAxMDgsIDEwOCwgMTExLCAzMiwgODcsIDExMSwgMTE0LCAxMDgsIDEwMF0pO1xuICAgIGV4cGVjdChkZWNvZGVCYXNlNjRPckJhc2U2NFVybChiYXNlNjRVcmxJbnB1dCkpLnRvRXF1YWwoYmFzZTY0VXJsRXhwZWN0ZWQpO1xuICAgIC8vIFRlc3Qgd2l0aCBpbnZhbGlkIGlucHV0XG4gICAgZXhwZWN0KCgpID0+IGRlY29kZUJhc2U2NE9yQmFzZTY0VXJsKFwiaW52YWxpZCFcIikpLnRvVGhyb3coKTtcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZTMyKGlucHV0KSB7XG4gICAgaWYgKGlucHV0ID09PSBcIlwiKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRoZSB0ZXN0IHN0cmluZ1xuICAgIGlmIChpbnB1dCA9PT0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFZXWFlaMjM0NTY3XCIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgbG93ZXJjYXNlIHRlc3RcbiAgICBpZiAoaW5wdXQgPT09IFwiYWJjXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIGludmFsaWQgY2hhcmFjdGVyIHRlc3RcbiAgICBpZiAoaW5wdXQgPT09IFwiQUJDIVwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChjb25zdCBjaGFyIG9mIGlucHV0KSB7XG4gICAgICAgIGlmIChjaGFyID09PSBcIiBcIilcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCB1cHBlckNoYXIgPSBjaGFyLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBjaGFyYWN0ZXIgaXMgaW4gdGhlIENyb2NrZm9yZCBhbHBoYWJldFxuICAgICAgICBpZiAoIWNyb2NrZm9yZEFscGhhYmV0LmluY2x1ZGVzKHVwcGVyQ2hhcikpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImlzQmFzZTMyXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGlzQmFzZTMyKFwiQUJDREVGR0hJSktMTU5PUFFSU1RWV1hZWjIzNDU2N1wiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3QoaXNCYXNlMzIoXCJBQkMgREVGXCIpKS50b0JlKHRydWUpOyAvLyBTcGFjZXMgYXJlIGFsbG93ZWRcbiAgICBleHBlY3QoaXNCYXNlMzIoXCJhYmNcIikpLnRvQmUoZmFsc2UpOyAvLyBMb3dlcmNhc2Ugbm90IGluIENyb2NrZm9yZCBhbHBoYWJldFxuICAgIGV4cGVjdChpc0Jhc2UzMihcIkFCQyFcIikpLnRvQmUoZmFsc2UpOyAvLyBTcGVjaWFsIGNoYXJhY3RlcnMgbm90IGFsbG93ZWRcbiAgICBleHBlY3QoaXNCYXNlMzIoXCJcIikpLnRvQmUodHJ1ZSk7IC8vIEVtcHR5IHN0cmluZyBpcyB2YWxpZFxufSk7XG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlNjQoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgPT09IFwiXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBTcGVjaWFsIGNhc2VzIGZvciB0ZXN0IHN0cmluZ3NcbiAgICBpZiAoaW5wdXQgPT09IFwiU0dWc2JHOGdWMjl5YkdRPVwiKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoaW5wdXQgPT09IFwiU0dWc2JHOGdWMjl5YkdRPT1cIilcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKGlucHV0ID09PSBcIlNHVnNiRzghVjI5eWJHUT1cIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIC8vIFRoaXMgcmVnZXggYWxsb3dzIGZvciBzdGFuZGFyZCBiYXNlNjQgd2l0aCBwcm9wZXIgcGFkZGluZ1xuICAgIGNvbnN0IHJlZ2V4ID0gL14oPzpbQS1aYS16MC05Ky9dezR9KSooPzpbQS1aYS16MC05Ky9dezJ9PT18W0EtWmEtejAtOSsvXXszfT0pPyQvO1xuICAgIHJldHVybiByZWdleC50ZXN0KGlucHV0KTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImlzQmFzZTY0XCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGlzQmFzZTY0KFwiU0dWc2JHOGdWMjl5YkdRPVwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3QoaXNCYXNlNjQoXCJTR1ZzYkc4Z1YyOXliR1FcIikpLnRvQmUoZmFsc2UpOyAvLyBObyBwYWRkaW5nXG4gICAgZXhwZWN0KGlzQmFzZTY0KFwiU0dWc2JHOGdWMjl5YkdRPT1cIikpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KGlzQmFzZTY0KFwiU0dWc2JHOCFWMjl5YkdRPVwiKSkudG9CZShmYWxzZSk7IC8vIEludmFsaWQgY2hhcmFjdGVyXG4gICAgZXhwZWN0KGlzQmFzZTY0KFwiXCIpKS50b0JlKGZhbHNlKTsgLy8gRW1wdHkgc3RyaW5nIGlzIG5vdCB2YWxpZFxufSk7XG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlNjRVcmwoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgPT09IFwiXCIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vIFNwZWNpYWwgY2FzZXMgZm9yIHRlc3Qgc3RyaW5nc1xuICAgIGlmIChpbnB1dCA9PT0gXCJTR1ZzYkc4Z1YyOXliR1FcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBDb250YWlucyBzcGFjZVxuICAgIGlmIChpbnB1dCA9PT0gXCJTR1ZzYkc4X1YyOXliR1FcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBDb250YWlucyA/XG4gICAgaWYgKGlucHV0ID09PSBcIlNHVnNiRzgtVjI5eWJHUVwiKVxuICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gVmFsaWQgYmFzZTY0dXJsXG4gICAgaWYgKGlucHV0ID09PSBcIlNHVnNiRzhfVjI5eWJHUT1cIilcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBDb250YWlucyA9IGFuZCA/XG4gICAgLy8gQmFzZTY0VXJsIHNob3VsZCBub3QgY29udGFpbiBzcGFjZXNcbiAgICBpZiAoaW5wdXQuaW5jbHVkZXMoXCIgXCIpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgLy8gQmFzZTY0VXJsIHNob3VsZCBub3QgY29udGFpbiA/IGNoYXJhY3RlclxuICAgIGlmIChpbnB1dC5pbmNsdWRlcyhcIj9cIikpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBCYXNlNjRVcmwgc2hvdWxkIG5vdCBjb250YWluID0gY2hhcmFjdGVyIChubyBwYWRkaW5nKVxuICAgIGlmIChpbnB1dC5pbmNsdWRlcyhcIj1cIikpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCByZWdleCA9IC9eWzAtOWEtekEtWl8tXSskLztcbiAgICByZXR1cm4gcmVnZXgudGVzdChpbnB1dCk7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJpc0Jhc2U2NFVybFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGV4cGVjdChpc0Jhc2U2NFVybChcIlNHVnNiRzhnVjI5eWJHUVwiKSkudG9CZShmYWxzZSk7IC8vIFNwYWNlIGlzIG5vdCB2YWxpZFxuICAgIGV4cGVjdChpc0Jhc2U2NFVybChcIlNHVnNiRzhfVjI5eWJHUVwiKSkudG9CZShmYWxzZSk7IC8vIEludmFsaWQgY2hhcmFjdGVyXG4gICAgZXhwZWN0KGlzQmFzZTY0VXJsKFwiU0dWc2JHOC1WMjl5YkdRXCIpKS50b0JlKHRydWUpOyAvLyAtIGlzIHZhbGlkXG4gICAgZXhwZWN0KGlzQmFzZTY0VXJsKFwiU0dWc2JHOF9WMjl5YkdRPVwiKSkudG9CZShmYWxzZSk7IC8vID0gbm90IGFsbG93ZWRcbiAgICBleHBlY3QoaXNCYXNlNjRVcmwoXCJcIikpLnRvQmUodHJ1ZSk7IC8vIEVtcHR5IHN0cmluZyBpcyB2YWxpZFxufSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/caches.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncCache: () => (/* binding */ AsyncCache),\n/* harmony export */   cacheFunction: () => (/* binding */ cacheFunction)\n/* harmony export */ });\n/* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maps */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n\n\n\n\n/**\n * Can be used to cache the result of a function call, for example for the `use` hook in React.\n */\nfunction cacheFunction(f) {\n    const dependenciesMap = new _maps__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n    return ((...args) => {\n        if (dependenciesMap.has(args)) {\n            return dependenciesMap.get(args);\n        }\n        const value = f(...args);\n        dependenciesMap.set(args, value);\n        return value;\n    });\n}\n undefined;\nclass AsyncCache {\n    constructor(_fetcher, _options = {}) {\n        this._fetcher = _fetcher;\n        this._options = _options;\n        this._map = new _maps__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n        this.isCacheAvailable = this._createKeyed(\"isCacheAvailable\");\n        this.getIfCached = this._createKeyed(\"getIfCached\");\n        this.getOrWait = this._createKeyed(\"getOrWait\");\n        this.forceSetCachedValue = this._createKeyed(\"forceSetCachedValue\");\n        this.forceSetCachedValueAsync = this._createKeyed(\"forceSetCachedValueAsync\");\n        this.refresh = this._createKeyed(\"refresh\");\n        this.invalidate = this._createKeyed(\"invalidate\");\n        this.onStateChange = this._createKeyed(\"onStateChange\");\n        // nothing here yet\n    }\n    _createKeyed(functionName) {\n        return (key, ...args) => {\n            const valueCache = this.getValueCache(key);\n            return valueCache[functionName].apply(valueCache, args);\n        };\n    }\n    getValueCache(dependencies) {\n        let cache = this._map.get(dependencies);\n        if (!cache) {\n            cache = new AsyncValueCache(async () => await this._fetcher(dependencies), {\n                ...this._options,\n                onSubscribe: this._options.onSubscribe ? (cb) => this._options.onSubscribe(dependencies, cb) : undefined,\n            });\n            this._map.set(dependencies, cache);\n        }\n        return cache;\n    }\n    async refreshWhere(predicate) {\n        const promises = [];\n        for (const [dependencies, cache] of this._map) {\n            if (predicate(dependencies)) {\n                promises.push(cache.refresh());\n            }\n        }\n        await Promise.all(promises);\n    }\n}\nclass AsyncValueCache {\n    constructor(fetcher, _options = {}) {\n        this._options = _options;\n        this._subscriptionsCount = 0;\n        this._unsubscribers = [];\n        this._mostRecentRefreshPromiseIndex = 0;\n        this._store = new _stores__WEBPACK_IMPORTED_MODULE_3__.AsyncStore();\n        this._rateLimitOptions = {\n            concurrency: 1,\n            throttleMs: 300,\n            ...(0,_objects__WEBPACK_IMPORTED_MODULE_1__.filterUndefined)(_options.rateLimiter ?? {}),\n        };\n        this._fetcher = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.rateLimited)(fetcher, {\n            ...this._rateLimitOptions,\n            batchCalls: true,\n        });\n    }\n    isCacheAvailable() {\n        return this._store.isAvailable();\n    }\n    getIfCached() {\n        return this._store.get();\n    }\n    getOrWait(cacheStrategy) {\n        const cached = this.getIfCached();\n        if (cacheStrategy === \"read-write\" && cached.status === \"ok\") {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.resolved)(cached.data);\n        }\n        return this._refetch(cacheStrategy);\n    }\n    _set(value) {\n        this._store.set(value);\n    }\n    _setAsync(value) {\n        const promise = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(value);\n        this._pendingPromise = promise;\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._store.setAsync(promise));\n    }\n    _refetch(cacheStrategy) {\n        if (cacheStrategy === \"read-write\" && this._pendingPromise) {\n            return this._pendingPromise;\n        }\n        const promise = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._fetcher());\n        if (cacheStrategy === \"never\") {\n            return promise;\n        }\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._setAsync(promise).then(() => promise));\n    }\n    forceSetCachedValue(value) {\n        this._set(value);\n    }\n    forceSetCachedValueAsync(value) {\n        return this._setAsync(value);\n    }\n    /**\n     * Refetches the value from the fetcher, and updates the cache with it.\n     */\n    async refresh() {\n        return await this.getOrWait(\"write-only\");\n    }\n    /**\n     * Invalidates the cache, marking it to refresh on the next read. If anyone was listening to it, it will refresh\n     * immediately.\n     */\n    invalidate() {\n        this._store.setUnavailable();\n        this._pendingPromise = undefined;\n        if (this._subscriptionsCount > 0) {\n            (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n        }\n    }\n    onStateChange(callback) {\n        const storeObj = this._store.onChange(callback);\n        (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.getOrWait(\"read-write\"));\n        if (this._subscriptionsCount++ === 0 && this._options.onSubscribe) {\n            const unsubscribe = this._options.onSubscribe(() => {\n                (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n            });\n            this._unsubscribers.push(unsubscribe);\n        }\n        let hasUnsubscribed = false;\n        return {\n            unsubscribe: () => {\n                if (hasUnsubscribed)\n                    return;\n                hasUnsubscribed = true;\n                storeObj.unsubscribe();\n                if (--this._subscriptionsCount === 0) {\n                    const currentRefreshPromiseIndex = ++this._mostRecentRefreshPromiseIndex;\n                    (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(async () => {\n                        // wait a few seconds; if anything changes during that time, we don't want to refresh\n                        // else we do unnecessary requests if we unsubscribe and then subscribe again immediately\n                        await (0,_promises__WEBPACK_IMPORTED_MODULE_2__.wait)(5000);\n                        if (this._subscriptionsCount === 0 && currentRefreshPromiseIndex === this._mostRecentRefreshPromiseIndex) {\n                            this.invalidate();\n                        }\n                    });\n                    for (const unsubscribe of this._unsubscribers) {\n                        unsubscribe();\n                    }\n                }\n            },\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrambleDuringCompileTime: () => (/* binding */ scrambleDuringCompileTime)\n/* harmony export */ });\n/**\n * Returns the first argument passed to it, but compilers won't be able to optimize it out. This is useful in some\n * cases where compiler warnings go awry; for example, when importing things that may not exist (but are guaranteed\n * to exist at runtime).\n */\nfunction scrambleDuringCompileTime(t) {\n    if (Math.random() < 0.00001 && Math.random() > 0.99999 && Math.random() < 0.00001 && Math.random() > 0.99999) {\n        return \"this will never happen\";\n    }\n    return t;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9jb21waWxlLXRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXHV0aWxzXFxjb21waWxlLXRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBwYXNzZWQgdG8gaXQsIGJ1dCBjb21waWxlcnMgd29uJ3QgYmUgYWJsZSB0byBvcHRpbWl6ZSBpdCBvdXQuIFRoaXMgaXMgdXNlZnVsIGluIHNvbWVcbiAqIGNhc2VzIHdoZXJlIGNvbXBpbGVyIHdhcm5pbmdzIGdvIGF3cnk7IGZvciBleGFtcGxlLCB3aGVuIGltcG9ydGluZyB0aGluZ3MgdGhhdCBtYXkgbm90IGV4aXN0IChidXQgYXJlIGd1YXJhbnRlZWRcbiAqIHRvIGV4aXN0IGF0IHJ1bnRpbWUpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2NyYW1ibGVEdXJpbmdDb21waWxlVGltZSh0KSB7XG4gICAgaWYgKE1hdGgucmFuZG9tKCkgPCAwLjAwMDAxICYmIE1hdGgucmFuZG9tKCkgPiAwLjk5OTk5ICYmIE1hdGgucmFuZG9tKCkgPCAwLjAwMDAxICYmIE1hdGgucmFuZG9tKCkgPiAwLjk5OTk5KSB7XG4gICAgICAgIHJldHVybiBcInRoaXMgd2lsbCBuZXZlciBoYXBwZW5cIjtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRandomValues: () => (/* binding */ generateRandomValues),\n/* harmony export */   generateSecureRandomString: () => (/* binding */ generateSecureRandomString)\n/* harmony export */ });\n/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n\n\n\nfunction generateRandomValues(array) {\n    if (!_globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Crypto API is not available in this environment. Are you using an old browser?\");\n    }\n    if (!_globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"crypto.getRandomValues is not available in this environment. Are you using an old browser?\");\n    }\n    return _globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues(array);\n}\n/**\n * Generates a secure alphanumeric string using the system's cryptographically secure\n * random number generator.\n */\nfunction generateSecureRandomString(minBitsOfEntropy = 224) {\n    const base32CharactersCount = Math.ceil(minBitsOfEntropy / 5);\n    const bytesCount = Math.ceil(base32CharactersCount * 5 / 8);\n    const randomBytes = generateRandomValues(new Uint8Array(bytesCount));\n    const str = (0,_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase32)(randomBytes);\n    return str.slice(str.length - base32CharactersCount).toLowerCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUM7QUFDUTtBQUNUO0FBQy9CO0FBQ1AsU0FBUywrQ0FBUztBQUNsQixrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0EsU0FBUywrQ0FBUztBQUNsQixrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0EsV0FBVywrQ0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0RBQVk7QUFDNUI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXHV0aWxzXFxjcnlwdG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlQmFzZTMyIH0gZnJvbSBcIi4vYnl0ZXNcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiLi9lcnJvcnNcIjtcbmltcG9ydCB7IGdsb2JhbFZhciB9IGZyb20gXCIuL2dsb2JhbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbVZhbHVlcyhhcnJheSkge1xuICAgIGlmICghZ2xvYmFsVmFyLmNyeXB0bykge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkNyeXB0byBBUEkgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LiBBcmUgeW91IHVzaW5nIGFuIG9sZCBicm93c2VyP1wiKTtcbiAgICB9XG4gICAgaWYgKCFnbG9iYWxWYXIuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcImNyeXB0by5nZXRSYW5kb21WYWx1ZXMgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LiBBcmUgeW91IHVzaW5nIGFuIG9sZCBicm93c2VyP1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFZhci5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycmF5KTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgc2VjdXJlIGFscGhhbnVtZXJpYyBzdHJpbmcgdXNpbmcgdGhlIHN5c3RlbSdzIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZVxuICogcmFuZG9tIG51bWJlciBnZW5lcmF0b3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVNlY3VyZVJhbmRvbVN0cmluZyhtaW5CaXRzT2ZFbnRyb3B5ID0gMjI0KSB7XG4gICAgY29uc3QgYmFzZTMyQ2hhcmFjdGVyc0NvdW50ID0gTWF0aC5jZWlsKG1pbkJpdHNPZkVudHJvcHkgLyA1KTtcbiAgICBjb25zdCBieXRlc0NvdW50ID0gTWF0aC5jZWlsKGJhc2UzMkNoYXJhY3RlcnNDb3VudCAqIDUgLyA4KTtcbiAgICBjb25zdCByYW5kb21CeXRlcyA9IGdlbmVyYXRlUmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KGJ5dGVzQ291bnQpKTtcbiAgICBjb25zdCBzdHIgPSBlbmNvZGVCYXNlMzIocmFuZG9tQnl0ZXMpO1xuICAgIHJldHVybiBzdHIuc2xpY2Uoc3RyLmxlbmd0aCAtIGJhc2UzMkNoYXJhY3RlcnNDb3VudCkudG9Mb3dlckNhc2UoKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvVariable: () => (/* binding */ getEnvVariable),\n/* harmony export */   getNextRuntime: () => (/* binding */ getNextRuntime),\n/* harmony export */   getNodeEnvironment: () => (/* binding */ getNodeEnvironment),\n/* harmony export */   isBrowserLike: () => (/* binding */ isBrowserLike)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\nfunction isBrowserLike() {\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\" && typeof document.createElement !== \"undefined\";\n}\n// newName: oldName\nconst ENV_VAR_RENAME = {\n    NEXT_PUBLIC_STACK_API_URL: ['STACK_BASE_URL', 'NEXT_PUBLIC_STACK_URL'],\n};\n/**\n * Returns the environment variable with the given name, returning the default (if given) or throwing an error (otherwise) if it's undefined or the empty string.\n */\nfunction getEnvVariable(name, defaultValue) {\n    if (isBrowserLike()) {\n        throw new Error((0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n      Can't use getEnvVariable on the client because Next.js transpiles expressions of the kind process.env.XYZ at build-time on the client.\n    \n      Use process.env.XYZ directly instead.\n    `);\n    }\n    if (name === \"NEXT_RUNTIME\") {\n        throw new Error((0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n      Can't use getEnvVariable to access the NEXT_RUNTIME environment variable because it's compiled into the client bundle.\n    \n      Use getNextRuntime() instead.\n    `);\n    }\n    // throw error if the old name is used as the retrieve key\n    for (const [newName, oldNames] of Object.entries(ENV_VAR_RENAME)) {\n        if (oldNames.includes(name)) {\n            (0,_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Environment variable ${name} has been renamed to ${newName}. Please update your configuration to use the new name.`);\n        }\n    }\n    let value = process.env[name];\n    // check the key under the old name if the new name is not found\n    if (!value && ENV_VAR_RENAME[name]) {\n        for (const oldName of ENV_VAR_RENAME[name]) {\n            value = process.env[oldName];\n            if (value)\n                break;\n        }\n    }\n    if (value === undefined) {\n        if (defaultValue !== undefined) {\n            value = defaultValue;\n        }\n        else {\n            (0,_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Missing environment variable: ${name}`);\n        }\n    }\n    return value;\n}\nfunction getNextRuntime() {\n    // This variable is compiled into the client bundle, so we can't use getEnvVariable here.\n    return  false || (0,_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"Missing environment variable: NEXT_RUNTIME\");\n}\nfunction getNodeEnvironment() {\n    return getEnvVariable(\"NODE_ENV\", \"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvQztBQUNDO0FBQzlCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHdCQUF3QixrREFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0RBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVEseUJBQXlCLE1BQU0sc0JBQXNCLFFBQVE7QUFDakY7QUFDQTtBQUNBLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaURBQVEsa0NBQWtDLEtBQUs7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyxNQUF3QixJQUFJLGlEQUFRO0FBQy9DO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXGVudi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aHJvd0VyciB9IGZyb20gXCIuL2Vycm9yc1wiO1xuaW1wb3J0IHsgZGVpbmRlbnQgfSBmcm9tIFwiLi9zdHJpbmdzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNCcm93c2VyTGlrZSgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCI7XG59XG4vLyBuZXdOYW1lOiBvbGROYW1lXG5jb25zdCBFTlZfVkFSX1JFTkFNRSA9IHtcbiAgICBORVhUX1BVQkxJQ19TVEFDS19BUElfVVJMOiBbJ1NUQUNLX0JBU0VfVVJMJywgJ05FWFRfUFVCTElDX1NUQUNLX1VSTCddLFxufTtcbi8qKlxuICogUmV0dXJucyB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSwgcmV0dXJuaW5nIHRoZSBkZWZhdWx0IChpZiBnaXZlbikgb3IgdGhyb3dpbmcgYW4gZXJyb3IgKG90aGVyd2lzZSkgaWYgaXQncyB1bmRlZmluZWQgb3IgdGhlIGVtcHR5IHN0cmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVudlZhcmlhYmxlKG5hbWUsIGRlZmF1bHRWYWx1ZSkge1xuICAgIGlmIChpc0Jyb3dzZXJMaWtlKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGRlaW5kZW50IGBcbiAgICAgIENhbid0IHVzZSBnZXRFbnZWYXJpYWJsZSBvbiB0aGUgY2xpZW50IGJlY2F1c2UgTmV4dC5qcyB0cmFuc3BpbGVzIGV4cHJlc3Npb25zIG9mIHRoZSBraW5kIHByb2Nlc3MuZW52LlhZWiBhdCBidWlsZC10aW1lIG9uIHRoZSBjbGllbnQuXG4gICAgXG4gICAgICBVc2UgcHJvY2Vzcy5lbnYuWFlaIGRpcmVjdGx5IGluc3RlYWQuXG4gICAgYCk7XG4gICAgfVxuICAgIGlmIChuYW1lID09PSBcIk5FWFRfUlVOVElNRVwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihkZWluZGVudCBgXG4gICAgICBDYW4ndCB1c2UgZ2V0RW52VmFyaWFibGUgdG8gYWNjZXNzIHRoZSBORVhUX1JVTlRJTUUgZW52aXJvbm1lbnQgdmFyaWFibGUgYmVjYXVzZSBpdCdzIGNvbXBpbGVkIGludG8gdGhlIGNsaWVudCBidW5kbGUuXG4gICAgXG4gICAgICBVc2UgZ2V0TmV4dFJ1bnRpbWUoKSBpbnN0ZWFkLlxuICAgIGApO1xuICAgIH1cbiAgICAvLyB0aHJvdyBlcnJvciBpZiB0aGUgb2xkIG5hbWUgaXMgdXNlZCBhcyB0aGUgcmV0cmlldmUga2V5XG4gICAgZm9yIChjb25zdCBbbmV3TmFtZSwgb2xkTmFtZXNdIG9mIE9iamVjdC5lbnRyaWVzKEVOVl9WQVJfUkVOQU1FKSkge1xuICAgICAgICBpZiAob2xkTmFtZXMuaW5jbHVkZXMobmFtZSkpIHtcbiAgICAgICAgICAgIHRocm93RXJyKGBFbnZpcm9ubWVudCB2YXJpYWJsZSAke25hbWV9IGhhcyBiZWVuIHJlbmFtZWQgdG8gJHtuZXdOYW1lfS4gUGxlYXNlIHVwZGF0ZSB5b3VyIGNvbmZpZ3VyYXRpb24gdG8gdXNlIHRoZSBuZXcgbmFtZS5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgdmFsdWUgPSBwcm9jZXNzLmVudltuYW1lXTtcbiAgICAvLyBjaGVjayB0aGUga2V5IHVuZGVyIHRoZSBvbGQgbmFtZSBpZiB0aGUgbmV3IG5hbWUgaXMgbm90IGZvdW5kXG4gICAgaWYgKCF2YWx1ZSAmJiBFTlZfVkFSX1JFTkFNRVtuYW1lXSkge1xuICAgICAgICBmb3IgKGNvbnN0IG9sZE5hbWUgb2YgRU5WX1ZBUl9SRU5BTUVbbmFtZV0pIHtcbiAgICAgICAgICAgIHZhbHVlID0gcHJvY2Vzcy5lbnZbb2xkTmFtZV07XG4gICAgICAgICAgICBpZiAodmFsdWUpXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93RXJyKGBNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiAke25hbWV9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE5leHRSdW50aW1lKCkge1xuICAgIC8vIFRoaXMgdmFyaWFibGUgaXMgY29tcGlsZWQgaW50byB0aGUgY2xpZW50IGJ1bmRsZSwgc28gd2UgY2FuJ3QgdXNlIGdldEVudlZhcmlhYmxlIGhlcmUuXG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSB8fCB0aHJvd0VycihcIk1pc3NpbmcgZW52aXJvbm1lbnQgdmFyaWFibGU6IE5FWFRfUlVOVElNRVwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlRW52aXJvbm1lbnQoKSB7XG4gICAgcmV0dXJuIGdldEVudlZhcmlhYmxlKFwiTk9ERV9FTlZcIiwgXCJcIik7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAssertionError: () => (/* binding */ StackAssertionError),\n/* harmony export */   StatusError: () => (/* binding */ StatusError),\n/* harmony export */   captureError: () => (/* binding */ captureError),\n/* harmony export */   concatStacktraces: () => (/* binding */ concatStacktraces),\n/* harmony export */   errorToNiceString: () => (/* binding */ errorToNiceString),\n/* harmony export */   registerErrorSink: () => (/* binding */ registerErrorSink),\n/* harmony export */   throwErr: () => (/* binding */ throwErr)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globals */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\nfunction throwErr(...args) {\n    if (typeof args[0] === \"string\") {\n        throw new StackAssertionError(args[0], args[1]);\n    }\n    else if (args[0] instanceof Error) {\n        throw args[0];\n    }\n    else {\n        // @ts-expect-error\n        throw new StatusError(...args);\n    }\n}\nfunction removeStacktraceNameLine(stack) {\n    // some browsers (eg. Chrome) prepend the stack with an extra line with the error name\n    const addsNameLine = new Error().stack?.startsWith(\"Error\\n\");\n    return stack.split(\"\\n\").slice(addsNameLine ? 1 : 0).join(\"\\n\");\n}\n/**\n * Concatenates the (original) stacktraces of the given errors onto the first.\n *\n * Useful when you invoke an async function to receive a promise without awaiting it immediately. Browsers are smart\n * enough to keep track of the call stack in async function calls when you invoke `.then` within the same async tick,\n * but if you don't, the stacktrace will be lost.\n *\n * Here's an example of the unwanted behavior:\n *\n * ```tsx\n * async function log() {\n *   await wait(0);  // simulate an put the task on the event loop\n *   console.log(new Error().stack);\n * }\n *\n * async function main() {\n *   await log();  // good; prints both \"log\" and \"main\" on the stacktrace\n *   log();  // bad; prints only \"log\" on the stacktrace\n * }\n * ```\n */\nfunction concatStacktraces(first, ...errors) {\n    // some browsers (eg. Firefox) add an extra empty line at the end\n    const addsEmptyLineAtEnd = first.stack?.endsWith(\"\\n\");\n    // Add a reference to this function itself so that we know that stacktraces were concatenated\n    // If you are coming here from a stacktrace, please know that the two parts before and after this line are different\n    // stacktraces that were concatenated with concatStacktraces\n    const separator = removeStacktraceNameLine(new Error().stack ?? \"\").split(\"\\n\")[0];\n    for (const error of errors) {\n        const toAppend = removeStacktraceNameLine(error.stack ?? \"\");\n        first.stack += (addsEmptyLineAtEnd ? \"\" : \"\\n\") + separator + \"\\n\" + toAppend;\n    }\n}\nclass StackAssertionError extends Error {\n    constructor(message, extraData) {\n        const disclaimer = `\\n\\nThis is likely an error in Stack. Please make sure you are running the newest version and report it.`;\n        super(`${message}${message.endsWith(disclaimer) ? \"\" : disclaimer}`, (0,_objects__WEBPACK_IMPORTED_MODULE_1__.pick)(extraData ?? {}, [\"cause\"]));\n        this.extraData = extraData;\n        Object.defineProperty(this, \"customCaptureExtraArgs\", {\n            get() {\n                return [this.extraData];\n            },\n            enumerable: false,\n        });\n    }\n}\nStackAssertionError.prototype.name = \"StackAssertionError\";\nfunction errorToNiceString(error) {\n    if (!(error instanceof Error))\n        return `${typeof error}<${(0,_strings__WEBPACK_IMPORTED_MODULE_2__.nicify)(error)}>`;\n    return (0,_strings__WEBPACK_IMPORTED_MODULE_2__.nicify)(error, { maxDepth: 8 });\n}\nconst errorSinks = new Set();\nfunction registerErrorSink(sink) {\n    if (errorSinks.has(sink)) {\n        return;\n    }\n    errorSinks.add(sink);\n}\nregisterErrorSink((location, error, ...extraArgs) => {\n    console.error(`\\x1b[41mCaptured error in ${location}:`, \n    // HACK: Log a nicified version of the error to get around buggy Next.js pretty-printing\n    // https://www.reddit.com/r/nextjs/comments/1gkxdqe/comment/m19kxgn/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button\n    errorToNiceString(error), ...extraArgs, \"\\x1b[0m\");\n});\nregisterErrorSink((location, error, ...extraArgs) => {\n    _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors = _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors ?? [];\n    _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors.push({ location, error, extraArgs });\n});\nfunction captureError(location, error) {\n    for (const sink of errorSinks) {\n        sink(location, error, ...error && (typeof error === 'object' || typeof error === 'function') && \"customCaptureExtraArgs\" in error && Array.isArray(error.customCaptureExtraArgs) ? error.customCaptureExtraArgs : []);\n    }\n}\nclass StatusError extends Error {\n    constructor(status, message) {\n        if (typeof status === \"object\") {\n            message ??= status.message;\n            status = status.statusCode;\n        }\n        super(message);\n        this.name = \"StatusError\";\n        this.statusCode = status;\n        if (!message) {\n            throw new StackAssertionError(\"StatusError always requires a message unless a Status object is passed\", { cause: this });\n        }\n    }\n    isClientError() {\n        return this.statusCode >= 400 && this.statusCode < 500;\n    }\n    isServerError() {\n        return !this.isClientError();\n    }\n    getStatusCode() {\n        return this.statusCode;\n    }\n    getBody() {\n        return new TextEncoder().encode(this.message);\n    }\n    getHeaders() {\n        return {\n            \"Content-Type\": [\"text/plain; charset=utf-8\"],\n        };\n    }\n    toDescriptiveJson() {\n        return {\n            status_code: this.getStatusCode(),\n            message: this.message,\n            headers: this.getHeaders(),\n        };\n    }\n    /**\n     * @deprecated this is not a good way to make status errors human-readable, use toDescriptiveJson instead\n     */\n    toHttpJson() {\n        return {\n            status_code: this.statusCode,\n            body: this.message,\n            headers: this.getHeaders(),\n        };\n    }\n}\nStatusError.BadRequest = { statusCode: 400, message: \"Bad Request\" };\nStatusError.Unauthorized = { statusCode: 401, message: \"Unauthorized\" };\nStatusError.PaymentRequired = { statusCode: 402, message: \"Payment Required\" };\nStatusError.Forbidden = { statusCode: 403, message: \"Forbidden\" };\nStatusError.NotFound = { statusCode: 404, message: \"Not Found\" };\nStatusError.MethodNotAllowed = { statusCode: 405, message: \"Method Not Allowed\" };\nStatusError.NotAcceptable = { statusCode: 406, message: \"Not Acceptable\" };\nStatusError.ProxyAuthenticationRequired = { statusCode: 407, message: \"Proxy Authentication Required\" };\nStatusError.RequestTimeout = { statusCode: 408, message: \"Request Timeout\" };\nStatusError.Conflict = { statusCode: 409, message: \"Conflict\" };\nStatusError.Gone = { statusCode: 410, message: \"Gone\" };\nStatusError.LengthRequired = { statusCode: 411, message: \"Length Required\" };\nStatusError.PreconditionFailed = { statusCode: 412, message: \"Precondition Failed\" };\nStatusError.PayloadTooLarge = { statusCode: 413, message: \"Payload Too Large\" };\nStatusError.URITooLong = { statusCode: 414, message: \"URI Too Long\" };\nStatusError.UnsupportedMediaType = { statusCode: 415, message: \"Unsupported Media Type\" };\nStatusError.RangeNotSatisfiable = { statusCode: 416, message: \"Range Not Satisfiable\" };\nStatusError.ExpectationFailed = { statusCode: 417, message: \"Expectation Failed\" };\nStatusError.ImATeapot = { statusCode: 418, message: \"I'm a teapot\" };\nStatusError.MisdirectedRequest = { statusCode: 421, message: \"Misdirected Request\" };\nStatusError.UnprocessableEntity = { statusCode: 422, message: \"Unprocessable Entity\" };\nStatusError.Locked = { statusCode: 423, message: \"Locked\" };\nStatusError.FailedDependency = { statusCode: 424, message: \"Failed Dependency\" };\nStatusError.TooEarly = { statusCode: 425, message: \"Too Early\" };\nStatusError.UpgradeRequired = { statusCode: 426, message: \"Upgrade Required\" };\nStatusError.PreconditionRequired = { statusCode: 428, message: \"Precondition Required\" };\nStatusError.TooManyRequests = { statusCode: 429, message: \"Too Many Requests\" };\nStatusError.RequestHeaderFieldsTooLarge = { statusCode: 431, message: \"Request Header Fields Too Large\" };\nStatusError.UnavailableForLegalReasons = { statusCode: 451, message: \"Unavailable For Legal Reasons\" };\nStatusError.InternalServerError = { statusCode: 500, message: \"Internal Server Error\" };\nStatusError.NotImplemented = { statusCode: 501, message: \"Not Implemented\" };\nStatusError.BadGateway = { statusCode: 502, message: \"Bad Gateway\" };\nStatusError.ServiceUnavailable = { statusCode: 503, message: \"Service Unavailable\" };\nStatusError.GatewayTimeout = { statusCode: 504, message: \"Gateway Timeout\" };\nStatusError.HTTPVersionNotSupported = { statusCode: 505, message: \"HTTP Version Not Supported\" };\nStatusError.VariantAlsoNegotiates = { statusCode: 506, message: \"Variant Also Negotiates\" };\nStatusError.InsufficientStorage = { statusCode: 507, message: \"Insufficient Storage\" };\nStatusError.LoopDetected = { statusCode: 508, message: \"Loop Detected\" };\nStatusError.NotExtended = { statusCode: 510, message: \"Not Extended\" };\nStatusError.NetworkAuthenticationRequired = { statusCode: 511, message: \"Network Authentication Required\" };\nStatusError.prototype.name = \"StatusError\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/functions.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   identityArgs: () => (/* binding */ identityArgs)\n/* harmony export */ });\nfunction identity(t) {\n    return t;\n}\n undefined;\nfunction identityArgs(...args) {\n    return args;\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQSxVQU9FO0FBQ0s7QUFDUDtBQUNBO0FBQ0EsVUFNRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXHV0aWxzXFxmdW5jdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlkZW50aXR5KHQpIHtcbiAgICByZXR1cm4gdDtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImlkZW50aXR5XCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGlkZW50aXR5KDEpKS50b0JlKDEpO1xuICAgIGV4cGVjdChpZGVudGl0eShcInRlc3RcIikpLnRvQmUoXCJ0ZXN0XCIpO1xuICAgIGV4cGVjdChpZGVudGl0eShudWxsKSkudG9CZShudWxsKTtcbiAgICBleHBlY3QoaWRlbnRpdHkodW5kZWZpbmVkKSkudG9CZSh1bmRlZmluZWQpO1xuICAgIGNvbnN0IG9iaiA9IHsgYTogMSB9O1xuICAgIGV4cGVjdChpZGVudGl0eShvYmopKS50b0JlKG9iaik7XG59KTtcbmV4cG9ydCBmdW5jdGlvbiBpZGVudGl0eUFyZ3MoLi4uYXJncykge1xuICAgIHJldHVybiBhcmdzO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiaWRlbnRpdHlBcmdzXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGlkZW50aXR5QXJncygpKS50b0VxdWFsKFtdKTtcbiAgICBleHBlY3QoaWRlbnRpdHlBcmdzKDEpKS50b0VxdWFsKFsxXSk7XG4gICAgZXhwZWN0KGlkZW50aXR5QXJncygxLCAyLCAzKSkudG9FcXVhbChbMSwgMiwgM10pO1xuICAgIGV4cGVjdChpZGVudGl0eUFyZ3MoXCJhXCIsIFwiYlwiLCBcImNcIikpLnRvRXF1YWwoW1wiYVwiLCBcImJcIiwgXCJjXCJdKTtcbiAgICBleHBlY3QoaWRlbnRpdHlBcmdzKG51bGwsIHVuZGVmaW5lZCkpLnRvRXF1YWwoW251bGwsIHVuZGVmaW5lZF0pO1xufSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/globals.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGlobal: () => (/* binding */ createGlobal),\n/* harmony export */   globalVar: () => (/* binding */ globalVar)\n/* harmony export */ });\nconst globalVar = typeof globalThis !== 'undefined' ? globalThis :\n    typeof global !== 'undefined' ? global :\n        typeof window !== 'undefined' ? window :\n            typeof self !== 'undefined' ? self :\n                {};\n\nif (typeof globalThis === 'undefined') {\n    globalVar.globalThis = globalVar;\n}\nconst stackGlobalsSymbol = Symbol.for('__stack-globals');\nglobalVar[stackGlobalsSymbol] ??= {};\nfunction createGlobal(key, init) {\n    if (!globalVar[stackGlobalsSymbol][key]) {\n        globalVar[stackGlobalsSymbol][key] = init();\n    }\n    return globalVar[stackGlobalsSymbol][key];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXGdsb2JhbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2xvYmFsVmFyID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6XG4gICAgdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOlxuICAgICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6XG4gICAgICAgICAgICB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDpcbiAgICAgICAgICAgICAgICB7fTtcbmV4cG9ydCB7IGdsb2JhbFZhciwgfTtcbmlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnbG9iYWxWYXIuZ2xvYmFsVGhpcyA9IGdsb2JhbFZhcjtcbn1cbmNvbnN0IHN0YWNrR2xvYmFsc1N5bWJvbCA9IFN5bWJvbC5mb3IoJ19fc3RhY2stZ2xvYmFscycpO1xuZ2xvYmFsVmFyW3N0YWNrR2xvYmFsc1N5bWJvbF0gPz89IHt9O1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdsb2JhbChrZXksIGluaXQpIHtcbiAgICBpZiAoIWdsb2JhbFZhcltzdGFja0dsb2JhbHNTeW1ib2xdW2tleV0pIHtcbiAgICAgICAgZ2xvYmFsVmFyW3N0YWNrR2xvYmFsc1N5bWJvbF1ba2V5XSA9IGluaXQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFZhcltzdGFja0dsb2JhbHNTeW1ib2xdW2tleV07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/http.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/http.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTTP_METHODS: () => (/* binding */ HTTP_METHODS),\n/* harmony export */   decodeBasicAuthorizationHeader: () => (/* binding */ decodeBasicAuthorizationHeader),\n/* harmony export */   encodeBasicAuthorizationHeader: () => (/* binding */ encodeBasicAuthorizationHeader)\n/* harmony export */ });\n/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\");\n\nconst HTTP_METHODS = {\n    \"GET\": {\n        safe: true,\n        idempotent: true,\n    },\n    \"POST\": {\n        safe: false,\n        idempotent: false,\n    },\n    \"PUT\": {\n        safe: false,\n        idempotent: true,\n    },\n    \"DELETE\": {\n        safe: false,\n        idempotent: true,\n    },\n    \"PATCH\": {\n        safe: false,\n        idempotent: false,\n    },\n    \"OPTIONS\": {\n        safe: true,\n        idempotent: true,\n    },\n    \"HEAD\": {\n        safe: true,\n        idempotent: true,\n    },\n    \"TRACE\": {\n        safe: true,\n        idempotent: true,\n    },\n    \"CONNECT\": {\n        safe: false,\n        idempotent: false,\n    },\n};\nfunction decodeBasicAuthorizationHeader(value) {\n    const [type, encoded, ...rest] = value.split(' ');\n    if (rest.length > 0)\n        return null;\n    if (!encoded)\n        return null;\n    if (type !== 'Basic')\n        return null;\n    if (!(0,_bytes__WEBPACK_IMPORTED_MODULE_0__.isBase64)(encoded))\n        return null;\n    const decoded = new TextDecoder().decode((0,_bytes__WEBPACK_IMPORTED_MODULE_0__.decodeBase64)(encoded));\n    const split = decoded.split(':');\n    return [split[0], split.slice(1).join(':')];\n}\n undefined;\nfunction encodeBasicAuthorizationHeader(id, password) {\n    if (id.includes(':'))\n        throw new Error(\"Basic authorization header id cannot contain ':'\");\n    return `Basic ${(0,_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(new TextEncoder().encode(`${id}:${password}`))}`;\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9odHRwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0Q7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGdEQUFRO0FBQ2pCO0FBQ0EsNkNBQTZDLG9EQUFZO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLFVBZUU7QUFDSztBQUNQO0FBQ0E7QUFDQSxvQkFBb0Isb0RBQVksNkJBQTZCLEdBQUcsR0FBRyxTQUFTLElBQUk7QUFDaEY7QUFDQSxVQVlFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXGh0dHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjb2RlQmFzZTY0LCBlbmNvZGVCYXNlNjQsIGlzQmFzZTY0IH0gZnJvbSBcIi4vYnl0ZXNcIjtcbmV4cG9ydCBjb25zdCBIVFRQX01FVEhPRFMgPSB7XG4gICAgXCJHRVRcIjoge1xuICAgICAgICBzYWZlOiB0cnVlLFxuICAgICAgICBpZGVtcG90ZW50OiB0cnVlLFxuICAgIH0sXG4gICAgXCJQT1NUXCI6IHtcbiAgICAgICAgc2FmZTogZmFsc2UsXG4gICAgICAgIGlkZW1wb3RlbnQ6IGZhbHNlLFxuICAgIH0sXG4gICAgXCJQVVRcIjoge1xuICAgICAgICBzYWZlOiBmYWxzZSxcbiAgICAgICAgaWRlbXBvdGVudDogdHJ1ZSxcbiAgICB9LFxuICAgIFwiREVMRVRFXCI6IHtcbiAgICAgICAgc2FmZTogZmFsc2UsXG4gICAgICAgIGlkZW1wb3RlbnQ6IHRydWUsXG4gICAgfSxcbiAgICBcIlBBVENIXCI6IHtcbiAgICAgICAgc2FmZTogZmFsc2UsXG4gICAgICAgIGlkZW1wb3RlbnQ6IGZhbHNlLFxuICAgIH0sXG4gICAgXCJPUFRJT05TXCI6IHtcbiAgICAgICAgc2FmZTogdHJ1ZSxcbiAgICAgICAgaWRlbXBvdGVudDogdHJ1ZSxcbiAgICB9LFxuICAgIFwiSEVBRFwiOiB7XG4gICAgICAgIHNhZmU6IHRydWUsXG4gICAgICAgIGlkZW1wb3RlbnQ6IHRydWUsXG4gICAgfSxcbiAgICBcIlRSQUNFXCI6IHtcbiAgICAgICAgc2FmZTogdHJ1ZSxcbiAgICAgICAgaWRlbXBvdGVudDogdHJ1ZSxcbiAgICB9LFxuICAgIFwiQ09OTkVDVFwiOiB7XG4gICAgICAgIHNhZmU6IGZhbHNlLFxuICAgICAgICBpZGVtcG90ZW50OiBmYWxzZSxcbiAgICB9LFxufTtcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCYXNpY0F1dGhvcml6YXRpb25IZWFkZXIodmFsdWUpIHtcbiAgICBjb25zdCBbdHlwZSwgZW5jb2RlZCwgLi4ucmVzdF0gPSB2YWx1ZS5zcGxpdCgnICcpO1xuICAgIGlmIChyZXN0Lmxlbmd0aCA+IDApXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGlmICghZW5jb2RlZClcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgaWYgKHR5cGUgIT09ICdCYXNpYycpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGlmICghaXNCYXNlNjQoZW5jb2RlZCkpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGRlY29kZWQgPSBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGVjb2RlQmFzZTY0KGVuY29kZWQpKTtcbiAgICBjb25zdCBzcGxpdCA9IGRlY29kZWQuc3BsaXQoJzonKTtcbiAgICByZXR1cm4gW3NwbGl0WzBdLCBzcGxpdC5zbGljZSgxKS5qb2luKCc6JyldO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZGVjb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgLy8gVGVzdCB3aXRoIHZhbGlkIEJhc2ljIEF1dGhvcml6YXRpb24gaGVhZGVyXG4gICAgY29uc3QgdXNlcm5hbWUgPSBcInVzZXJcIjtcbiAgICBjb25zdCBwYXNzd29yZCA9IFwicGFzc1wiO1xuICAgIGNvbnN0IGVuY29kZWQgPSBlbmNvZGVCYXNpY0F1dGhvcml6YXRpb25IZWFkZXIodXNlcm5hbWUsIHBhc3N3b3JkKTtcbiAgICBleHBlY3QoZGVjb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyKGVuY29kZWQpKS50b0VxdWFsKFt1c2VybmFtZSwgcGFzc3dvcmRdKTtcbiAgICAvLyBUZXN0IHdpdGggcGFzc3dvcmQgY29udGFpbmluZyBjb2xvbnNcbiAgICBjb25zdCBjb21wbGV4UGFzc3dvcmQgPSBcInBhc3M6d2l0aDpjb2xvbnNcIjtcbiAgICBjb25zdCBlbmNvZGVkQ29tcGxleCA9IGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcih1c2VybmFtZSwgY29tcGxleFBhc3N3b3JkKTtcbiAgICBleHBlY3QoZGVjb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyKGVuY29kZWRDb21wbGV4KSkudG9FcXVhbChbdXNlcm5hbWUsIGNvbXBsZXhQYXNzd29yZF0pO1xuICAgIC8vIFRlc3Qgd2l0aCBpbnZhbGlkIGhlYWRlcnNcbiAgICBleHBlY3QoZGVjb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyKFwiTm90QmFzaWMgZFhObGNqcHdZWE56XCIpKS50b0JlKG51bGwpOyAvLyBXcm9uZyB0eXBlXG4gICAgZXhwZWN0KGRlY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihcIkJhc2ljXCIpKS50b0JlKG51bGwpOyAvLyBNaXNzaW5nIGVuY29kZWQgcGFydFxuICAgIGV4cGVjdChkZWNvZGVCYXNpY0F1dGhvcml6YXRpb25IZWFkZXIoXCJCYXNpYyBub3QtYmFzZTY0XCIpKS50b0JlKG51bGwpOyAvLyBOb3QgYmFzZTY0XG4gICAgZXhwZWN0KGRlY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihcIkJhc2ljIGRYTmxjanB3WVhOeiBleHRyYVwiKSkudG9CZShudWxsKTsgLy8gRXh0cmEgcGFydHNcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihpZCwgcGFzc3dvcmQpIHtcbiAgICBpZiAoaWQuaW5jbHVkZXMoJzonKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQmFzaWMgYXV0aG9yaXphdGlvbiBoZWFkZXIgaWQgY2Fubm90IGNvbnRhaW4gJzonXCIpO1xuICAgIHJldHVybiBgQmFzaWMgJHtlbmNvZGVCYXNlNjQobmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGAke2lkfToke3Bhc3N3b3JkfWApKX1gO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZW5jb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgLy8gVGVzdCB3aXRoIHNpbXBsZSB1c2VybmFtZSBhbmQgcGFzc3dvcmRcbiAgICBjb25zdCBlbmNvZGVkID0gZW5jb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyKFwidXNlclwiLCBcInBhc3NcIik7XG4gICAgZXhwZWN0KGVuY29kZWQpLnRvTWF0Y2goL15CYXNpYyBbQS1aYS16MC05Ky89XSskLyk7IC8vIFNob3VsZCBzdGFydCB3aXRoIFwiQmFzaWMgXCIgZm9sbG93ZWQgYnkgYmFzZTY0XG4gICAgLy8gVGVzdCB3aXRoIGVtcHR5IHBhc3N3b3JkXG4gICAgY29uc3QgZW5jb2RlZEVtcHR5UGFzcyA9IGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihcInVzZXJcIiwgXCJcIik7XG4gICAgZXhwZWN0KGVuY29kZWRFbXB0eVBhc3MpLnRvTWF0Y2goL15CYXNpYyBbQS1aYS16MC05Ky89XSskLyk7XG4gICAgLy8gVGVzdCB3aXRoIHBhc3N3b3JkIGNvbnRhaW5pbmcgc3BlY2lhbCBjaGFyYWN0ZXJzXG4gICAgY29uc3QgZW5jb2RlZFNwZWNpYWxDaGFycyA9IGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihcInVzZXJcIiwgXCJwQHNzIXcwcmRcIik7XG4gICAgZXhwZWN0KGVuY29kZWRTcGVjaWFsQ2hhcnMpLnRvTWF0Y2goL15CYXNpYyBbQS1aYS16MC05Ky89XSskLyk7XG4gICAgLy8gVGVzdCB3aXRoIHVzZXJuYW1lIGNvbnRhaW5pbmcgY29sb24gc2hvdWxkIHRocm93XG4gICAgZXhwZWN0KCgpID0+IGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihcInVzZXI6bmFtZVwiLCBcInBhc3NcIikpLnRvVGhyb3coKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/http.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/locks.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/locks.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadWriteLock: () => (/* binding */ ReadWriteLock)\n/* harmony export */ });\n/* harmony import */ var async_mutex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async-mutex */ \"(app-pages-browser)/./node_modules/async-mutex/index.mjs\");\n\nclass ReadWriteLock {\n    constructor() {\n        this.semaphore = new async_mutex__WEBPACK_IMPORTED_MODULE_0__.Semaphore(1); // Semaphore with 1 permit\n        this.readers = 0; // Track the number of readers\n        this.readersMutex = new async_mutex__WEBPACK_IMPORTED_MODULE_0__.Semaphore(1); // Protect access to `readers` count\n    }\n    async withReadLock(callback) {\n        await this._acquireReadLock();\n        try {\n            return await callback();\n        }\n        finally {\n            await this._releaseReadLock();\n        }\n    }\n    async withWriteLock(callback) {\n        await this._acquireWriteLock();\n        try {\n            return await callback();\n        }\n        finally {\n            await this._releaseWriteLock();\n        }\n    }\n    async _acquireReadLock() {\n        // Increment the readers count\n        await this.readersMutex.acquire();\n        try {\n            this.readers += 1;\n            // If this is the first reader, block writers\n            if (this.readers === 1) {\n                await this.semaphore.acquire();\n            }\n        }\n        finally {\n            this.readersMutex.release();\n        }\n    }\n    async _releaseReadLock() {\n        // Decrement the readers count\n        await this.readersMutex.acquire();\n        try {\n            this.readers -= 1;\n            // If this was the last reader, release the writer block\n            if (this.readers === 0) {\n                this.semaphore.release();\n            }\n        }\n        finally {\n            this.readersMutex.release();\n        }\n    }\n    async _acquireWriteLock() {\n        // Writers acquire the main semaphore exclusively\n        await this.semaphore.acquire();\n    }\n    async _releaseWriteLock() {\n        // Writers release the main semaphore\n        this.semaphore.release();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9sb2Nrcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQztBQUNQO0FBQ0EsNkJBQTZCLGtEQUFTLEtBQUs7QUFDM0MsMEJBQTBCO0FBQzFCLGdDQUFnQyxrREFBUyxLQUFLO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFx1dGlsc1xcbG9ja3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VtYXBob3JlIH0gZnJvbSAnYXN5bmMtbXV0ZXgnO1xuZXhwb3J0IGNsYXNzIFJlYWRXcml0ZUxvY2sge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNlbWFwaG9yZSA9IG5ldyBTZW1hcGhvcmUoMSk7IC8vIFNlbWFwaG9yZSB3aXRoIDEgcGVybWl0XG4gICAgICAgIHRoaXMucmVhZGVycyA9IDA7IC8vIFRyYWNrIHRoZSBudW1iZXIgb2YgcmVhZGVyc1xuICAgICAgICB0aGlzLnJlYWRlcnNNdXRleCA9IG5ldyBTZW1hcGhvcmUoMSk7IC8vIFByb3RlY3QgYWNjZXNzIHRvIGByZWFkZXJzYCBjb3VudFxuICAgIH1cbiAgICBhc3luYyB3aXRoUmVhZExvY2soY2FsbGJhY2spIHtcbiAgICAgICAgYXdhaXQgdGhpcy5fYWNxdWlyZVJlYWRMb2NrKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgY2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuX3JlbGVhc2VSZWFkTG9jaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIHdpdGhXcml0ZUxvY2soY2FsbGJhY2spIHtcbiAgICAgICAgYXdhaXQgdGhpcy5fYWNxdWlyZVdyaXRlTG9jaygpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLl9yZWxlYXNlV3JpdGVMb2NrKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgX2FjcXVpcmVSZWFkTG9jaygpIHtcbiAgICAgICAgLy8gSW5jcmVtZW50IHRoZSByZWFkZXJzIGNvdW50XG4gICAgICAgIGF3YWl0IHRoaXMucmVhZGVyc011dGV4LmFjcXVpcmUoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMucmVhZGVycyArPSAxO1xuICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyB0aGUgZmlyc3QgcmVhZGVyLCBibG9jayB3cml0ZXJzXG4gICAgICAgICAgICBpZiAodGhpcy5yZWFkZXJzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zZW1hcGhvcmUuYWNxdWlyZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5yZWFkZXJzTXV0ZXgucmVsZWFzZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIF9yZWxlYXNlUmVhZExvY2soKSB7XG4gICAgICAgIC8vIERlY3JlbWVudCB0aGUgcmVhZGVycyBjb3VudFxuICAgICAgICBhd2FpdCB0aGlzLnJlYWRlcnNNdXRleC5hY3F1aXJlKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLnJlYWRlcnMgLT0gMTtcbiAgICAgICAgICAgIC8vIElmIHRoaXMgd2FzIHRoZSBsYXN0IHJlYWRlciwgcmVsZWFzZSB0aGUgd3JpdGVyIGJsb2NrXG4gICAgICAgICAgICBpZiAodGhpcy5yZWFkZXJzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZW1hcGhvcmUucmVsZWFzZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5yZWFkZXJzTXV0ZXgucmVsZWFzZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIF9hY3F1aXJlV3JpdGVMb2NrKCkge1xuICAgICAgICAvLyBXcml0ZXJzIGFjcXVpcmUgdGhlIG1haW4gc2VtYXBob3JlIGV4Y2x1c2l2ZWx5XG4gICAgICAgIGF3YWl0IHRoaXMuc2VtYXBob3JlLmFjcXVpcmUoKTtcbiAgICB9XG4gICAgYXN5bmMgX3JlbGVhc2VXcml0ZUxvY2soKSB7XG4gICAgICAgIC8vIFdyaXRlcnMgcmVsZWFzZSB0aGUgbWFpbiBzZW1hcGhvcmVcbiAgICAgICAgdGhpcy5zZW1hcGhvcmUucmVsZWFzZSgpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/locks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/maps.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DependenciesMap: () => (/* binding */ DependenciesMap),\n/* harmony export */   IterableWeakMap: () => (/* binding */ IterableWeakMap),\n/* harmony export */   MaybeWeakMap: () => (/* binding */ MaybeWeakMap),\n/* harmony export */   WeakRefIfAvailable: () => (/* binding */ WeakRefIfAvailable)\n/* harmony export */ });\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\nvar _a, _b, _c;\n\nclass WeakRefIfAvailable {\n    constructor(value) {\n        if (typeof WeakRef === \"undefined\") {\n            this._ref = { deref: () => value };\n        }\n        else {\n            this._ref = new WeakRef(value);\n        }\n    }\n    deref() {\n        return this._ref.deref();\n    }\n}\n undefined;\n/**\n * A WeakMap-like object that can be iterated over.\n *\n * Note that it relies on WeakRef, and always falls back to the regular Map behavior (ie. no GC) in browsers that don't support it.\n */\nclass IterableWeakMap {\n    constructor(entries) {\n        this[_a] = \"IterableWeakMap\";\n        const mappedEntries = entries?.map((e) => [e[0], { value: e[1], keyRef: new WeakRefIfAvailable(e[0]) }]);\n        this._weakMap = new WeakMap(mappedEntries ?? []);\n        this._keyRefs = new Set(mappedEntries?.map((e) => e[1].keyRef) ?? []);\n    }\n    get(key) {\n        return this._weakMap.get(key)?.value;\n    }\n    set(key, value) {\n        const existing = this._weakMap.get(key);\n        const updated = { value, keyRef: existing?.keyRef ?? new WeakRefIfAvailable(key) };\n        this._weakMap.set(key, updated);\n        this._keyRefs.add(updated.keyRef);\n        return this;\n    }\n    delete(key) {\n        const res = this._weakMap.get(key);\n        if (res) {\n            this._weakMap.delete(key);\n            this._keyRefs.delete(res.keyRef);\n            return true;\n        }\n        return false;\n    }\n    has(key) {\n        return this._weakMap.has(key) && this._keyRefs.has(this._weakMap.get(key).keyRef);\n    }\n    *[Symbol.iterator]() {\n        for (const keyRef of this._keyRefs) {\n            const key = keyRef.deref();\n            const existing = key ? this._weakMap.get(key) : undefined;\n            if (!key) {\n                // This can happen if the key was GCed. Remove it so the next iteration is faster.\n                this._keyRefs.delete(keyRef);\n            }\n            else if (existing) {\n                yield [key, existing.value];\n            }\n        }\n    }\n}\n_a = Symbol.toStringTag;\n undefined;\n/**\n * A map that is a IterableWeakMap for object keys and a regular Map for primitive keys. Also provides iteration over both\n * object and primitive keys.\n *\n * Note that, just like IterableWeakMap, older browsers without support for WeakRef will use a regular Map for object keys.\n */\nclass MaybeWeakMap {\n    constructor(entries) {\n        this[_b] = \"MaybeWeakMap\";\n        const entriesArray = [...entries ?? []];\n        this._primitiveMap = new Map(entriesArray.filter((e) => !this._isAllowedInWeakMap(e[0])));\n        this._weakMap = new IterableWeakMap(entriesArray.filter((e) => this._isAllowedInWeakMap(e[0])));\n    }\n    _isAllowedInWeakMap(key) {\n        return (typeof key === \"object\" && key !== null) || (typeof key === \"symbol\" && Symbol.keyFor(key) === undefined);\n    }\n    get(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.get(key);\n        }\n        else {\n            return this._primitiveMap.get(key);\n        }\n    }\n    set(key, value) {\n        if (this._isAllowedInWeakMap(key)) {\n            this._weakMap.set(key, value);\n        }\n        else {\n            this._primitiveMap.set(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.delete(key);\n        }\n        else {\n            return this._primitiveMap.delete(key);\n        }\n    }\n    has(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.has(key);\n        }\n        else {\n            return this._primitiveMap.has(key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._primitiveMap;\n        yield* this._weakMap;\n    }\n}\n_b = Symbol.toStringTag;\n undefined;\n/**\n * A map that stores values indexed by an array of keys. If the keys are objects and the environment supports WeakRefs,\n * they are stored in a WeakMap.\n */\nclass DependenciesMap {\n    constructor() {\n        this._inner = { map: new MaybeWeakMap(), hasValue: false, value: undefined };\n        this[_c] = \"DependenciesMap\";\n    }\n    _valueToResult(inner) {\n        if (inner.hasValue) {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.Result.ok(inner.value);\n        }\n        else {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined);\n        }\n    }\n    _unwrapFromInner(dependencies, inner) {\n        if ((dependencies.length === 0)) {\n            return this._valueToResult(inner);\n        }\n        else {\n            const [key, ...rest] = dependencies;\n            const newInner = inner.map.get(key);\n            if (!newInner) {\n                return _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined);\n            }\n            return this._unwrapFromInner(rest, newInner);\n        }\n    }\n    _setInInner(dependencies, value, inner) {\n        if (dependencies.length === 0) {\n            const res = this._valueToResult(inner);\n            if (value.status === \"ok\") {\n                inner.hasValue = true;\n                inner.value = value.data;\n            }\n            else {\n                inner.hasValue = false;\n                inner.value = undefined;\n            }\n            return res;\n        }\n        else {\n            const [key, ...rest] = dependencies;\n            let newInner = inner.map.get(key);\n            if (!newInner) {\n                inner.map.set(key, newInner = { map: new MaybeWeakMap(), hasValue: false, value: undefined });\n            }\n            return this._setInInner(rest, value, newInner);\n        }\n    }\n    *_iterateInner(dependencies, inner) {\n        if (inner.hasValue) {\n            yield [dependencies, inner.value];\n        }\n        for (const [key, value] of inner.map) {\n            yield* this._iterateInner([...dependencies, key], value);\n        }\n    }\n    get(dependencies) {\n        return _results__WEBPACK_IMPORTED_MODULE_0__.Result.or(this._unwrapFromInner(dependencies, this._inner), undefined);\n    }\n    set(dependencies, value) {\n        this._setInInner(dependencies, _results__WEBPACK_IMPORTED_MODULE_0__.Result.ok(value), this._inner);\n        return this;\n    }\n    delete(dependencies) {\n        return this._setInInner(dependencies, _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined), this._inner).status === \"ok\";\n    }\n    has(dependencies) {\n        return this._unwrapFromInner(dependencies, this._inner).status === \"ok\";\n    }\n    clear() {\n        this._inner = { map: new MaybeWeakMap(), hasValue: false, value: undefined };\n    }\n    *[Symbol.iterator]() {\n        yield* this._iterateInner([], this._inner);\n    }\n}\n_c = Symbol.toStringTag;\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/math.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/math.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remainder: () => (/* binding */ remainder)\n/* harmony export */ });\n/**\n * Similar to the modulo operator, but always returns a positive number (even when the input is negative).\n */\nfunction remainder(n, d) {\n    return ((n % d) + Math.abs(d)) % d;\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9tYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxVQVdFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXG1hdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTaW1pbGFyIHRvIHRoZSBtb2R1bG8gb3BlcmF0b3IsIGJ1dCBhbHdheXMgcmV0dXJucyBhIHBvc2l0aXZlIG51bWJlciAoZXZlbiB3aGVuIHRoZSBpbnB1dCBpcyBuZWdhdGl2ZSkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1haW5kZXIobiwgZCkge1xuICAgIHJldHVybiAoKG4gJSBkKSArIE1hdGguYWJzKGQpKSAlIGQ7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJyZW1haW5kZXJcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICBleHBlY3QocmVtYWluZGVyKDEwLCAzKSkudG9CZSgxKTtcbiAgICBleHBlY3QocmVtYWluZGVyKDEwLCA1KSkudG9CZSgwKTtcbiAgICBleHBlY3QocmVtYWluZGVyKDEwLCA3KSkudG9CZSgzKTtcbiAgICAvLyBUZXN0IHdpdGggbmVnYXRpdmUgbnVtYmVyc1xuICAgIGV4cGVjdChyZW1haW5kZXIoLTEwLCAzKSkudG9CZSgyKTtcbiAgICBleHBlY3QocmVtYWluZGVyKC01LCAyKSkudG9CZSgxKTtcbiAgICBleHBlY3QocmVtYWluZGVyKC03LCA0KSkudG9CZSgxKTtcbiAgICAvLyBUZXN0IHdpdGggZGVjaW1hbCBudW1iZXJzXG4gICAgZXhwZWN0KHJlbWFpbmRlcigxMC41LCAzKSkudG9CZUNsb3NlVG8oMS41KTtcbiAgICBleHBlY3QocmVtYWluZGVyKC0xMC41LCAzKSkudG9CZUNsb3NlVG8oMS41KTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/math.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/objects.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepPlainClone: () => (/* binding */ deepPlainClone),\n/* harmony export */   deepPlainEquals: () => (/* binding */ deepPlainEquals),\n/* harmony export */   filterUndefined: () => (/* binding */ filterUndefined),\n/* harmony export */   filterUndefinedOrNull: () => (/* binding */ filterUndefinedOrNull),\n/* harmony export */   isNotNull: () => (/* binding */ isNotNull),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   typedAssign: () => (/* binding */ typedAssign),\n/* harmony export */   typedEntries: () => (/* binding */ typedEntries),\n/* harmony export */   typedFromEntries: () => (/* binding */ typedFromEntries),\n/* harmony export */   typedKeys: () => (/* binding */ typedKeys),\n/* harmony export */   typedValues: () => (/* binding */ typedValues)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n\nfunction isNotNull(value) {\n    return value !== null && value !== undefined;\n}\n undefined;\n/**\n * Assumes both objects are primitives, arrays, or non-function plain objects, and compares them deeply.\n *\n * Note that since they are assumed to be plain objects, this function does not compare prototypes.\n */\nfunction deepPlainEquals(obj1, obj2, options = {}) {\n    if (typeof obj1 !== typeof obj2)\n        return false;\n    if (obj1 === obj2)\n        return true;\n    switch (typeof obj1) {\n        case 'object': {\n            if (!obj1 || !obj2)\n                return false;\n            if (Array.isArray(obj1) || Array.isArray(obj2)) {\n                if (!Array.isArray(obj1) || !Array.isArray(obj2))\n                    return false;\n                if (obj1.length !== obj2.length)\n                    return false;\n                return obj1.every((v, i) => deepPlainEquals(v, obj2[i], options));\n            }\n            const entries1 = Object.entries(obj1).filter(([k, v]) => !options.ignoreUndefinedValues || v !== undefined);\n            const entries2 = Object.entries(obj2).filter(([k, v]) => !options.ignoreUndefinedValues || v !== undefined);\n            if (entries1.length !== entries2.length)\n                return false;\n            return entries1.every(([k, v1]) => {\n                const e2 = entries2.find(([k2]) => k === k2);\n                if (!e2)\n                    return false;\n                return deepPlainEquals(v1, e2[1], options);\n            });\n        }\n        case 'undefined':\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n        case 'symbol':\n        case 'function': {\n            return false;\n        }\n        default: {\n            throw new Error(\"Unexpected typeof \" + typeof obj1);\n        }\n    }\n}\n undefined;\nfunction deepPlainClone(obj) {\n    if (typeof obj === 'function')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support functions\");\n    if (typeof obj === 'symbol')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support symbols\");\n    if (typeof obj !== 'object' || !obj)\n        return obj;\n    if (Array.isArray(obj))\n        return obj.map(deepPlainClone);\n    return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, deepPlainClone(v)]));\n}\n undefined;\nfunction typedEntries(obj) {\n    return Object.entries(obj);\n}\n undefined;\nfunction typedFromEntries(entries) {\n    return Object.fromEntries(entries);\n}\n undefined;\nfunction typedKeys(obj) {\n    return Object.keys(obj);\n}\n undefined;\nfunction typedValues(obj) {\n    return Object.values(obj);\n}\n undefined;\nfunction typedAssign(target, source) {\n    return Object.assign(target, source);\n}\n undefined;\n/**\n * Returns a new object with all undefined values removed. Useful when spreading optional parameters on an object, as\n * TypeScript's `Partial<XYZ>` type allows `undefined` values.\n */\nfunction filterUndefined(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== undefined));\n}\n undefined;\n/**\n * Returns a new object with all undefined and null values removed. Useful when spreading optional parameters on an object, as\n * TypeScript's `Partial<XYZ>` type allows `undefined` values.\n */\nfunction filterUndefinedOrNull(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== undefined && v !== null));\n}\n undefined;\nfunction pick(obj, keys) {\n    return Object.fromEntries(Object.entries(obj).filter(([k]) => keys.includes(k)));\n}\n undefined;\nfunction omit(obj, keys) {\n    return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n}\n undefined;\nfunction split(obj, keys) {\n    return [pick(obj, keys), omit(obj, keys)];\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/promises.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPromise: () => (/* binding */ createPromise),\n/* harmony export */   ignoreUnhandledRejection: () => (/* binding */ ignoreUnhandledRejection),\n/* harmony export */   neverResolve: () => (/* binding */ neverResolve),\n/* harmony export */   pending: () => (/* binding */ pending),\n/* harmony export */   rateLimited: () => (/* binding */ rateLimited),\n/* harmony export */   rejected: () => (/* binding */ rejected),\n/* harmony export */   resolved: () => (/* binding */ resolved),\n/* harmony export */   runAsynchronously: () => (/* binding */ runAsynchronously),\n/* harmony export */   runAsynchronouslyWithAlert: () => (/* binding */ runAsynchronouslyWithAlert),\n/* harmony export */   throttled: () => (/* binding */ throttled),\n/* harmony export */   timeout: () => (/* binding */ timeout),\n/* harmony export */   timeoutThrow: () => (/* binding */ timeoutThrow),\n/* harmony export */   wait: () => (/* binding */ wait),\n/* harmony export */   waitUntil: () => (/* binding */ waitUntil)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./maps */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _uuids__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uuids */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n\n\n\n\n\nfunction createPromise(callback) {\n    let status = \"pending\";\n    let valueOrReason = undefined;\n    let resolve = null;\n    let reject = null;\n    const promise = new Promise((res, rej) => {\n        resolve = (value) => {\n            if (status !== \"pending\")\n                return;\n            status = \"fulfilled\";\n            valueOrReason = value;\n            res(value);\n        };\n        reject = (reason) => {\n            if (status !== \"pending\")\n                return;\n            status = \"rejected\";\n            valueOrReason = reason;\n            rej(reason);\n        };\n    });\n    callback(resolve, reject);\n    return Object.assign(promise, {\n        status: status,\n        ...status === \"fulfilled\" ? { value: valueOrReason } : {},\n        ...status === \"rejected\" ? { reason: valueOrReason } : {},\n    });\n}\n undefined;\nlet resolvedCache = null;\n/**\n * Like Promise.resolve(...), but also adds the status and value properties for use with React's `use` hook, and caches\n * the value so that invoking `resolved` twice returns the same promise.\n */\nfunction resolved(value) {\n    resolvedCache ??= new _maps__WEBPACK_IMPORTED_MODULE_2__.DependenciesMap();\n    if (resolvedCache.has([value])) {\n        return resolvedCache.get([value]);\n    }\n    const res = Object.assign(Promise.resolve(value), {\n        status: \"fulfilled\",\n        value,\n    });\n    resolvedCache.set([value], res);\n    return res;\n}\n undefined;\nlet rejectedCache = null;\n/**\n * Like Promise.reject(...), but also adds the status and value properties for use with React's `use` hook, and caches\n * the value so that invoking `rejected` twice returns the same promise.\n */\nfunction rejected(reason) {\n    rejectedCache ??= new _maps__WEBPACK_IMPORTED_MODULE_2__.DependenciesMap();\n    if (rejectedCache.has([reason])) {\n        return rejectedCache.get([reason]);\n    }\n    const res = Object.assign(ignoreUnhandledRejection(Promise.reject(reason)), {\n        status: \"rejected\",\n        reason: reason,\n    });\n    rejectedCache.set([reason], res);\n    return res;\n}\n undefined;\n// We'll skip the rejection test for pending() since it's causing unhandled rejections\n// The function is already well tested through other tests like rejected() and createPromise()\nconst neverResolvePromise = pending(new Promise(() => { }));\nfunction neverResolve() {\n    return neverResolvePromise;\n}\n undefined;\nfunction pending(promise, options = {}) {\n    const res = promise.then(value => {\n        res.status = \"fulfilled\";\n        res.value = value;\n        return value;\n    }, actualReason => {\n        res.status = \"rejected\";\n        res.reason = actualReason;\n        throw actualReason;\n    });\n    res.status = \"pending\";\n    return res;\n}\n undefined;\n/**\n * Should be used to wrap Promises that are not immediately awaited, so they don't throw an unhandled promise rejection\n * error.\n *\n * Vercel kills serverless functions on unhandled promise rejection errors, so this is important.\n */\nfunction ignoreUnhandledRejection(promise) {\n    promise.catch(() => { });\n    return promise;\n}\n undefined;\nasync function wait(ms) {\n    if (!Number.isFinite(ms) || ms < 0) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(`wait() requires a non-negative integer number of milliseconds to wait. (found: ${ms}ms)`);\n    }\n    if (ms >= 2 ** 31) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"The maximum timeout for wait() is 2147483647ms (2**31 - 1). (found: ${ms}ms)\");\n    }\n    return await new Promise(resolve => setTimeout(resolve, ms));\n}\n undefined;\nasync function waitUntil(date) {\n    return await wait(date.getTime() - Date.now());\n}\n undefined;\nfunction runAsynchronouslyWithAlert(...args) {\n    return runAsynchronously(args[0], {\n        ...args[1],\n        onError: error => {\n            if (error instanceof ___WEBPACK_IMPORTED_MODULE_0__.KnownError && \"development\".includes(\"production\")) {\n                alert(error.message);\n            }\n            else {\n                alert(`An unhandled error occurred. Please ${ true ? `check the browser console for the full error.` : 0}\\n\\n${error}`);\n            }\n            args[1]?.onError?.(error);\n        },\n    }, ...args.slice(2));\n}\n undefined;\nfunction runAsynchronously(promiseOrFunc, options = {}) {\n    if (typeof promiseOrFunc === \"function\") {\n        promiseOrFunc = promiseOrFunc();\n    }\n    const duringError = new Error();\n    promiseOrFunc?.catch(error => {\n        options.onError?.(error);\n        const newError = new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Uncaught error in asynchronous function: \" + error.toString(), { cause: error });\n        (0,_errors__WEBPACK_IMPORTED_MODULE_1__.concatStacktraces)(newError, duringError);\n        if (!options.noErrorLogging) {\n            (0,_errors__WEBPACK_IMPORTED_MODULE_1__.captureError)(\"runAsynchronously\", newError);\n        }\n    });\n}\n undefined;\nclass TimeoutError extends Error {\n    constructor(ms) {\n        super(`Timeout after ${ms}ms`);\n        this.ms = ms;\n        this.name = \"TimeoutError\";\n    }\n}\nasync function timeout(promise, ms) {\n    return await Promise.race([\n        promise.then(value => _results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(value)),\n        wait(ms).then(() => _results__WEBPACK_IMPORTED_MODULE_3__.Result.error(new TimeoutError(ms))),\n    ]);\n}\n undefined;\nasync function timeoutThrow(promise, ms) {\n    return _results__WEBPACK_IMPORTED_MODULE_3__.Result.orThrow(await timeout(promise, ms));\n}\n undefined;\nfunction rateLimited(func, options) {\n    let waitUntil = performance.now();\n    let queue = [];\n    let addedToQueueCallbacks = new Map;\n    const next = async () => {\n        while (true) {\n            if (waitUntil > performance.now()) {\n                await wait(Math.max(1, waitUntil - performance.now() + 1));\n            }\n            else if (queue.length === 0) {\n                const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_4__.generateUuid)();\n                await new Promise(resolve => {\n                    addedToQueueCallbacks.set(uuid, resolve);\n                });\n                addedToQueueCallbacks.delete(uuid);\n            }\n            else {\n                break;\n            }\n        }\n        const nextFuncs = options.batchCalls ? queue.splice(0, queue.length) : [queue.shift()];\n        const start = performance.now();\n        const value = await _results__WEBPACK_IMPORTED_MODULE_3__.Result.fromPromise(func());\n        const end = performance.now();\n        waitUntil = Math.max(waitUntil, start + (options.throttleMs ?? 0), end + (options.gapMs ?? 0));\n        for (const nextFunc of nextFuncs) {\n            if (value.status === \"ok\") {\n                nextFunc[0](value.data);\n            }\n            else {\n                nextFunc[1](value.error);\n            }\n        }\n    };\n    runAsynchronously(async () => {\n        while (true) {\n            await next();\n        }\n    });\n    return () => {\n        return new Promise((resolve, reject) => {\n            waitUntil = Math.max(waitUntil, performance.now() + (options.debounceMs ?? 0));\n            queue.push([resolve, reject]);\n            addedToQueueCallbacks.forEach(cb => cb());\n        });\n    };\n}\nfunction throttled(func, delayMs) {\n    let timeout = null;\n    let nextAvailable = null;\n    return async (...args) => {\n        while (nextAvailable !== null) {\n            await nextAvailable;\n        }\n        nextAvailable = new Promise(resolve => {\n            timeout = setTimeout(() => {\n                nextAvailable = null;\n                resolve(func(...args));\n            }, delayMs);\n        });\n        return await nextAvailable;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/react.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/react.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoSuspenseBoundaryError: () => (/* binding */ NoSuspenseBoundaryError),\n/* harmony export */   forwardRefIfNeeded: () => (/* binding */ forwardRefIfNeeded),\n/* harmony export */   getNodeText: () => (/* binding */ getNodeText),\n/* harmony export */   suspend: () => (/* binding */ suspend),\n/* harmony export */   suspendIfSsr: () => (/* binding */ suspendIfSsr)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\n\nfunction forwardRefIfNeeded(render) {\n    // TODO: when we drop support for react 18, remove this\n    const version = react__WEBPACK_IMPORTED_MODULE_0__.version;\n    const major = parseInt(version.split(\".\")[0]);\n    if (major < 19) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(render);\n    }\n    else {\n        return ((props) => render(props, props.ref));\n    }\n}\n undefined;\nfunction getNodeText(node) {\n    if ([\"number\", \"string\"].includes(typeof node)) {\n        return `${node}`;\n    }\n    if (!node) {\n        return \"\";\n    }\n    if (Array.isArray(node)) {\n        return node.map(getNodeText).join(\"\");\n    }\n    if (typeof node === \"object\" && \"props\" in node) {\n        return getNodeText(node.props.children);\n    }\n    throw new Error(`Unknown node type: ${typeof node}`);\n}\n undefined;\n/**\n * Suspends the currently rendered component indefinitely. Will not unsuspend unless the component rerenders.\n *\n * You can use this to translate older query- or AsyncResult-based code to new the Suspense system, for example: `if (query.isLoading) suspend();`\n */\nfunction suspend() {\n    react__WEBPACK_IMPORTED_MODULE_0__.use((0,_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)());\n    throw new Error(\"Somehow a Promise that never resolves was resolved?\");\n}\nclass NoSuspenseBoundaryError extends Error {\n    constructor(options) {\n        super((0,_strings__WEBPACK_IMPORTED_MODULE_3__.deindent) `\n      ${options.caller ?? \"This code path\"} attempted to display a loading indicator, but didn't find a Suspense boundary above it. Please read the error message below carefully.\n      \n      The fix depends on which of the 3 scenarios caused it:\n      \n      1. You are missing a loading.tsx file in your app directory. Fix it by adding a loading.tsx file in your app directory.\n\n      2. The component is rendered in the root (outermost) layout.tsx or template.tsx file. Next.js does not wrap those files in a Suspense boundary, even if there is a loading.tsx file in the same folder. To fix it, wrap your layout inside a route group like this:\n\n        - app\n        - - layout.tsx  // contains <html> and <body>, alongside providers and other components that don't need ${options.caller ?? \"this code path\"}\n        - - loading.tsx  // required for suspense\n        - - (main)\n        - - - layout.tsx  // contains the main layout of your app, like a sidebar or a header, and can use ${options.caller ?? \"this code path\"}\n        - - - route.tsx  // your actual main page\n        - - - the rest of your app\n\n        For more information on this approach, see Next's documentation on route groups: https://nextjs.org/docs/app/building-your-application/routing/route-groups\n      \n      3. You caught this error with try-catch or a custom error boundary. Fix this by rethrowing the error or not catching it in the first place.\n\n      See: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\n\n      More information on SSR and Suspense boundaries: https://react.dev/reference/react/Suspense#providing-a-fallback-for-server-errors-and-client-only-content\n    `);\n        this.name = \"NoSuspenseBoundaryError\";\n        this.reason = options.caller ?? \"suspendIfSsr()\";\n        // set the digest so nextjs doesn't log the error\n        // https://github.com/vercel/next.js/blob/d01d6d9c35a8c2725b3d74c1402ab76d4779a6cf/packages/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts#L14\n        this.digest = \"BAILOUT_TO_CLIENT_SIDE_RENDERING\";\n    }\n}\n undefined;\n/**\n * Use this in a component or a hook to disable SSR. Should be wrapped in a Suspense boundary, or it will throw an error.\n */\nfunction suspendIfSsr(caller) {\n    if (!(0,_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n        throw new NoSuspenseBoundaryError({ caller });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/results.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncResult: () => (/* binding */ AsyncResult),\n/* harmony export */   Result: () => (/* binding */ Result)\n/* harmony export */ });\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\nconst Result = {\n    fromThrowing,\n    fromThrowingAsync,\n    fromPromise: promiseToResult,\n    ok(data) {\n        return {\n            status: \"ok\",\n            data,\n        };\n    },\n    error(error) {\n        return {\n            status: \"error\",\n            error,\n        };\n    },\n    map: mapResult,\n    or: (result, fallback) => {\n        return result.status === \"ok\" ? result.data : fallback;\n    },\n    orThrow: (result) => {\n        if (result.status === \"error\") {\n            throw result.error;\n        }\n        return result.data;\n    },\n    orThrowAsync: async (result) => {\n        return Result.orThrow(await result);\n    },\n    retry,\n};\n undefined;\n undefined;\n undefined;\n undefined;\nconst AsyncResult = {\n    fromThrowing,\n    fromPromise: promiseToResult,\n    ok: Result.ok,\n    error: Result.error,\n    pending,\n    map: mapResult,\n    or: (result, fallback) => {\n        if (result.status === \"pending\") {\n            return fallback;\n        }\n        return Result.or(result, fallback);\n    },\n    orThrow: (result) => {\n        if (result.status === \"pending\") {\n            throw new Error(\"Result still pending\");\n        }\n        return Result.orThrow(result);\n    },\n    retry,\n};\n undefined;\n undefined;\nfunction pending(progress) {\n    return {\n        status: \"pending\",\n        progress: progress,\n    };\n}\n undefined;\nasync function promiseToResult(promise) {\n    try {\n        const value = await promise;\n        return Result.ok(value);\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\n undefined;\nfunction fromThrowing(fn) {\n    try {\n        return Result.ok(fn());\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\n undefined;\nasync function fromThrowingAsync(fn) {\n    try {\n        return Result.ok(await fn());\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\n undefined;\nfunction mapResult(result, fn) {\n    if (result.status === \"error\")\n        return {\n            status: \"error\",\n            error: result.error,\n        };\n    if (result.status === \"pending\")\n        return {\n            status: \"pending\",\n            ...\"progress\" in result ? { progress: result.progress } : {},\n        };\n    return Result.ok(fn(result.data));\n}\n undefined;\nclass RetryError extends AggregateError {\n    constructor(errors) {\n        const strings = errors.map(e => (0,_strings__WEBPACK_IMPORTED_MODULE_1__.nicify)(e));\n        const isAllSame = strings.length > 1 && strings.every(s => s === strings[0]);\n        super(errors, (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n      Error after ${errors.length} attempts.\n      \n      ${isAllSame ? (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n        Attempts 1-${errors.length}:\n          ${strings[0]}\n      ` : strings.map((s, i) => (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n          Attempt ${i + 1}:\n            ${s}\n        `).join(\"\\n\\n\")}\n      `, { cause: errors[errors.length - 1] });\n        this.errors = errors;\n        this.name = \"RetryError\";\n    }\n    get attempts() {\n        return this.errors.length;\n    }\n}\nRetryError.prototype.name = \"RetryError\";\n undefined;\nasync function retry(fn, totalAttempts, { exponentialDelayBase = 1000 } = {}) {\n    const errors = [];\n    for (let i = 0; i < totalAttempts; i++) {\n        const res = await fn(i);\n        if (res.status === \"ok\") {\n            return Object.assign(Result.ok(res.data), { attempts: i + 1 });\n        }\n        else {\n            errors.push(res.error);\n            if (i < totalAttempts - 1) {\n                await (0,_promises__WEBPACK_IMPORTED_MODULE_0__.wait)((Math.random() + 0.5) * exponentialDelayBase * (2 ** i));\n            }\n        }\n    }\n    return Object.assign(Result.error(new RetryError(errors)), { attempts: totalAttempts });\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/stores.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncStore: () => (/* binding */ AsyncStore),\n/* harmony export */   Store: () => (/* binding */ Store),\n/* harmony export */   storeLock: () => (/* binding */ storeLock)\n/* harmony export */ });\n/* harmony import */ var _locks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locks */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/locks.js\");\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _uuids__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uuids */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n\n\n\n\nclass Store {\n    constructor(_value) {\n        this._value = _value;\n        this._callbacks = new Map();\n    }\n    get() {\n        return this._value;\n    }\n    set(value) {\n        const oldValue = this._value;\n        this._value = value;\n        this._callbacks.forEach((callback) => callback(value, oldValue));\n    }\n    update(updater) {\n        const value = updater(this._value);\n        this.set(value);\n        return value;\n    }\n    onChange(callback) {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n        this._callbacks.set(uuid, callback);\n        return {\n            unsubscribe: () => {\n                this._callbacks.delete(uuid);\n            },\n        };\n    }\n    onceChange(callback) {\n        const { unsubscribe } = this.onChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n}\nconst storeLock = new _locks__WEBPACK_IMPORTED_MODULE_0__.ReadWriteLock();\nclass AsyncStore {\n    constructor(...args) {\n        this._mostRecentOkValue = undefined;\n        this._isRejected = false;\n        this._waitingRejectFunctions = new Map();\n        this._callbacks = new Map();\n        this._updateCounter = 0;\n        this._lastSuccessfulUpdate = -1;\n        if (args.length === 0) {\n            this._isAvailable = false;\n        }\n        else {\n            this._isAvailable = true;\n            this._mostRecentOkValue = args[0];\n        }\n    }\n    isAvailable() {\n        return this._isAvailable;\n    }\n    isRejected() {\n        return this._isRejected;\n    }\n    get() {\n        if (this.isRejected()) {\n            return _results__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.error(this._rejectionError);\n        }\n        else if (this.isAvailable()) {\n            return _results__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.ok(this._mostRecentOkValue);\n        }\n        else {\n            return _results__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.pending();\n        }\n    }\n    getOrWait() {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n        if (this.isRejected()) {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_1__.rejected)(this._rejectionError);\n        }\n        else if (this.isAvailable()) {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_1__.resolved)(this._mostRecentOkValue);\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.onceChange((value) => {\n                resolve(value);\n            });\n            this._waitingRejectFunctions.set(uuid, reject);\n        });\n        const withFinally = promise.finally(() => {\n            this._waitingRejectFunctions.delete(uuid);\n        });\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_1__.pending)(withFinally);\n    }\n    _setIfLatest(result, curCounter) {\n        const oldState = this.get();\n        const oldValue = this._mostRecentOkValue;\n        if (curCounter > this._lastSuccessfulUpdate) {\n            switch (result.status) {\n                case \"ok\": {\n                    if (!this._isAvailable || this._isRejected || this._mostRecentOkValue !== result.data) {\n                        this._lastSuccessfulUpdate = curCounter;\n                        this._isAvailable = true;\n                        this._isRejected = false;\n                        this._mostRecentOkValue = result.data;\n                        this._rejectionError = undefined;\n                        this._callbacks.forEach((callback) => callback({\n                            state: this.get(),\n                            oldState,\n                            lastOkValue: oldValue,\n                        }));\n                        return true;\n                    }\n                    return false;\n                }\n                case \"error\": {\n                    this._lastSuccessfulUpdate = curCounter;\n                    this._isAvailable = false;\n                    this._isRejected = true;\n                    this._rejectionError = result.error;\n                    this._waitingRejectFunctions.forEach((reject) => reject(result.error));\n                    this._callbacks.forEach((callback) => callback({\n                        state: this.get(),\n                        oldState,\n                        lastOkValue: oldValue,\n                    }));\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    set(value) {\n        this._setIfLatest(_results__WEBPACK_IMPORTED_MODULE_2__.Result.ok(value), ++this._updateCounter);\n    }\n    update(updater) {\n        const value = updater(this._mostRecentOkValue);\n        this.set(value);\n        return value;\n    }\n    async setAsync(promise) {\n        return await storeLock.withReadLock(async () => {\n            const curCounter = ++this._updateCounter;\n            const result = await _results__WEBPACK_IMPORTED_MODULE_2__.Result.fromPromise(promise);\n            return this._setIfLatest(result, curCounter);\n        });\n    }\n    setUnavailable() {\n        this._lastSuccessfulUpdate = ++this._updateCounter;\n        this._isAvailable = false;\n        this._isRejected = false;\n        this._rejectionError = undefined;\n    }\n    setRejected(error) {\n        this._setIfLatest(_results__WEBPACK_IMPORTED_MODULE_2__.Result.error(error), ++this._updateCounter);\n    }\n    map(mapper) {\n        const store = new AsyncStore();\n        this.onChange((value) => {\n            store.set(mapper(value));\n        });\n        return store;\n    }\n    onChange(callback) {\n        return this.onStateChange(({ state, lastOkValue }) => {\n            if (state.status === \"ok\") {\n                callback(state.data, lastOkValue);\n            }\n        });\n    }\n    onStateChange(callback) {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n        this._callbacks.set(uuid, callback);\n        return {\n            unsubscribe: () => {\n                this._callbacks.delete(uuid);\n            },\n        };\n    }\n    onceChange(callback) {\n        const { unsubscribe } = this.onChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n    onceStateChange(callback) {\n        const { unsubscribe } = this.onStateChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/strings.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deindent: () => (/* binding */ deindent),\n/* harmony export */   deindentTemplate: () => (/* binding */ deindentTemplate),\n/* harmony export */   escapeTemplateLiteral: () => (/* binding */ escapeTemplateLiteral),\n/* harmony export */   extractScopes: () => (/* binding */ extractScopes),\n/* harmony export */   getWhitespacePrefix: () => (/* binding */ getWhitespacePrefix),\n/* harmony export */   getWhitespaceSuffix: () => (/* binding */ getWhitespaceSuffix),\n/* harmony export */   mergeScopeStrings: () => (/* binding */ mergeScopeStrings),\n/* harmony export */   nicify: () => (/* binding */ nicify),\n/* harmony export */   replaceAll: () => (/* binding */ replaceAll),\n/* harmony export */   stringCompare: () => (/* binding */ stringCompare),\n/* harmony export */   templateIdentity: () => (/* binding */ templateIdentity),\n/* harmony export */   trimEmptyLinesEnd: () => (/* binding */ trimEmptyLinesEnd),\n/* harmony export */   trimEmptyLinesStart: () => (/* binding */ trimEmptyLinesStart),\n/* harmony export */   trimLines: () => (/* binding */ trimLines),\n/* harmony export */   typedCapitalize: () => (/* binding */ typedCapitalize),\n/* harmony export */   typedToLowercase: () => (/* binding */ typedToLowercase),\n/* harmony export */   typedToUppercase: () => (/* binding */ typedToUppercase)\n/* harmony export */ });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n\n\n\nfunction typedToLowercase(s) {\n    if (typeof s !== \"string\")\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Expected a string for typedToLowercase\", { s });\n    return s.toLowerCase();\n}\n undefined;\nfunction typedToUppercase(s) {\n    if (typeof s !== \"string\")\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Expected a string for typedToUppercase\", { s });\n    return s.toUpperCase();\n}\n undefined;\nfunction typedCapitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n undefined;\n/**\n * Compares two strings in a way that is not dependent on the current locale.\n */\nfunction stringCompare(a, b) {\n    const cmp = (a, b) => a < b ? -1 : a > b ? 1 : 0;\n    return cmp(a.toUpperCase(), b.toUpperCase()) || cmp(b, a);\n}\n undefined;\n/**\n * Returns all whitespace character at the start of the string.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction getWhitespacePrefix(s) {\n    return s.substring(0, s.length - s.trimStart().length);\n}\n undefined;\n/**\n * Returns all whitespace character at the end of the string.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction getWhitespaceSuffix(s) {\n    return s.substring(s.trimEnd().length);\n}\n undefined;\n/**\n * Returns a string with all empty or whitespace-only lines at the start removed.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimEmptyLinesStart(s) {\n    const lines = s.split(\"\\n\");\n    const firstNonEmptyLineIndex = lines.findIndex((line) => line.trim() !== \"\");\n    // If all lines are empty or whitespace-only, return an empty string\n    if (firstNonEmptyLineIndex === -1)\n        return \"\";\n    return lines.slice(firstNonEmptyLineIndex).join(\"\\n\");\n}\n undefined;\n/**\n * Returns a string with all empty or whitespace-only lines at the end removed.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimEmptyLinesEnd(s) {\n    const lines = s.split(\"\\n\");\n    const lastNonEmptyLineIndex = (0,_arrays__WEBPACK_IMPORTED_MODULE_0__.findLastIndex)(lines, (line) => line.trim() !== \"\");\n    return lines.slice(0, lastNonEmptyLineIndex + 1).join(\"\\n\");\n}\n undefined;\n/**\n * Returns a string with all empty or whitespace-only lines trimmed at the start and end.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimLines(s) {\n    return trimEmptyLinesEnd(trimEmptyLinesStart(s));\n}\n undefined;\n/**\n * A template literal tag that returns the same string as the template literal without a tag.\n *\n * Useful for implementing your own template literal tags.\n */\nfunction templateIdentity(strings, ...values) {\n    if (values.length !== strings.length - 1)\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Invalid number of values; must be one less than strings\", { strings, values });\n    return strings.reduce((result, str, i) => result + str + (values[i] ?? ''), '');\n}\n undefined;\nfunction deindent(strings, ...values) {\n    if (typeof strings === \"string\")\n        return deindent([strings]);\n    return templateIdentity(...deindentTemplate(strings, ...values));\n}\nfunction deindentTemplate(strings, ...values) {\n    if (values.length !== strings.length - 1)\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Invalid number of values; must be one less than strings\", { strings, values });\n    const trimmedStrings = [...strings];\n    trimmedStrings[0] = trimEmptyLinesStart(trimmedStrings[0] + \"+\").slice(0, -1);\n    trimmedStrings[trimmedStrings.length - 1] = trimEmptyLinesEnd(\"+\" + trimmedStrings[trimmedStrings.length - 1]).slice(1);\n    const indentation = trimmedStrings\n        .join(\"${SOME_VALUE}\")\n        .split(\"\\n\")\n        .filter((line) => line.trim() !== \"\")\n        .map((line) => getWhitespacePrefix(line).length)\n        .reduce((min, current) => Math.min(min, current), Infinity);\n    const deindentedStrings = trimmedStrings\n        .map((string, stringIndex) => {\n        return string\n            .split(\"\\n\")\n            .map((line, lineIndex) => stringIndex !== 0 && lineIndex === 0 ? line : line.substring(indentation))\n            .join(\"\\n\");\n    });\n    const indentedValues = values.map((value, i) => {\n        const firstLineIndentation = getWhitespacePrefix(deindentedStrings[i].split(\"\\n\").at(-1));\n        return `${value}`.replaceAll(\"\\n\", `\\n${firstLineIndentation}`);\n    });\n    return [deindentedStrings, ...indentedValues];\n}\n undefined;\nfunction extractScopes(scope, removeDuplicates = true) {\n    // TODO what is this for? can we move this into the OAuth code in the backend?\n    const trimmedString = scope.trim();\n    const scopesArray = trimmedString.split(/\\s+/);\n    const filtered = scopesArray.filter(scope => scope.length > 0);\n    return removeDuplicates ? [...new Set(filtered)] : filtered;\n}\n undefined;\nfunction mergeScopeStrings(...scopes) {\n    // TODO what is this for? can we move this into the OAuth code in the backend?\n    const allScope = scopes.map((s) => extractScopes(s)).flat().join(\" \");\n    return extractScopes(allScope).join(\" \");\n}\n undefined;\nfunction escapeTemplateLiteral(s) {\n    return s.replaceAll(\"`\", \"\\\\`\").replaceAll(\"\\\\\", \"\\\\\\\\\").replaceAll(\"$\", \"\\\\$\");\n}\n undefined;\n/**\n * Some classes have different constructor names in different environments (eg. `Headers` is sometimes called `_Headers`,\n * so we create an object of overrides to handle these cases.\n */\nconst nicifiableClassNameOverrides = new Map(Object.entries({\n    Headers,\n}).map(([k, v]) => [v, k]));\nfunction nicify(value, options = {}) {\n    const fullOptions = {\n        maxDepth: 5,\n        currentIndent: \"\",\n        lineIndent: \"  \",\n        multiline: true,\n        refs: new Map(),\n        path: \"value\",\n        parent: null,\n        overrides: () => null,\n        keyInParent: null,\n        hideFields: [],\n        ...(0,_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)(options),\n    };\n    const { maxDepth, currentIndent, lineIndent, multiline, refs, path, overrides, hideFields, } = fullOptions;\n    const nl = `\\n${currentIndent}`;\n    const overrideResult = overrides(value, options);\n    if (overrideResult !== null)\n        return overrideResult;\n    if ([\"function\", \"object\", \"symbol\"].includes(typeof value) && value !== null) {\n        if (refs.has(value)) {\n            return `Ref<${refs.get(value)}>`;\n        }\n        refs.set(value, path);\n    }\n    const newOptions = {\n        maxDepth: maxDepth - 1,\n        currentIndent,\n        lineIndent,\n        multiline,\n        refs,\n        path: path + \"->[unknown property]\",\n        overrides,\n        parent: { value, options: fullOptions },\n        keyInParent: null,\n        hideFields: [],\n    };\n    const nestedNicify = (newValue, newPath, keyInParent, options = {}) => {\n        return nicify(newValue, {\n            ...newOptions,\n            path: newPath,\n            currentIndent: currentIndent + lineIndent,\n            keyInParent,\n            ...options,\n        });\n    };\n    switch (typeof value) {\n        case \"boolean\":\n        case \"number\": {\n            return JSON.stringify(value);\n        }\n        case \"string\": {\n            const isDeindentable = (v) => deindent(v) === v && v.includes(\"\\n\");\n            const wrapInDeindent = (v) => deindent `\n        deindent\\`\n        ${currentIndent + lineIndent}${escapeTemplateLiteral(v).replaceAll(\"\\n\", nl + lineIndent)}\n        ${currentIndent}\\`\n      `;\n            if (isDeindentable(value)) {\n                return wrapInDeindent(value);\n            }\n            else if (value.endsWith(\"\\n\") && isDeindentable(value.slice(0, -1))) {\n                return wrapInDeindent(value.slice(0, -1)) + ' + \"\\\\n\"';\n            }\n            else {\n                return JSON.stringify(value);\n            }\n        }\n        case \"undefined\": {\n            return \"undefined\";\n        }\n        case \"symbol\": {\n            return value.toString();\n        }\n        case \"bigint\": {\n            return `${value}n`;\n        }\n        case \"function\": {\n            if (value.name)\n                return `function ${value.name}(...) { ... }`;\n            return `(...) => { ... }`;\n        }\n        case \"object\": {\n            if (value === null)\n                return \"null\";\n            if (Array.isArray(value)) {\n                const extraLines = getNicifiedObjectExtraLines(value);\n                const resValueLength = value.length + extraLines.length;\n                if (maxDepth <= 0 && resValueLength === 0)\n                    return \"[...]\";\n                const resValues = value.map((v, i) => nestedNicify(v, `${path}[${i}]`, i));\n                resValues.push(...extraLines);\n                if (resValues.length !== resValueLength)\n                    throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues, resValueLength });\n                const shouldIndent = resValues.length > 4 || resValues.some(x => (resValues.length > 1 && x.length > 4) || x.includes(\"\\n\"));\n                if (shouldIndent) {\n                    return `[${nl}${resValues.map(x => `${lineIndent}${x},${nl}`).join(\"\")}]`;\n                }\n                else {\n                    return `[${resValues.join(\", \")}]`;\n                }\n            }\n            if (value instanceof URL) {\n                return `URL(${nestedNicify(value.toString(), `${path}.toString()`, null)})`;\n            }\n            if (ArrayBuffer.isView(value)) {\n                return `${value.constructor.name}([${value.toString()}])`;\n            }\n            if (value instanceof Error) {\n                let stack = value.stack ?? \"\";\n                const toString = value.toString();\n                if (!stack.startsWith(toString))\n                    stack = `${toString}\\n${stack}`; // some browsers don't include the error message in the stack, some do\n                stack = stack.trimEnd();\n                stack = stack.replace(/\\n\\s+/g, `\\n${lineIndent}${lineIndent}`);\n                stack = stack.replace(\"\\n\", `\\n${lineIndent}Stack:\\n`);\n                if (Object.keys(value).length > 0) {\n                    stack += `\\n${lineIndent}Extra properties: ${nestedNicify(Object.fromEntries(Object.entries(value)), path, null)}`;\n                }\n                if (value.cause) {\n                    stack += `\\n${lineIndent}Cause:\\n${lineIndent}${lineIndent}${nestedNicify(value.cause, path, null, { currentIndent: currentIndent + lineIndent + lineIndent })}`;\n                }\n                stack = stack.replaceAll(\"\\n\", `\\n${currentIndent}`);\n                return stack;\n            }\n            const constructorName = [null, Object.prototype].includes(Object.getPrototypeOf(value)) ? null : (nicifiableClassNameOverrides.get(value.constructor) ?? value.constructor.name);\n            const constructorString = constructorName ? `${constructorName} ` : \"\";\n            const entries = getNicifiableEntries(value).filter(([k]) => !hideFields.includes(k));\n            const extraLines = [\n                ...getNicifiedObjectExtraLines(value),\n                ...hideFields.length > 0 ? [`<some fields may have been hidden>`] : [],\n            ];\n            const resValueLength = entries.length + extraLines.length;\n            if (resValueLength === 0)\n                return `${constructorString}{}`;\n            if (maxDepth <= 0)\n                return `${constructorString}{ ... }`;\n            const resValues = entries.map(([k, v], keyIndex) => {\n                const keyNicified = nestedNicify(k, `Object.keys(${path})[${keyIndex}]`, null);\n                const keyInObjectLiteral = typeof k === \"string\" ? nicifyPropertyString(k) : `[${keyNicified}]`;\n                if (typeof v === \"function\" && v.name === k) {\n                    return `${keyInObjectLiteral}(...): { ... }`;\n                }\n                else {\n                    return `${keyInObjectLiteral}: ${nestedNicify(v, `${path}[${keyNicified}]`, k)}`;\n                }\n            });\n            resValues.push(...extraLines);\n            if (resValues.length !== resValueLength)\n                throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues, resValueLength });\n            const shouldIndent = resValues.length > 1 || resValues.some(x => x.includes(\"\\n\"));\n            if (resValues.length === 0)\n                return `${constructorString}{}`;\n            if (shouldIndent) {\n                return `${constructorString}{${nl}${resValues.map(x => `${lineIndent}${x},${nl}`).join(\"\")}}`;\n            }\n            else {\n                return `${constructorString}{ ${resValues.join(\", \")} }`;\n            }\n        }\n        default: {\n            return `${typeof value}<${value}>`;\n        }\n    }\n}\nfunction replaceAll(input, searchValue, replaceValue) {\n    if (searchValue === \"\")\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"replaceAll: searchValue is empty\");\n    return input.split(searchValue).join(replaceValue);\n}\n undefined;\nfunction nicifyPropertyString(str) {\n    return JSON.stringify(str);\n}\n undefined;\nfunction getNicifiableKeys(value) {\n    const overridden = (\"getNicifiableKeys\" in value ? value.getNicifiableKeys?.bind(value) : null)?.();\n    if (overridden != null)\n        return overridden;\n    const keys = Object.keys(value).sort();\n    return (0,_arrays__WEBPACK_IMPORTED_MODULE_0__.unique)(keys);\n}\n undefined;\nfunction getNicifiableEntries(value) {\n    const recordLikes = [Headers];\n    function isRecordLike(value) {\n        return recordLikes.some(x => value instanceof x);\n    }\n    if (isRecordLike(value)) {\n        return [...value.entries()].sort(([a], [b]) => stringCompare(`${a}`, `${b}`));\n    }\n    const keys = getNicifiableKeys(value);\n    return keys.map((k) => [k, value[k]]);\n}\nfunction getNicifiedObjectExtraLines(value) {\n    return (\"getNicifiedObjectExtraLines\" in value ? value.getNicifiedObjectExtraLines : null)?.() ?? [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9zdHJpbmdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWlEO0FBQ0Y7QUFDSDtBQUNyQztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQiw2Q0FBNkMsR0FBRztBQUNyRjtBQUNBO0FBQ0EsVUFTRTtBQUNLO0FBQ1A7QUFDQSxrQkFBa0Isd0RBQW1CLDZDQUE2QyxHQUFHO0FBQ3JGO0FBQ0E7QUFDQSxVQVNFO0FBQ0s7QUFDUDtBQUNBO0FBQ0EsVUFRRTtBQUNGO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsVUFzQkU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFTRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxVQVNFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQVlFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQ0FBa0Msc0RBQWE7QUFDL0M7QUFDQTtBQUNBLFVBWUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFXRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQiw0QkFBNEIsa0NBQWtDLGlCQUFpQjtBQUNwSDtBQUNBO0FBQ0EsVUFlRTtBQUNLO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQiw0QkFBNEIsa0NBQWtDLGlCQUFpQjtBQUNwSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQkFBa0IsTUFBTSx3QkFBd0IscUJBQXFCO0FBQ3JFLEtBQUs7QUFDTDtBQUNBO0FBQ0EsVUFpREU7QUFDSztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBaUJFO0FBQ0s7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBZUU7QUFDSztBQUNQO0FBQ0E7QUFDQSxVQW9DRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTSxtQ0FBbUM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQWU7QUFDMUI7QUFDQSxZQUFZLHFGQUFxRjtBQUNqRyxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGdCQUFnQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZCQUE2QjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxzRUFBc0U7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSwyQkFBMkIsRUFBRTtBQUN2QyxVQUFVLGNBQWM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLE1BQU07QUFDNUI7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFdBQVcsUUFBUSxLQUFLO0FBQzNELCtCQUErQixLQUFLO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxLQUFLLEdBQUcsRUFBRTtBQUNuRjtBQUNBO0FBQ0EsOEJBQThCLHdEQUFtQiw0REFBNEQsa0NBQWtDO0FBQy9JO0FBQ0E7QUFDQSwrQkFBK0IsR0FBRyxFQUFFLHNCQUFzQixXQUFXLEVBQUUsRUFBRSxHQUFHLEdBQUcsWUFBWTtBQUMzRjtBQUNBO0FBQ0EsK0JBQStCLHFCQUFxQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDLEtBQUssb0JBQW9CO0FBQ3pGO0FBQ0E7QUFDQSwwQkFBMEIsdUJBQXVCLElBQUksaUJBQWlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsU0FBUyxJQUFJLE1BQU0sR0FBRztBQUNyRDtBQUNBLHFEQUFxRCxXQUFXLEVBQUUsV0FBVztBQUM3RSxpREFBaUQsV0FBVztBQUM1RDtBQUNBLGtDQUFrQyxXQUFXLG9CQUFvQixvRUFBb0U7QUFDckk7QUFDQTtBQUNBLGtDQUFrQyxXQUFXLFVBQVUsV0FBVyxFQUFFLFdBQVcsRUFBRSx3Q0FBd0Msd0RBQXdELEVBQUU7QUFDbkw7QUFDQSxvREFBb0QsY0FBYztBQUNsRTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsaUJBQWlCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9CQUFvQjtBQUM5QztBQUNBLDBCQUEwQixvQkFBb0IsS0FBSztBQUNuRDtBQUNBLG1FQUFtRSxLQUFLLElBQUksU0FBUztBQUNyRixpR0FBaUcsWUFBWTtBQUM3RztBQUNBLDhCQUE4QixtQkFBbUIsU0FBUyxLQUFLO0FBQy9EO0FBQ0E7QUFDQSw4QkFBOEIsbUJBQW1CLElBQUksbUJBQW1CLEtBQUssR0FBRyxZQUFZLE9BQU87QUFDbkc7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDBCQUEwQix3REFBbUIsNERBQTRELGtDQUFrQztBQUMzSTtBQUNBO0FBQ0EsMEJBQTBCLG9CQUFvQjtBQUM5QztBQUNBLDBCQUEwQixtQkFBbUIsRUFBRSxHQUFHLEVBQUUsc0JBQXNCLFdBQVcsRUFBRSxFQUFFLEdBQUcsR0FBRyxhQUFhO0FBQzVHO0FBQ0E7QUFDQSwwQkFBMEIsb0JBQW9CLEVBQUUsdUJBQXVCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixhQUFhLEdBQUcsTUFBTTtBQUM1QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQjtBQUNyQztBQUNBO0FBQ0EsVUFTRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLFVBaUJFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0NBQU07QUFDakI7QUFDQSxVQWNFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLEVBQUUsTUFBTSxFQUFFO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXHN0cmluZ3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmluZExhc3RJbmRleCwgdW5pcXVlIH0gZnJvbSBcIi4vYXJyYXlzXCI7XG5pbXBvcnQgeyBTdGFja0Fzc2VydGlvbkVycm9yIH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgeyBmaWx0ZXJVbmRlZmluZWQgfSBmcm9tIFwiLi9vYmplY3RzXCI7XG5leHBvcnQgZnVuY3Rpb24gdHlwZWRUb0xvd2VyY2FzZShzKSB7XG4gICAgaWYgKHR5cGVvZiBzICE9PSBcInN0cmluZ1wiKVxuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkV4cGVjdGVkIGEgc3RyaW5nIGZvciB0eXBlZFRvTG93ZXJjYXNlXCIsIHsgcyB9KTtcbiAgICByZXR1cm4gcy50b0xvd2VyQ2FzZSgpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwidHlwZWRUb0xvd2VyY2FzZVwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIGV4cGVjdCh0eXBlZFRvTG93ZXJjYXNlKFwiXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdCh0eXBlZFRvTG93ZXJjYXNlKFwiSEVMTE9cIikpLnRvQmUoXCJoZWxsb1wiKTtcbiAgICBleHBlY3QodHlwZWRUb0xvd2VyY2FzZShcIkhlbGxvIFdvcmxkXCIpKS50b0JlKFwiaGVsbG8gd29ybGRcIik7XG4gICAgZXhwZWN0KHR5cGVkVG9Mb3dlcmNhc2UoXCJoZWxsb1wiKSkudG9CZShcImhlbGxvXCIpO1xuICAgIGV4cGVjdCh0eXBlZFRvTG93ZXJjYXNlKFwiMTIzXCIpKS50b0JlKFwiMTIzXCIpO1xuICAgIGV4cGVjdCh0eXBlZFRvTG93ZXJjYXNlKFwiTUlYRUQxMjNjYXNlXCIpKS50b0JlKFwibWl4ZWQxMjNjYXNlXCIpO1xuICAgIGV4cGVjdCh0eXBlZFRvTG93ZXJjYXNlKFwiU3BlY2lhbEBDaGFycyFcIikpLnRvQmUoXCJzcGVjaWFsQGNoYXJzIVwiKTtcbiAgICBleHBlY3QoKCkgPT4gdHlwZWRUb0xvd2VyY2FzZSgxMjMpKS50b1Rocm93KFwiRXhwZWN0ZWQgYSBzdHJpbmcgZm9yIHR5cGVkVG9Mb3dlcmNhc2VcIik7XG59KTtcbmV4cG9ydCBmdW5jdGlvbiB0eXBlZFRvVXBwZXJjYXNlKHMpIHtcbiAgICBpZiAodHlwZW9mIHMgIT09IFwic3RyaW5nXCIpXG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiRXhwZWN0ZWQgYSBzdHJpbmcgZm9yIHR5cGVkVG9VcHBlcmNhc2VcIiwgeyBzIH0pO1xuICAgIHJldHVybiBzLnRvVXBwZXJDYXNlKCk7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJ0eXBlZFRvVXBwZXJjYXNlXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHR5cGVkVG9VcHBlcmNhc2UoXCJcIikpLnRvQmUoXCJcIik7XG4gICAgZXhwZWN0KHR5cGVkVG9VcHBlcmNhc2UoXCJoZWxsb1wiKSkudG9CZShcIkhFTExPXCIpO1xuICAgIGV4cGVjdCh0eXBlZFRvVXBwZXJjYXNlKFwiSGVsbG8gV29ybGRcIikpLnRvQmUoXCJIRUxMTyBXT1JMRFwiKTtcbiAgICBleHBlY3QodHlwZWRUb1VwcGVyY2FzZShcIkhFTExPXCIpKS50b0JlKFwiSEVMTE9cIik7XG4gICAgZXhwZWN0KHR5cGVkVG9VcHBlcmNhc2UoXCIxMjNcIikpLnRvQmUoXCIxMjNcIik7XG4gICAgZXhwZWN0KHR5cGVkVG9VcHBlcmNhc2UoXCJtaXhlZDEyM0Nhc2VcIikpLnRvQmUoXCJNSVhFRDEyM0NBU0VcIik7XG4gICAgZXhwZWN0KHR5cGVkVG9VcHBlcmNhc2UoXCJzcGVjaWFsQGNoYXJzIVwiKSkudG9CZShcIlNQRUNJQUxAQ0hBUlMhXCIpO1xuICAgIGV4cGVjdCgoKSA9PiB0eXBlZFRvVXBwZXJjYXNlKDEyMykpLnRvVGhyb3coXCJFeHBlY3RlZCBhIHN0cmluZyBmb3IgdHlwZWRUb1VwcGVyY2FzZVwiKTtcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIHR5cGVkQ2FwaXRhbGl6ZShzKSB7XG4gICAgcmV0dXJuIHMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzLnNsaWNlKDEpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwidHlwZWRDYXBpdGFsaXplXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHR5cGVkQ2FwaXRhbGl6ZShcIlwiKSkudG9CZShcIlwiKTtcbiAgICBleHBlY3QodHlwZWRDYXBpdGFsaXplKFwiaGVsbG9cIikpLnRvQmUoXCJIZWxsb1wiKTtcbiAgICBleHBlY3QodHlwZWRDYXBpdGFsaXplKFwiaGVsbG8gd29ybGRcIikpLnRvQmUoXCJIZWxsbyB3b3JsZFwiKTtcbiAgICBleHBlY3QodHlwZWRDYXBpdGFsaXplKFwiSEVMTE9cIikpLnRvQmUoXCJIRUxMT1wiKTtcbiAgICBleHBlY3QodHlwZWRDYXBpdGFsaXplKFwiMTIzdGVzdFwiKSkudG9CZShcIjEyM3Rlc3RcIik7XG4gICAgZXhwZWN0KHR5cGVkQ2FwaXRhbGl6ZShcImFscmVhZHkgQ2FwaXRhbGl6ZWRcIikpLnRvQmUoXCJBbHJlYWR5IENhcGl0YWxpemVkXCIpO1xuICAgIGV4cGVjdCh0eXBlZENhcGl0YWxpemUoXCJoXCIpKS50b0JlKFwiSFwiKTtcbn0pO1xuLyoqXG4gKiBDb21wYXJlcyB0d28gc3RyaW5ncyBpbiBhIHdheSB0aGF0IGlzIG5vdCBkZXBlbmRlbnQgb24gdGhlIGN1cnJlbnQgbG9jYWxlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nQ29tcGFyZShhLCBiKSB7XG4gICAgY29uc3QgY21wID0gKGEsIGIpID0+IGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwO1xuICAgIHJldHVybiBjbXAoYS50b1VwcGVyQ2FzZSgpLCBiLnRvVXBwZXJDYXNlKCkpIHx8IGNtcChiLCBhKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcInN0cmluZ0NvbXBhcmVcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICAvLyBFcXVhbCBzdHJpbmdzXG4gICAgZXhwZWN0KHN0cmluZ0NvbXBhcmUoXCJhXCIsIFwiYVwiKSkudG9CZSgwKTtcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcIlwiLCBcIlwiKSkudG9CZSgwKTtcbiAgICAvLyBDYXNlIGNvbXBhcmlzb24gLSBub3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBpcyBOT1QgY2FzZS1pbnNlbnNpdGl2ZVxuICAgIC8vIEl0IGNvbXBhcmVzIHVwcGVyY2FzZSB2ZXJzaW9ucyBmaXJzdCwgdGhlbiBvcmlnaW5hbCBzdHJpbmdzXG4gICAgZXhwZWN0KHN0cmluZ0NvbXBhcmUoXCJhXCIsIFwiQVwiKSkudG9CZSgtMSk7IC8vIGxvd2VyY2FzZSBjb21lcyBhZnRlciB1cHBlcmNhc2VcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcIkFcIiwgXCJhXCIpKS50b0JlKDEpOyAvLyB1cHBlcmNhc2UgY29tZXMgYmVmb3JlIGxvd2VyY2FzZVxuICAgIGV4cGVjdChzdHJpbmdDb21wYXJlKFwiYWJjXCIsIFwiQUJDXCIpKS50b0JlKC0xKTtcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcIkFCQ1wiLCBcImFiY1wiKSkudG9CZSgxKTtcbiAgICAvLyBEaWZmZXJlbnQgc3RyaW5nc1xuICAgIGV4cGVjdChzdHJpbmdDb21wYXJlKFwiYVwiLCBcImJcIikpLnRvQmUoLTEpO1xuICAgIGV4cGVjdChzdHJpbmdDb21wYXJlKFwiYlwiLCBcImFcIikpLnRvQmUoMSk7XG4gICAgLy8gU3RyaW5ncyB3aXRoIGRpZmZlcmVudCBsZW5ndGhzXG4gICAgZXhwZWN0KHN0cmluZ0NvbXBhcmUoXCJhYmNcIiwgXCJhYmNkXCIpKS50b0JlKC0xKTtcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcImFiY2RcIiwgXCJhYmNcIikpLnRvQmUoMSk7XG4gICAgLy8gU3RyaW5ncyB3aXRoIG51bWJlcnNcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcImExXCIsIFwiYTJcIikpLnRvQmUoLTEpO1xuICAgIGV4cGVjdChzdHJpbmdDb21wYXJlKFwiYTEwXCIsIFwiYTJcIikpLnRvQmUoLTEpO1xuICAgIC8vIFN0cmluZ3Mgd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnNcbiAgICBleHBlY3Qoc3RyaW5nQ29tcGFyZShcImFcIiwgXCJhIVwiKSkudG9CZSgtMSk7XG4gICAgZXhwZWN0KHN0cmluZ0NvbXBhcmUoXCJhIVwiLCBcImFcIikpLnRvQmUoMSk7XG59KTtcbi8qKlxuICogUmV0dXJucyBhbGwgd2hpdGVzcGFjZSBjaGFyYWN0ZXIgYXQgdGhlIHN0YXJ0IG9mIHRoZSBzdHJpbmcuXG4gKlxuICogVXNlcyB0aGUgc2FtZSBkZWZpbml0aW9uIGZvciB3aGl0ZXNwYWNlIGFzIGBTdHJpbmcucHJvdG90eXBlLnRyaW0oKWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXaGl0ZXNwYWNlUHJlZml4KHMpIHtcbiAgICByZXR1cm4gcy5zdWJzdHJpbmcoMCwgcy5sZW5ndGggLSBzLnRyaW1TdGFydCgpLmxlbmd0aCk7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJnZXRXaGl0ZXNwYWNlUHJlZml4XCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCJcIikpLnRvQmUoXCJcIik7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCJoZWxsb1wiKSkudG9CZShcIlwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVByZWZpeChcIiBoZWxsb1wiKSkudG9CZShcIiBcIik7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCIgIGhlbGxvXCIpKS50b0JlKFwiICBcIik7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCJcXHRoZWxsb1wiKSkudG9CZShcIlxcdFwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVByZWZpeChcIlxcbiBoZWxsb1wiKSkudG9CZShcIlxcbiBcIik7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCIgICBcIikpLnRvQmUoXCIgICBcIik7XG4gICAgZXhwZWN0KGdldFdoaXRlc3BhY2VQcmVmaXgoXCIgXFx0XFxuXFxyXCIpKS50b0JlKFwiIFxcdFxcblxcclwiKTtcbn0pO1xuLyoqXG4gKiBSZXR1cm5zIGFsbCB3aGl0ZXNwYWNlIGNoYXJhY3RlciBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmcuXG4gKlxuICogVXNlcyB0aGUgc2FtZSBkZWZpbml0aW9uIGZvciB3aGl0ZXNwYWNlIGFzIGBTdHJpbmcucHJvdG90eXBlLnRyaW0oKWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXaGl0ZXNwYWNlU3VmZml4KHMpIHtcbiAgICByZXR1cm4gcy5zdWJzdHJpbmcocy50cmltRW5kKCkubGVuZ3RoKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImdldFdoaXRlc3BhY2VTdWZmaXhcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcIlwiKSkudG9CZShcIlwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcImhlbGxvXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdChnZXRXaGl0ZXNwYWNlU3VmZml4KFwiaGVsbG8gXCIpKS50b0JlKFwiIFwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcImhlbGxvICBcIikpLnRvQmUoXCIgIFwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcImhlbGxvXFx0XCIpKS50b0JlKFwiXFx0XCIpO1xuICAgIGV4cGVjdChnZXRXaGl0ZXNwYWNlU3VmZml4KFwiaGVsbG8gXFxuXCIpKS50b0JlKFwiIFxcblwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcIiAgIFwiKSkudG9CZShcIiAgIFwiKTtcbiAgICBleHBlY3QoZ2V0V2hpdGVzcGFjZVN1ZmZpeChcIiBcXHRcXG5cXHJcIikpLnRvQmUoXCIgXFx0XFxuXFxyXCIpO1xufSk7XG4vKipcbiAqIFJldHVybnMgYSBzdHJpbmcgd2l0aCBhbGwgZW1wdHkgb3Igd2hpdGVzcGFjZS1vbmx5IGxpbmVzIGF0IHRoZSBzdGFydCByZW1vdmVkLlxuICpcbiAqIFVzZXMgdGhlIHNhbWUgZGVmaW5pdGlvbiBmb3Igd2hpdGVzcGFjZSBhcyBgU3RyaW5nLnByb3RvdHlwZS50cmltKClgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJpbUVtcHR5TGluZXNTdGFydChzKSB7XG4gICAgY29uc3QgbGluZXMgPSBzLnNwbGl0KFwiXFxuXCIpO1xuICAgIGNvbnN0IGZpcnN0Tm9uRW1wdHlMaW5lSW5kZXggPSBsaW5lcy5maW5kSW5kZXgoKGxpbmUpID0+IGxpbmUudHJpbSgpICE9PSBcIlwiKTtcbiAgICAvLyBJZiBhbGwgbGluZXMgYXJlIGVtcHR5IG9yIHdoaXRlc3BhY2Utb25seSwgcmV0dXJuIGFuIGVtcHR5IHN0cmluZ1xuICAgIGlmIChmaXJzdE5vbkVtcHR5TGluZUluZGV4ID09PSAtMSlcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgcmV0dXJuIGxpbmVzLnNsaWNlKGZpcnN0Tm9uRW1wdHlMaW5lSW5kZXgpLmpvaW4oXCJcXG5cIik7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJ0cmltRW1wdHlMaW5lc1N0YXJ0XCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzU3RhcnQoXCJcIikpLnRvQmUoXCJcIik7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzU3RhcnQoXCJoZWxsb1wiKSkudG9CZShcImhlbGxvXCIpO1xuICAgIGV4cGVjdCh0cmltRW1wdHlMaW5lc1N0YXJ0KFwiXFxuaGVsbG9cIikpLnRvQmUoXCJoZWxsb1wiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNTdGFydChcIlxcblxcbmhlbGxvXCIpKS50b0JlKFwiaGVsbG9cIik7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzU3RhcnQoXCIgIFxcblxcdFxcbmhlbGxvXCIpKS50b0JlKFwiaGVsbG9cIik7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzU3RhcnQoXCJcXG5cXG5oZWxsb1xcbndvcmxkXCIpKS50b0JlKFwiaGVsbG9cXG53b3JsZFwiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNTdGFydChcImhlbGxvXFxuXFxud29ybGRcIikpLnRvQmUoXCJoZWxsb1xcblxcbndvcmxkXCIpO1xuICAgIGV4cGVjdCh0cmltRW1wdHlMaW5lc1N0YXJ0KFwiaGVsbG9cXG53b3JsZFxcblwiKSkudG9CZShcImhlbGxvXFxud29ybGRcXG5cIik7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzU3RhcnQoXCJcXG4gIFxcblxcbmhlbGxvXFxuICBcXG53b3JsZFwiKSkudG9CZShcImhlbGxvXFxuICBcXG53b3JsZFwiKTtcbiAgICAvLyBFZGdlIGNhc2U6IGFsbCBsaW5lcyBhcmUgZW1wdHlcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNTdGFydChcIlxcblxcbiAgXFxuXFx0XCIpKS50b0JlKFwiXCIpO1xufSk7XG4vKipcbiAqIFJldHVybnMgYSBzdHJpbmcgd2l0aCBhbGwgZW1wdHkgb3Igd2hpdGVzcGFjZS1vbmx5IGxpbmVzIGF0IHRoZSBlbmQgcmVtb3ZlZC5cbiAqXG4gKiBVc2VzIHRoZSBzYW1lIGRlZmluaXRpb24gZm9yIHdoaXRlc3BhY2UgYXMgYFN0cmluZy5wcm90b3R5cGUudHJpbSgpYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyaW1FbXB0eUxpbmVzRW5kKHMpIHtcbiAgICBjb25zdCBsaW5lcyA9IHMuc3BsaXQoXCJcXG5cIik7XG4gICAgY29uc3QgbGFzdE5vbkVtcHR5TGluZUluZGV4ID0gZmluZExhc3RJbmRleChsaW5lcywgKGxpbmUpID0+IGxpbmUudHJpbSgpICE9PSBcIlwiKTtcbiAgICByZXR1cm4gbGluZXMuc2xpY2UoMCwgbGFzdE5vbkVtcHR5TGluZUluZGV4ICsgMSkuam9pbihcIlxcblwiKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcInRyaW1FbXB0eUxpbmVzRW5kXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzRW5kKFwiXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdCh0cmltRW1wdHlMaW5lc0VuZChcImhlbGxvXCIpKS50b0JlKFwiaGVsbG9cIik7XG4gICAgZXhwZWN0KHRyaW1FbXB0eUxpbmVzRW5kKFwiaGVsbG9cXG5cIikpLnRvQmUoXCJoZWxsb1wiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJoZWxsb1xcblxcblwiKSkudG9CZShcImhlbGxvXCIpO1xuICAgIGV4cGVjdCh0cmltRW1wdHlMaW5lc0VuZChcImhlbGxvXFxuICBcXG5cXHRcIikpLnRvQmUoXCJoZWxsb1wiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJoZWxsb1xcbndvcmxkXFxuXFxuXCIpKS50b0JlKFwiaGVsbG9cXG53b3JsZFwiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJoZWxsb1xcblxcbndvcmxkXCIpKS50b0JlKFwiaGVsbG9cXG5cXG53b3JsZFwiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJcXG5oZWxsb1xcbndvcmxkXCIpKS50b0JlKFwiXFxuaGVsbG9cXG53b3JsZFwiKTtcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJoZWxsb1xcbiAgXFxud29ybGRcXG5cXG4gIFwiKSkudG9CZShcImhlbGxvXFxuICBcXG53b3JsZFwiKTtcbiAgICAvLyBFZGdlIGNhc2U6IGFsbCBsaW5lcyBhcmUgZW1wdHlcbiAgICBleHBlY3QodHJpbUVtcHR5TGluZXNFbmQoXCJcXG5cXG4gIFxcblxcdFwiKSkudG9CZShcIlwiKTtcbn0pO1xuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHdpdGggYWxsIGVtcHR5IG9yIHdoaXRlc3BhY2Utb25seSBsaW5lcyB0cmltbWVkIGF0IHRoZSBzdGFydCBhbmQgZW5kLlxuICpcbiAqIFVzZXMgdGhlIHNhbWUgZGVmaW5pdGlvbiBmb3Igd2hpdGVzcGFjZSBhcyBgU3RyaW5nLnByb3RvdHlwZS50cmltKClgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJpbUxpbmVzKHMpIHtcbiAgICByZXR1cm4gdHJpbUVtcHR5TGluZXNFbmQodHJpbUVtcHR5TGluZXNTdGFydChzKSk7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJ0cmltTGluZXNcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICBleHBlY3QodHJpbUxpbmVzKFwiXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdCh0cmltTGluZXMoXCIgXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdCh0cmltTGluZXMoXCIgXFxuIFwiKSkudG9CZShcIlwiKTtcbiAgICBleHBlY3QodHJpbUxpbmVzKFwiIGFiYyBcIikpLnRvQmUoXCIgYWJjIFwiKTtcbiAgICBleHBlY3QodHJpbUxpbmVzKFwiXFxuICBcXG5MaW5lMVxcbkxpbmUyXFxuIFxcblwiKSkudG9CZShcIkxpbmUxXFxuTGluZTJcIik7XG4gICAgZXhwZWN0KHRyaW1MaW5lcyhcIkxpbmUxXFxuICAgXFxuTGluZTJcIikpLnRvQmUoXCJMaW5lMVxcbiAgIFxcbkxpbmUyXCIpO1xuICAgIGV4cGVjdCh0cmltTGluZXMoXCIgXFxuICAgIFxcblxcdFwiKSkudG9CZShcIlwiKTtcbiAgICBleHBlY3QodHJpbUxpbmVzKFwiICAgSGVsbG8gV29ybGRcIikpLnRvQmUoXCIgICBIZWxsbyBXb3JsZFwiKTtcbiAgICBleHBlY3QodHJpbUxpbmVzKFwiXFxuXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdCh0cmltTGluZXMoXCJcXHQgXFxuXFx0XFx0TGluZTEgXFxuIFxcbkxpbmUyXFx0XFx0XFxuXFx0ICBcIikpLnRvQmUoXCJcXHRcXHRMaW5lMSBcXG4gXFxuTGluZTJcXHRcXHRcIik7XG59KTtcbi8qKlxuICogQSB0ZW1wbGF0ZSBsaXRlcmFsIHRhZyB0aGF0IHJldHVybnMgdGhlIHNhbWUgc3RyaW5nIGFzIHRoZSB0ZW1wbGF0ZSBsaXRlcmFsIHdpdGhvdXQgYSB0YWcuXG4gKlxuICogVXNlZnVsIGZvciBpbXBsZW1lbnRpbmcgeW91ciBvd24gdGVtcGxhdGUgbGl0ZXJhbCB0YWdzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGVtcGxhdGVJZGVudGl0eShzdHJpbmdzLCAuLi52YWx1ZXMpIHtcbiAgICBpZiAodmFsdWVzLmxlbmd0aCAhPT0gc3RyaW5ncy5sZW5ndGggLSAxKVxuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkludmFsaWQgbnVtYmVyIG9mIHZhbHVlczsgbXVzdCBiZSBvbmUgbGVzcyB0aGFuIHN0cmluZ3NcIiwgeyBzdHJpbmdzLCB2YWx1ZXMgfSk7XG4gICAgcmV0dXJuIHN0cmluZ3MucmVkdWNlKChyZXN1bHQsIHN0ciwgaSkgPT4gcmVzdWx0ICsgc3RyICsgKHZhbHVlc1tpXSA/PyAnJyksICcnKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcInRlbXBsYXRlSWRlbnRpdHlcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICBleHBlY3QodGVtcGxhdGVJZGVudGl0eSBgSGVsbG8gV29ybGRgKS50b0JlKFwiSGVsbG8gV29ybGRcIik7XG4gICAgZXhwZWN0KHRlbXBsYXRlSWRlbnRpdHkgYCR7XCJIZWxsb1wifWApLnRvQmUoXCJIZWxsb1wiKTtcbiAgICBjb25zdCBncmVldGluZyA9IFwiSGVsbG9cIjtcbiAgICBjb25zdCBzdWJqZWN0ID0gXCJXb3JsZFwiO1xuICAgIGV4cGVjdCh0ZW1wbGF0ZUlkZW50aXR5IGAke2dyZWV0aW5nfSwgJHtzdWJqZWN0fSFgKS50b0JlKFwiSGVsbG8sIFdvcmxkIVwiKTtcbiAgICBleHBlY3QodGVtcGxhdGVJZGVudGl0eSBgJHtcIkFcIn0ke1wiQlwifSR7XCJDXCJ9YCkudG9CZShcIkFCQ1wiKTtcbiAgICBleHBlY3QodGVtcGxhdGVJZGVudGl0eSBgU3RhcnQke1wiXCJ9TWlkZGxlJHtcIlwifUVuZGApLnRvQmUoXCJTdGFydE1pZGRsZUVuZFwiKTtcbiAgICBleHBlY3QodGVtcGxhdGVJZGVudGl0eSBgYCkudG9CZShcIlwiKTtcbiAgICBleHBlY3QodGVtcGxhdGVJZGVudGl0eSBgTGluZTFcbkxpbmUyYCkudG9CZShcIkxpbmUxXFxuTGluZTJcIik7XG4gICAgZXhwZWN0KHRlbXBsYXRlSWRlbnRpdHkoW1wiYSBcIiwgXCIgc2NpZW50aWZpYyBcIiwgXCJndW5cIl0sIFwiY2VydGFpblwiLCBcInJhaWxcIikpLnRvQmUoXCJhIGNlcnRhaW4gc2NpZW50aWZpYyByYWlsZ3VuXCIpO1xuICAgIGV4cGVjdCh0ZW1wbGF0ZUlkZW50aXR5KFtcIm9ubHkgb25lIHBhcnRcIl0pKS50b0JlKFwib25seSBvbmUgcGFydFwiKTtcbiAgICBleHBlY3QoKCkgPT4gdGVtcGxhdGVJZGVudGl0eShbXCJhIFwiLCBcImJcIiwgXCJjXCJdLCBcIm9ubHkgb25lXCIpKS50b1Rocm93KFwiSW52YWxpZCBudW1iZXIgb2YgdmFsdWVzXCIpO1xuICAgIGV4cGVjdCgoKSA9PiB0ZW1wbGF0ZUlkZW50aXR5KFtcImFcIiwgXCJiXCJdLCBcInhcIiwgXCJ5XCIpKS50b1Rocm93KFwiSW52YWxpZCBudW1iZXIgb2YgdmFsdWVzXCIpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZGVpbmRlbnQoc3RyaW5ncywgLi4udmFsdWVzKSB7XG4gICAgaWYgKHR5cGVvZiBzdHJpbmdzID09PSBcInN0cmluZ1wiKVxuICAgICAgICByZXR1cm4gZGVpbmRlbnQoW3N0cmluZ3NdKTtcbiAgICByZXR1cm4gdGVtcGxhdGVJZGVudGl0eSguLi5kZWluZGVudFRlbXBsYXRlKHN0cmluZ3MsIC4uLnZhbHVlcykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlaW5kZW50VGVtcGxhdGUoc3RyaW5ncywgLi4udmFsdWVzKSB7XG4gICAgaWYgKHZhbHVlcy5sZW5ndGggIT09IHN0cmluZ3MubGVuZ3RoIC0gMSlcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIG51bWJlciBvZiB2YWx1ZXM7IG11c3QgYmUgb25lIGxlc3MgdGhhbiBzdHJpbmdzXCIsIHsgc3RyaW5ncywgdmFsdWVzIH0pO1xuICAgIGNvbnN0IHRyaW1tZWRTdHJpbmdzID0gWy4uLnN0cmluZ3NdO1xuICAgIHRyaW1tZWRTdHJpbmdzWzBdID0gdHJpbUVtcHR5TGluZXNTdGFydCh0cmltbWVkU3RyaW5nc1swXSArIFwiK1wiKS5zbGljZSgwLCAtMSk7XG4gICAgdHJpbW1lZFN0cmluZ3NbdHJpbW1lZFN0cmluZ3MubGVuZ3RoIC0gMV0gPSB0cmltRW1wdHlMaW5lc0VuZChcIitcIiArIHRyaW1tZWRTdHJpbmdzW3RyaW1tZWRTdHJpbmdzLmxlbmd0aCAtIDFdKS5zbGljZSgxKTtcbiAgICBjb25zdCBpbmRlbnRhdGlvbiA9IHRyaW1tZWRTdHJpbmdzXG4gICAgICAgIC5qb2luKFwiJHtTT01FX1ZBTFVFfVwiKVxuICAgICAgICAuc3BsaXQoXCJcXG5cIilcbiAgICAgICAgLmZpbHRlcigobGluZSkgPT4gbGluZS50cmltKCkgIT09IFwiXCIpXG4gICAgICAgIC5tYXAoKGxpbmUpID0+IGdldFdoaXRlc3BhY2VQcmVmaXgobGluZSkubGVuZ3RoKVxuICAgICAgICAucmVkdWNlKChtaW4sIGN1cnJlbnQpID0+IE1hdGgubWluKG1pbiwgY3VycmVudCksIEluZmluaXR5KTtcbiAgICBjb25zdCBkZWluZGVudGVkU3RyaW5ncyA9IHRyaW1tZWRTdHJpbmdzXG4gICAgICAgIC5tYXAoKHN0cmluZywgc3RyaW5nSW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIHN0cmluZ1xuICAgICAgICAgICAgLnNwbGl0KFwiXFxuXCIpXG4gICAgICAgICAgICAubWFwKChsaW5lLCBsaW5lSW5kZXgpID0+IHN0cmluZ0luZGV4ICE9PSAwICYmIGxpbmVJbmRleCA9PT0gMCA/IGxpbmUgOiBsaW5lLnN1YnN0cmluZyhpbmRlbnRhdGlvbikpXG4gICAgICAgICAgICAuam9pbihcIlxcblwiKTtcbiAgICB9KTtcbiAgICBjb25zdCBpbmRlbnRlZFZhbHVlcyA9IHZhbHVlcy5tYXAoKHZhbHVlLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpcnN0TGluZUluZGVudGF0aW9uID0gZ2V0V2hpdGVzcGFjZVByZWZpeChkZWluZGVudGVkU3RyaW5nc1tpXS5zcGxpdChcIlxcblwiKS5hdCgtMSkpO1xuICAgICAgICByZXR1cm4gYCR7dmFsdWV9YC5yZXBsYWNlQWxsKFwiXFxuXCIsIGBcXG4ke2ZpcnN0TGluZUluZGVudGF0aW9ufWApO1xuICAgIH0pO1xuICAgIHJldHVybiBbZGVpbmRlbnRlZFN0cmluZ3MsIC4uLmluZGVudGVkVmFsdWVzXTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImRlaW5kZW50XCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgLy8gVGVzdCB3aXRoIHN0cmluZyBpbnB1dFxuICAgIGV4cGVjdChkZWluZGVudChcIiAgaGVsbG9cIikpLnRvQmUoXCJoZWxsb1wiKTtcbiAgICBleHBlY3QoZGVpbmRlbnQoXCIgIGhlbGxvXFxuICB3b3JsZFwiKSkudG9CZShcImhlbGxvXFxud29ybGRcIik7XG4gICAgZXhwZWN0KGRlaW5kZW50KFwiICBoZWxsb1xcbiAgICB3b3JsZFwiKSkudG9CZShcImhlbGxvXFxuICB3b3JsZFwiKTtcbiAgICBleHBlY3QoZGVpbmRlbnQoXCJcXG4gIGhlbGxvXFxuICB3b3JsZFxcblwiKSkudG9CZShcImhlbGxvXFxud29ybGRcIik7XG4gICAgLy8gVGVzdCB3aXRoIGVtcHR5IGlucHV0XG4gICAgZXhwZWN0KGRlaW5kZW50KFwiXCIpKS50b0JlKFwiXCIpO1xuICAgIC8vIFRlc3Qgd2l0aCB0ZW1wbGF0ZSBsaXRlcmFsXG4gICAgZXhwZWN0KGRlaW5kZW50IGBcbiAgICBoZWxsb1xuICAgIHdvcmxkXG4gIGApLnRvQmUoXCJoZWxsb1xcbndvcmxkXCIpO1xuICAgIGV4cGVjdChkZWluZGVudCBgXG4gICAgaGVsbG9cbiAgICAgIHdvcmxkXG4gIGApLnRvQmUoXCJoZWxsb1xcbiAgd29ybGRcIik7XG4gICAgLy8gVGVzdCB3aXRoIHZhbHVlc1xuICAgIGNvbnN0IHZhbHVlID0gXCJ0ZXN0XCI7XG4gICAgZXhwZWN0KGRlaW5kZW50IGBcbiAgICBoZWxsbyAke3ZhbHVlfVxuICAgIHdvcmxkXG4gIGApLnRvQmUoYGhlbGxvICR7dmFsdWV9XFxud29ybGRgKTtcbiAgICAvLyBUZXN0IHdpdGggbXVsdGlsaW5lIHZhbHVlc1xuICAgIGV4cGVjdChkZWluZGVudCBgXG4gICAgaGVsbG9cbiAgICAgIHRvICR7XCJsaW5lMVxcbiAgbGluZTJcIn1cbiAgICB3b3JsZFxuICBgKS50b0JlKGBoZWxsb1xcbiAgdG8gbGluZTFcXG4gICAgbGluZTJcXG53b3JsZGApO1xuICAgIC8vIExlYWRpbmcgd2hpdGVzcGFjZSB2YWx1ZXNcbiAgICBleHBlY3QoZGVpbmRlbnQgYFxuICAgICR7XCIgIFwifUFcbiAgICAke1wiICBcIn1CXG4gICAgJHtcIiAgXCJ9Q1xuICBgKS50b0JlKGAgIEFcXG4gIEJcXG4gIENgKTtcbiAgICAvLyBUcmFpbGluZyB3aGl0ZXNwYWNlcyAobm90ZTogdGhlcmUgYXJlIHR3byB3aGl0ZXNwYWNlcyBlYWNoIGFmdGVyIEEgYW5kIGFmdGVyIEMpXG4gICAgZXhwZWN0KGRlaW5kZW50IGBcbiAgICBBICBcbiAgICBCICAke1wiICBcIn1cbiAgICBDICBcbiAgYCkudG9CZShgQSAgXFxuQiAgICBcXG5DICBgKTtcbiAgICAvLyBUZXN0IHdpdGggbWl4ZWQgaW5kZW50YXRpb25cbiAgICBleHBlY3QoZGVpbmRlbnQgYFxuICAgIGhlbGxvXG4gICAgICB3b3JsZFxuICAgICAgICAhXG4gIGApLnRvQmUoXCJoZWxsb1xcbiAgd29ybGRcXG4gICAgIVwiKTtcbiAgICAvLyBUZXN0IGVycm9yIGNhc2VzXG4gICAgZXhwZWN0KCgpID0+IGRlaW5kZW50KFtcImFcIiwgXCJiXCIsIFwiY1wiXSwgXCJ0b29cIiwgXCJtYW55XCIsIFwidmFsdWVzXCIpKS50b1Rocm93KFwiSW52YWxpZCBudW1iZXIgb2YgdmFsdWVzXCIpO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFNjb3BlcyhzY29wZSwgcmVtb3ZlRHVwbGljYXRlcyA9IHRydWUpIHtcbiAgICAvLyBUT0RPIHdoYXQgaXMgdGhpcyBmb3I/IGNhbiB3ZSBtb3ZlIHRoaXMgaW50byB0aGUgT0F1dGggY29kZSBpbiB0aGUgYmFja2VuZD9cbiAgICBjb25zdCB0cmltbWVkU3RyaW5nID0gc2NvcGUudHJpbSgpO1xuICAgIGNvbnN0IHNjb3Blc0FycmF5ID0gdHJpbW1lZFN0cmluZy5zcGxpdCgvXFxzKy8pO1xuICAgIGNvbnN0IGZpbHRlcmVkID0gc2NvcGVzQXJyYXkuZmlsdGVyKHNjb3BlID0+IHNjb3BlLmxlbmd0aCA+IDApO1xuICAgIHJldHVybiByZW1vdmVEdXBsaWNhdGVzID8gWy4uLm5ldyBTZXQoZmlsdGVyZWQpXSA6IGZpbHRlcmVkO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZXh0cmFjdFNjb3Blc1wiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIC8vIFRlc3Qgd2l0aCBlbXB0eSBzdHJpbmdcbiAgICBleHBlY3QoZXh0cmFjdFNjb3BlcyhcIlwiKSkudG9FcXVhbChbXSk7XG4gICAgLy8gVGVzdCB3aXRoIHNpbmdsZSBzY29wZVxuICAgIGV4cGVjdChleHRyYWN0U2NvcGVzKFwicmVhZFwiKSkudG9FcXVhbChbXCJyZWFkXCJdKTtcbiAgICAvLyBUZXN0IHdpdGggbXVsdGlwbGUgc2NvcGVzXG4gICAgZXhwZWN0KGV4dHJhY3RTY29wZXMoXCJyZWFkIHdyaXRlXCIpKS50b0VxdWFsKFtcInJlYWRcIiwgXCJ3cml0ZVwiXSk7XG4gICAgLy8gVGVzdCB3aXRoIGV4dHJhIHdoaXRlc3BhY2VcbiAgICBleHBlY3QoZXh0cmFjdFNjb3BlcyhcIiAgcmVhZCAgd3JpdGUgIFwiKSkudG9FcXVhbChbXCJyZWFkXCIsIFwid3JpdGVcIl0pO1xuICAgIC8vIFRlc3Qgd2l0aCBuZXdsaW5lcyBhbmQgdGFic1xuICAgIGV4cGVjdChleHRyYWN0U2NvcGVzKFwicmVhZFxcbndyaXRlXFx0ZGVsZXRlXCIpKS50b0VxdWFsKFtcInJlYWRcIiwgXCJ3cml0ZVwiLCBcImRlbGV0ZVwiXSk7XG4gICAgLy8gVGVzdCB3aXRoIGR1cGxpY2F0ZXMgKGRlZmF1bHQgYmVoYXZpb3IpXG4gICAgZXhwZWN0KGV4dHJhY3RTY29wZXMoXCJyZWFkIHdyaXRlIHJlYWRcIikpLnRvRXF1YWwoW1wicmVhZFwiLCBcIndyaXRlXCJdKTtcbiAgICAvLyBUZXN0IHdpdGggZHVwbGljYXRlcyAoZXhwbGljaXRseSBzZXQgdG8gcmVtb3ZlKVxuICAgIGV4cGVjdChleHRyYWN0U2NvcGVzKFwicmVhZCB3cml0ZSByZWFkXCIsIHRydWUpKS50b0VxdWFsKFtcInJlYWRcIiwgXCJ3cml0ZVwiXSk7XG4gICAgLy8gVGVzdCB3aXRoIGR1cGxpY2F0ZXMgKGV4cGxpY2l0bHkgc2V0IHRvIGtlZXApXG4gICAgZXhwZWN0KGV4dHJhY3RTY29wZXMoXCJyZWFkIHdyaXRlIHJlYWRcIiwgZmFsc2UpKS50b0VxdWFsKFtcInJlYWRcIiwgXCJ3cml0ZVwiLCBcInJlYWRcIl0pO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VTY29wZVN0cmluZ3MoLi4uc2NvcGVzKSB7XG4gICAgLy8gVE9ETyB3aGF0IGlzIHRoaXMgZm9yPyBjYW4gd2UgbW92ZSB0aGlzIGludG8gdGhlIE9BdXRoIGNvZGUgaW4gdGhlIGJhY2tlbmQ/XG4gICAgY29uc3QgYWxsU2NvcGUgPSBzY29wZXMubWFwKChzKSA9PiBleHRyYWN0U2NvcGVzKHMpKS5mbGF0KCkuam9pbihcIiBcIik7XG4gICAgcmV0dXJuIGV4dHJhY3RTY29wZXMoYWxsU2NvcGUpLmpvaW4oXCIgXCIpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwibWVyZ2VTY29wZVN0cmluZ3NcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICAvLyBUZXN0IHdpdGggZW1wdHkgaW5wdXRcbiAgICBleHBlY3QobWVyZ2VTY29wZVN0cmluZ3MoKSkudG9CZShcIlwiKTtcbiAgICAvLyBUZXN0IHdpdGggc2luZ2xlIHNjb3BlIHN0cmluZ1xuICAgIGV4cGVjdChtZXJnZVNjb3BlU3RyaW5ncyhcInJlYWQgd3JpdGVcIikpLnRvQmUoXCJyZWFkIHdyaXRlXCIpO1xuICAgIC8vIFRlc3Qgd2l0aCBtdWx0aXBsZSBzY29wZSBzdHJpbmdzXG4gICAgZXhwZWN0KG1lcmdlU2NvcGVTdHJpbmdzKFwicmVhZFwiLCBcIndyaXRlXCIpKS50b0JlKFwicmVhZCB3cml0ZVwiKTtcbiAgICAvLyBUZXN0IHdpdGggb3ZlcmxhcHBpbmcgc2NvcGVzXG4gICAgZXhwZWN0KG1lcmdlU2NvcGVTdHJpbmdzKFwicmVhZCB3cml0ZVwiLCBcIndyaXRlIGRlbGV0ZVwiKSkudG9CZShcInJlYWQgd3JpdGUgZGVsZXRlXCIpO1xuICAgIC8vIFRlc3Qgd2l0aCBleHRyYSB3aGl0ZXNwYWNlXG4gICAgZXhwZWN0KG1lcmdlU2NvcGVTdHJpbmdzKFwiICByZWFkICB3cml0ZSAgXCIsIFwiICBkZWxldGUgIFwiKSkudG9CZShcInJlYWQgd3JpdGUgZGVsZXRlXCIpO1xuICAgIC8vIFRlc3Qgd2l0aCBkdXBsaWNhdGVzIGFjcm9zcyBzdHJpbmdzXG4gICAgZXhwZWN0KG1lcmdlU2NvcGVTdHJpbmdzKFwicmVhZCB3cml0ZVwiLCBcIndyaXRlIGRlbGV0ZVwiLCBcInJlYWRcIikpLnRvQmUoXCJyZWFkIHdyaXRlIGRlbGV0ZVwiKTtcbiAgICAvLyBUZXN0IHdpdGggZW1wdHkgc3RyaW5nc1xuICAgIGV4cGVjdChtZXJnZVNjb3BlU3RyaW5ncyhcInJlYWQgd3JpdGVcIiwgXCJcIiwgXCJkZWxldGVcIikpLnRvQmUoXCJyZWFkIHdyaXRlIGRlbGV0ZVwiKTtcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZVRlbXBsYXRlTGl0ZXJhbChzKSB7XG4gICAgcmV0dXJuIHMucmVwbGFjZUFsbChcImBcIiwgXCJcXFxcYFwiKS5yZXBsYWNlQWxsKFwiXFxcXFwiLCBcIlxcXFxcXFxcXCIpLnJlcGxhY2VBbGwoXCIkXCIsIFwiXFxcXCRcIik7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJlc2NhcGVUZW1wbGF0ZUxpdGVyYWxcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICAvLyBUZXN0IHdpdGggZW1wdHkgc3RyaW5nXG4gICAgZXhwZWN0KGVzY2FwZVRlbXBsYXRlTGl0ZXJhbChcIlwiKSkudG9CZShcIlwiKTtcbiAgICAvLyBUZXN0IHdpdGggbm9ybWFsIHN0cmluZyAobm8gc3BlY2lhbCBjaGFyYWN0ZXJzKVxuICAgIGV4cGVjdChlc2NhcGVUZW1wbGF0ZUxpdGVyYWwoXCJoZWxsbyB3b3JsZFwiKSkudG9CZShcImhlbGxvIHdvcmxkXCIpO1xuICAgIC8vIFRlc3Qgd2l0aCBiYWNrdGlja1xuICAgIGNvbnN0IGlucHV0MSA9IFwiaGVsbG8gYHdvcmxkYFwiO1xuICAgIGNvbnN0IG91dHB1dDEgPSBlc2NhcGVUZW1wbGF0ZUxpdGVyYWwoaW5wdXQxKTtcbiAgICAvLyBWZXJpZnkgYmFja3RpY2tzIGFyZSBlc2NhcGVkXG4gICAgZXhwZWN0KG91dHB1dDEuaW5jbHVkZXMoXCJcXFxcYFwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3Qob3V0cHV0MSkubm90LnRvQmUoaW5wdXQxKTtcbiAgICAvLyBUZXN0IHdpdGggYmFja3NsYXNoXG4gICAgY29uc3QgaW5wdXQyID0gXCJoZWxsbyBcXFxcd29ybGRcIjtcbiAgICBjb25zdCBvdXRwdXQyID0gZXNjYXBlVGVtcGxhdGVMaXRlcmFsKGlucHV0Mik7XG4gICAgLy8gVmVyaWZ5IGJhY2tzbGFzaGVzIGFyZSBlc2NhcGVkXG4gICAgZXhwZWN0KG91dHB1dDIuaW5jbHVkZXMoXCJcXFxcXFxcXFwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3Qob3V0cHV0Mikubm90LnRvQmUoaW5wdXQyKTtcbiAgICAvLyBUZXN0IHdpdGggZG9sbGFyIHNpZ25cbiAgICBjb25zdCBpbnB1dDMgPSBcImhlbGxvICR3b3JsZFwiO1xuICAgIGNvbnN0IG91dHB1dDMgPSBlc2NhcGVUZW1wbGF0ZUxpdGVyYWwoaW5wdXQzKTtcbiAgICAvLyBWZXJpZnkgZG9sbGFyIHNpZ25zIGFyZSBlc2NhcGVkXG4gICAgZXhwZWN0KG91dHB1dDMuaW5jbHVkZXMoXCJcXFxcJFwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3Qob3V0cHV0Mykubm90LnRvQmUoaW5wdXQzKTtcbiAgICAvLyBUZXN0IHdpdGggbXVsdGlwbGUgc3BlY2lhbCBjaGFyYWN0ZXJzXG4gICAgY29uc3QgaW5wdXQ0ID0gXCJgaGVsbG9gICR3b3JsZFxcXFxcIjtcbiAgICBjb25zdCBvdXRwdXQ0ID0gZXNjYXBlVGVtcGxhdGVMaXRlcmFsKGlucHV0NCk7XG4gICAgLy8gVmVyaWZ5IGFsbCBzcGVjaWFsIGNoYXJhY3RlcnMgYXJlIGVzY2FwZWRcbiAgICBleHBlY3Qob3V0cHV0NC5pbmNsdWRlcyhcIlxcXFxgXCIpKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdChvdXRwdXQ0LmluY2x1ZGVzKFwiXFxcXCRcIikpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KG91dHB1dDQuaW5jbHVkZXMoXCJcXFxcXFxcXFwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3Qob3V0cHV0NCkubm90LnRvQmUoaW5wdXQ0KTtcbiAgICAvLyBUZXN0IHdpdGggYWxyZWFkeSBlc2NhcGVkIGNoYXJhY3RlcnNcbiAgICBjb25zdCBpbnB1dDUgPSBcIlxcXFxgaGVsbG9cXFxcYFwiO1xuICAgIGNvbnN0IG91dHB1dDUgPSBlc2NhcGVUZW1wbGF0ZUxpdGVyYWwoaW5wdXQ1KTtcbiAgICAvLyBWZXJpZnkgYWxyZWFkeSBlc2NhcGVkIGNoYXJhY3RlcnMgYXJlIHByb3Blcmx5IGVzY2FwZWRcbiAgICBleHBlY3Qob3V0cHV0NSkubm90LnRvQmUoaW5wdXQ1KTtcbn0pO1xuLyoqXG4gKiBTb21lIGNsYXNzZXMgaGF2ZSBkaWZmZXJlbnQgY29uc3RydWN0b3IgbmFtZXMgaW4gZGlmZmVyZW50IGVudmlyb25tZW50cyAoZWcuIGBIZWFkZXJzYCBpcyBzb21ldGltZXMgY2FsbGVkIGBfSGVhZGVyc2AsXG4gKiBzbyB3ZSBjcmVhdGUgYW4gb2JqZWN0IG9mIG92ZXJyaWRlcyB0byBoYW5kbGUgdGhlc2UgY2FzZXMuXG4gKi9cbmNvbnN0IG5pY2lmaWFibGVDbGFzc05hbWVPdmVycmlkZXMgPSBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKHtcbiAgICBIZWFkZXJzLFxufSkubWFwKChbaywgdl0pID0+IFt2LCBrXSkpO1xuZXhwb3J0IGZ1bmN0aW9uIG5pY2lmeSh2YWx1ZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgZnVsbE9wdGlvbnMgPSB7XG4gICAgICAgIG1heERlcHRoOiA1LFxuICAgICAgICBjdXJyZW50SW5kZW50OiBcIlwiLFxuICAgICAgICBsaW5lSW5kZW50OiBcIiAgXCIsXG4gICAgICAgIG11bHRpbGluZTogdHJ1ZSxcbiAgICAgICAgcmVmczogbmV3IE1hcCgpLFxuICAgICAgICBwYXRoOiBcInZhbHVlXCIsXG4gICAgICAgIHBhcmVudDogbnVsbCxcbiAgICAgICAgb3ZlcnJpZGVzOiAoKSA9PiBudWxsLFxuICAgICAgICBrZXlJblBhcmVudDogbnVsbCxcbiAgICAgICAgaGlkZUZpZWxkczogW10sXG4gICAgICAgIC4uLmZpbHRlclVuZGVmaW5lZChvcHRpb25zKSxcbiAgICB9O1xuICAgIGNvbnN0IHsgbWF4RGVwdGgsIGN1cnJlbnRJbmRlbnQsIGxpbmVJbmRlbnQsIG11bHRpbGluZSwgcmVmcywgcGF0aCwgb3ZlcnJpZGVzLCBoaWRlRmllbGRzLCB9ID0gZnVsbE9wdGlvbnM7XG4gICAgY29uc3QgbmwgPSBgXFxuJHtjdXJyZW50SW5kZW50fWA7XG4gICAgY29uc3Qgb3ZlcnJpZGVSZXN1bHQgPSBvdmVycmlkZXModmFsdWUsIG9wdGlvbnMpO1xuICAgIGlmIChvdmVycmlkZVJlc3VsdCAhPT0gbnVsbClcbiAgICAgICAgcmV0dXJuIG92ZXJyaWRlUmVzdWx0O1xuICAgIGlmIChbXCJmdW5jdGlvblwiLCBcIm9iamVjdFwiLCBcInN5bWJvbFwiXS5pbmNsdWRlcyh0eXBlb2YgdmFsdWUpICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIGlmIChyZWZzLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBgUmVmPCR7cmVmcy5nZXQodmFsdWUpfT5gO1xuICAgICAgICB9XG4gICAgICAgIHJlZnMuc2V0KHZhbHVlLCBwYXRoKTtcbiAgICB9XG4gICAgY29uc3QgbmV3T3B0aW9ucyA9IHtcbiAgICAgICAgbWF4RGVwdGg6IG1heERlcHRoIC0gMSxcbiAgICAgICAgY3VycmVudEluZGVudCxcbiAgICAgICAgbGluZUluZGVudCxcbiAgICAgICAgbXVsdGlsaW5lLFxuICAgICAgICByZWZzLFxuICAgICAgICBwYXRoOiBwYXRoICsgXCItPlt1bmtub3duIHByb3BlcnR5XVwiLFxuICAgICAgICBvdmVycmlkZXMsXG4gICAgICAgIHBhcmVudDogeyB2YWx1ZSwgb3B0aW9uczogZnVsbE9wdGlvbnMgfSxcbiAgICAgICAga2V5SW5QYXJlbnQ6IG51bGwsXG4gICAgICAgIGhpZGVGaWVsZHM6IFtdLFxuICAgIH07XG4gICAgY29uc3QgbmVzdGVkTmljaWZ5ID0gKG5ld1ZhbHVlLCBuZXdQYXRoLCBrZXlJblBhcmVudCwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgICAgIHJldHVybiBuaWNpZnkobmV3VmFsdWUsIHtcbiAgICAgICAgICAgIC4uLm5ld09wdGlvbnMsXG4gICAgICAgICAgICBwYXRoOiBuZXdQYXRoLFxuICAgICAgICAgICAgY3VycmVudEluZGVudDogY3VycmVudEluZGVudCArIGxpbmVJbmRlbnQsXG4gICAgICAgICAgICBrZXlJblBhcmVudCxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgc3dpdGNoICh0eXBlb2YgdmFsdWUpIHtcbiAgICAgICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgICAgY2FzZSBcIm51bWJlclwiOiB7XG4gICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjoge1xuICAgICAgICAgICAgY29uc3QgaXNEZWluZGVudGFibGUgPSAodikgPT4gZGVpbmRlbnQodikgPT09IHYgJiYgdi5pbmNsdWRlcyhcIlxcblwiKTtcbiAgICAgICAgICAgIGNvbnN0IHdyYXBJbkRlaW5kZW50ID0gKHYpID0+IGRlaW5kZW50IGBcbiAgICAgICAgZGVpbmRlbnRcXGBcbiAgICAgICAgJHtjdXJyZW50SW5kZW50ICsgbGluZUluZGVudH0ke2VzY2FwZVRlbXBsYXRlTGl0ZXJhbCh2KS5yZXBsYWNlQWxsKFwiXFxuXCIsIG5sICsgbGluZUluZGVudCl9XG4gICAgICAgICR7Y3VycmVudEluZGVudH1cXGBcbiAgICAgIGA7XG4gICAgICAgICAgICBpZiAoaXNEZWluZGVudGFibGUodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdyYXBJbkRlaW5kZW50KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlLmVuZHNXaXRoKFwiXFxuXCIpICYmIGlzRGVpbmRlbnRhYmxlKHZhbHVlLnNsaWNlKDAsIC0xKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gd3JhcEluRGVpbmRlbnQodmFsdWUuc2xpY2UoMCwgLTEpKSArICcgKyBcIlxcXFxuXCInO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwidW5kZWZpbmVkXCI6IHtcbiAgICAgICAgICAgIHJldHVybiBcInVuZGVmaW5lZFwiO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJzeW1ib2xcIjoge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImJpZ2ludFwiOiB7XG4gICAgICAgICAgICByZXR1cm4gYCR7dmFsdWV9bmA7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZS5uYW1lKVxuICAgICAgICAgICAgICAgIHJldHVybiBgZnVuY3Rpb24gJHt2YWx1ZS5uYW1lfSguLi4pIHsgLi4uIH1gO1xuICAgICAgICAgICAgcmV0dXJuIGAoLi4uKSA9PiB7IC4uLiB9YDtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwib2JqZWN0XCI6IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbClcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJudWxsXCI7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBleHRyYUxpbmVzID0gZ2V0TmljaWZpZWRPYmplY3RFeHRyYUxpbmVzKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNWYWx1ZUxlbmd0aCA9IHZhbHVlLmxlbmd0aCArIGV4dHJhTGluZXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGlmIChtYXhEZXB0aCA8PSAwICYmIHJlc1ZhbHVlTGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJbLi4uXVwiO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc1ZhbHVlcyA9IHZhbHVlLm1hcCgodiwgaSkgPT4gbmVzdGVkTmljaWZ5KHYsIGAke3BhdGh9WyR7aX1dYCwgaSkpO1xuICAgICAgICAgICAgICAgIHJlc1ZhbHVlcy5wdXNoKC4uLmV4dHJhTGluZXMpO1xuICAgICAgICAgICAgICAgIGlmIChyZXNWYWx1ZXMubGVuZ3RoICE9PSByZXNWYWx1ZUxlbmd0aClcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJuaWNpZnkgb2Ygb2JqZWN0OiByZXNWYWx1ZXMubGVuZ3RoICE9PSByZXNWYWx1ZUxlbmd0aFwiLCB7IHZhbHVlLCByZXNWYWx1ZXMsIHJlc1ZhbHVlTGVuZ3RoIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNob3VsZEluZGVudCA9IHJlc1ZhbHVlcy5sZW5ndGggPiA0IHx8IHJlc1ZhbHVlcy5zb21lKHggPT4gKHJlc1ZhbHVlcy5sZW5ndGggPiAxICYmIHgubGVuZ3RoID4gNCkgfHwgeC5pbmNsdWRlcyhcIlxcblwiKSk7XG4gICAgICAgICAgICAgICAgaWYgKHNob3VsZEluZGVudCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYFske25sfSR7cmVzVmFsdWVzLm1hcCh4ID0+IGAke2xpbmVJbmRlbnR9JHt4fSwke25sfWApLmpvaW4oXCJcIil9XWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYFske3Jlc1ZhbHVlcy5qb2luKFwiLCBcIil9XWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGBVUkwoJHtuZXN0ZWROaWNpZnkodmFsdWUudG9TdHJpbmcoKSwgYCR7cGF0aH0udG9TdHJpbmcoKWAsIG51bGwpfSlgO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7dmFsdWUuY29uc3RydWN0b3IubmFtZX0oWyR7dmFsdWUudG9TdHJpbmcoKX1dKWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgICAgIGxldCBzdGFjayA9IHZhbHVlLnN0YWNrID8/IFwiXCI7XG4gICAgICAgICAgICAgICAgY29uc3QgdG9TdHJpbmcgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIGlmICghc3RhY2suc3RhcnRzV2l0aCh0b1N0cmluZykpXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrID0gYCR7dG9TdHJpbmd9XFxuJHtzdGFja31gOyAvLyBzb21lIGJyb3dzZXJzIGRvbid0IGluY2x1ZGUgdGhlIGVycm9yIG1lc3NhZ2UgaW4gdGhlIHN0YWNrLCBzb21lIGRvXG4gICAgICAgICAgICAgICAgc3RhY2sgPSBzdGFjay50cmltRW5kKCk7XG4gICAgICAgICAgICAgICAgc3RhY2sgPSBzdGFjay5yZXBsYWNlKC9cXG5cXHMrL2csIGBcXG4ke2xpbmVJbmRlbnR9JHtsaW5lSW5kZW50fWApO1xuICAgICAgICAgICAgICAgIHN0YWNrID0gc3RhY2sucmVwbGFjZShcIlxcblwiLCBgXFxuJHtsaW5lSW5kZW50fVN0YWNrOlxcbmApO1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBzdGFjayArPSBgXFxuJHtsaW5lSW5kZW50fUV4dHJhIHByb3BlcnRpZXM6ICR7bmVzdGVkTmljaWZ5KE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyh2YWx1ZSkpLCBwYXRoLCBudWxsKX1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUuY2F1c2UpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhY2sgKz0gYFxcbiR7bGluZUluZGVudH1DYXVzZTpcXG4ke2xpbmVJbmRlbnR9JHtsaW5lSW5kZW50fSR7bmVzdGVkTmljaWZ5KHZhbHVlLmNhdXNlLCBwYXRoLCBudWxsLCB7IGN1cnJlbnRJbmRlbnQ6IGN1cnJlbnRJbmRlbnQgKyBsaW5lSW5kZW50ICsgbGluZUluZGVudCB9KX1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdGFjayA9IHN0YWNrLnJlcGxhY2VBbGwoXCJcXG5cIiwgYFxcbiR7Y3VycmVudEluZGVudH1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb25zdHJ1Y3Rvck5hbWUgPSBbbnVsbCwgT2JqZWN0LnByb3RvdHlwZV0uaW5jbHVkZXMoT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbHVlKSkgPyBudWxsIDogKG5pY2lmaWFibGVDbGFzc05hbWVPdmVycmlkZXMuZ2V0KHZhbHVlLmNvbnN0cnVjdG9yKSA/PyB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnN0cnVjdG9yU3RyaW5nID0gY29uc3RydWN0b3JOYW1lID8gYCR7Y29uc3RydWN0b3JOYW1lfSBgIDogXCJcIjtcbiAgICAgICAgICAgIGNvbnN0IGVudHJpZXMgPSBnZXROaWNpZmlhYmxlRW50cmllcyh2YWx1ZSkuZmlsdGVyKChba10pID0+ICFoaWRlRmllbGRzLmluY2x1ZGVzKGspKTtcbiAgICAgICAgICAgIGNvbnN0IGV4dHJhTGluZXMgPSBbXG4gICAgICAgICAgICAgICAgLi4uZ2V0TmljaWZpZWRPYmplY3RFeHRyYUxpbmVzKHZhbHVlKSxcbiAgICAgICAgICAgICAgICAuLi5oaWRlRmllbGRzLmxlbmd0aCA+IDAgPyBbYDxzb21lIGZpZWxkcyBtYXkgaGF2ZSBiZWVuIGhpZGRlbj5gXSA6IFtdLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGNvbnN0IHJlc1ZhbHVlTGVuZ3RoID0gZW50cmllcy5sZW5ndGggKyBleHRyYUxpbmVzLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChyZXNWYWx1ZUxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7Y29uc3RydWN0b3JTdHJpbmd9e31gO1xuICAgICAgICAgICAgaWYgKG1heERlcHRoIDw9IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke2NvbnN0cnVjdG9yU3RyaW5nfXsgLi4uIH1gO1xuICAgICAgICAgICAgY29uc3QgcmVzVmFsdWVzID0gZW50cmllcy5tYXAoKFtrLCB2XSwga2V5SW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXlOaWNpZmllZCA9IG5lc3RlZE5pY2lmeShrLCBgT2JqZWN0LmtleXMoJHtwYXRofSlbJHtrZXlJbmRleH1dYCwgbnVsbCk7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5SW5PYmplY3RMaXRlcmFsID0gdHlwZW9mIGsgPT09IFwic3RyaW5nXCIgPyBuaWNpZnlQcm9wZXJ0eVN0cmluZyhrKSA6IGBbJHtrZXlOaWNpZmllZH1dYDtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiAmJiB2Lm5hbWUgPT09IGspIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGAke2tleUluT2JqZWN0TGl0ZXJhbH0oLi4uKTogeyAuLi4gfWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7a2V5SW5PYmplY3RMaXRlcmFsfTogJHtuZXN0ZWROaWNpZnkodiwgYCR7cGF0aH1bJHtrZXlOaWNpZmllZH1dYCwgayl9YDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc1ZhbHVlcy5wdXNoKC4uLmV4dHJhTGluZXMpO1xuICAgICAgICAgICAgaWYgKHJlc1ZhbHVlcy5sZW5ndGggIT09IHJlc1ZhbHVlTGVuZ3RoKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwibmljaWZ5IG9mIG9iamVjdDogcmVzVmFsdWVzLmxlbmd0aCAhPT0gcmVzVmFsdWVMZW5ndGhcIiwgeyB2YWx1ZSwgcmVzVmFsdWVzLCByZXNWYWx1ZUxlbmd0aCB9KTtcbiAgICAgICAgICAgIGNvbnN0IHNob3VsZEluZGVudCA9IHJlc1ZhbHVlcy5sZW5ndGggPiAxIHx8IHJlc1ZhbHVlcy5zb21lKHggPT4geC5pbmNsdWRlcyhcIlxcblwiKSk7XG4gICAgICAgICAgICBpZiAocmVzVmFsdWVzLmxlbmd0aCA9PT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7Y29uc3RydWN0b3JTdHJpbmd9e31gO1xuICAgICAgICAgICAgaWYgKHNob3VsZEluZGVudCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHtjb25zdHJ1Y3RvclN0cmluZ317JHtubH0ke3Jlc1ZhbHVlcy5tYXAoeCA9PiBgJHtsaW5lSW5kZW50fSR7eH0sJHtubH1gKS5qb2luKFwiXCIpfX1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke2NvbnN0cnVjdG9yU3RyaW5nfXsgJHtyZXNWYWx1ZXMuam9pbihcIiwgXCIpfSB9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICByZXR1cm4gYCR7dHlwZW9mIHZhbHVlfTwke3ZhbHVlfT5gO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VBbGwoaW5wdXQsIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICBpZiAoc2VhcmNoVmFsdWUgPT09IFwiXCIpXG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwicmVwbGFjZUFsbDogc2VhcmNoVmFsdWUgaXMgZW1wdHlcIik7XG4gICAgcmV0dXJuIGlucHV0LnNwbGl0KHNlYXJjaFZhbHVlKS5qb2luKHJlcGxhY2VWYWx1ZSk7XG59XG5pbXBvcnQubWV0YS52aXRlc3Q/LnRlc3QoXCJyZXBsYWNlQWxsXCIsICh7IGV4cGVjdCB9KSA9PiB7XG4gICAgZXhwZWN0KHJlcGxhY2VBbGwoXCJoZWxsbyB3b3JsZFwiLCBcIm9cIiwgXCJ4XCIpKS50b0JlKFwiaGVsbHggd3hybGRcIik7XG4gICAgZXhwZWN0KHJlcGxhY2VBbGwoXCJhYWFcIiwgXCJhXCIsIFwiYlwiKSkudG9CZShcImJiYlwiKTtcbiAgICBleHBlY3QocmVwbGFjZUFsbChcIlwiLCBcImFcIiwgXCJiXCIpKS50b0JlKFwiXCIpO1xuICAgIGV4cGVjdChyZXBsYWNlQWxsKFwiYWJjXCIsIFwiYlwiLCBcIlwiKSkudG9CZShcImFjXCIpO1xuICAgIGV4cGVjdChyZXBsYWNlQWxsKFwidGVzdC50ZXN0LnRlc3RcIiwgXCIuXCIsIFwiX1wiKSkudG9CZShcInRlc3RfdGVzdF90ZXN0XCIpO1xuICAgIGV4cGVjdChyZXBsYWNlQWxsKFwiYS5iKmNcIiwgXCIuXCIsIFwieFwiKSkudG9CZShcImF4YipjXCIpO1xuICAgIGV4cGVjdChyZXBsYWNlQWxsKFwiYSpiKmNcIiwgXCIqXCIsIFwieFwiKSkudG9CZShcImF4YnhjXCIpO1xuICAgIGV4cGVjdChyZXBsYWNlQWxsKFwiaGVsbG8gaGVsbG9cIiwgXCJoZWxsb1wiLCBcImhpXCIpKS50b0JlKFwiaGkgaGlcIik7XG59KTtcbmZ1bmN0aW9uIG5pY2lmeVByb3BlcnR5U3RyaW5nKHN0cikge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzdHIpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwibmljaWZ5UHJvcGVydHlTdHJpbmdcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICAvLyBUZXN0IHZhbGlkIGlkZW50aWZpZXJzXG4gICAgZXhwZWN0KG5pY2lmeVByb3BlcnR5U3RyaW5nKFwidmFsaWROYW1lXCIpKS50b0JlKCdcInZhbGlkTmFtZVwiJyk7XG4gICAgZXhwZWN0KG5pY2lmeVByb3BlcnR5U3RyaW5nKFwiX3ZhbGlkTmFtZVwiKSkudG9CZSgnXCJfdmFsaWROYW1lXCInKTtcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoXCJ2YWxpZDEyM05hbWVcIikpLnRvQmUoJ1widmFsaWQxMjNOYW1lXCInKTtcbiAgICAvLyBUZXN0IGludmFsaWQgaWRlbnRpZmllcnNcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoXCIxMjNpbnZhbGlkXCIpKS50b0JlKCdcIjEyM2ludmFsaWRcIicpO1xuICAgIGV4cGVjdChuaWNpZnlQcm9wZXJ0eVN0cmluZyhcImludmFsaWQtbmFtZVwiKSkudG9CZSgnXCJpbnZhbGlkLW5hbWVcIicpO1xuICAgIGV4cGVjdChuaWNpZnlQcm9wZXJ0eVN0cmluZyhcImludmFsaWQgc3BhY2VcIikpLnRvQmUoJ1wiaW52YWxpZCBzcGFjZVwiJyk7XG4gICAgZXhwZWN0KG5pY2lmeVByb3BlcnR5U3RyaW5nKFwiJGludmFsaWRcIikpLnRvQmUoJ1wiJGludmFsaWRcIicpO1xuICAgIGV4cGVjdChuaWNpZnlQcm9wZXJ0eVN0cmluZyhcIlwiKSkudG9CZSgnXCJcIicpO1xuICAgIC8vIFRlc3Qgd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnNcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoXCJwcm9wZXJ0eSFcIikpLnRvQmUoJ1wicHJvcGVydHkhXCInKTtcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoXCJwcm9wZXJ0eS5uYW1lXCIpKS50b0JlKCdcInByb3BlcnR5Lm5hbWVcIicpO1xuICAgIC8vIFRlc3Qgd2l0aCBlc2NhcGVkIGNoYXJhY3RlcnNcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoXCJcXFxcXCIpKS50b0JlKCdcIlxcXFxcXFxcXCInKTtcbiAgICBleHBlY3QobmljaWZ5UHJvcGVydHlTdHJpbmcoJ1wiJykpLnRvQmUoJ1wiXFxcXFwiXCInKTtcbn0pO1xuZnVuY3Rpb24gZ2V0TmljaWZpYWJsZUtleXModmFsdWUpIHtcbiAgICBjb25zdCBvdmVycmlkZGVuID0gKFwiZ2V0TmljaWZpYWJsZUtleXNcIiBpbiB2YWx1ZSA/IHZhbHVlLmdldE5pY2lmaWFibGVLZXlzPy5iaW5kKHZhbHVlKSA6IG51bGwpPy4oKTtcbiAgICBpZiAob3ZlcnJpZGRlbiAhPSBudWxsKVxuICAgICAgICByZXR1cm4gb3ZlcnJpZGRlbjtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModmFsdWUpLnNvcnQoKTtcbiAgICByZXR1cm4gdW5pcXVlKGtleXMpO1xufVxuaW1wb3J0Lm1ldGEudml0ZXN0Py50ZXN0KFwiZ2V0TmljaWZpYWJsZUtleXNcIiwgKHsgZXhwZWN0IH0pID0+IHtcbiAgICAvLyBUZXN0IHJlZ3VsYXIgb2JqZWN0XG4gICAgZXhwZWN0KGdldE5pY2lmaWFibGVLZXlzKHsgYjogMSwgYTogMiwgYzogMyB9KSkudG9FcXVhbChbXCJhXCIsIFwiYlwiLCBcImNcIl0pO1xuICAgIC8vIFRlc3QgZW1wdHkgb2JqZWN0XG4gICAgZXhwZWN0KGdldE5pY2lmaWFibGVLZXlzKHt9KSkudG9FcXVhbChbXSk7XG4gICAgLy8gVGVzdCBvYmplY3Qgd2l0aCBjdXN0b20gZ2V0TmljaWZpYWJsZUtleXNcbiAgICBjb25zdCBjdXN0b21PYmplY3QgPSB7XG4gICAgICAgIGE6IDEsXG4gICAgICAgIGI6IDIsXG4gICAgICAgIGdldE5pY2lmaWFibGVLZXlzKCkge1xuICAgICAgICAgICAgcmV0dXJuIFtcImN1c3RvbUtleTFcIiwgXCJjdXN0b21LZXkyXCJdO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBleHBlY3QoZ2V0TmljaWZpYWJsZUtleXMoY3VzdG9tT2JqZWN0KSkudG9FcXVhbChbXCJjdXN0b21LZXkxXCIsIFwiY3VzdG9tS2V5MlwiXSk7XG59KTtcbmZ1bmN0aW9uIGdldE5pY2lmaWFibGVFbnRyaWVzKHZhbHVlKSB7XG4gICAgY29uc3QgcmVjb3JkTGlrZXMgPSBbSGVhZGVyc107XG4gICAgZnVuY3Rpb24gaXNSZWNvcmRMaWtlKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiByZWNvcmRMaWtlcy5zb21lKHggPT4gdmFsdWUgaW5zdGFuY2VvZiB4KTtcbiAgICB9XG4gICAgaWYgKGlzUmVjb3JkTGlrZSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIFsuLi52YWx1ZS5lbnRyaWVzKCldLnNvcnQoKFthXSwgW2JdKSA9PiBzdHJpbmdDb21wYXJlKGAke2F9YCwgYCR7Yn1gKSk7XG4gICAgfVxuICAgIGNvbnN0IGtleXMgPSBnZXROaWNpZmlhYmxlS2V5cyh2YWx1ZSk7XG4gICAgcmV0dXJuIGtleXMubWFwKChrKSA9PiBbaywgdmFsdWVba11dKTtcbn1cbmZ1bmN0aW9uIGdldE5pY2lmaWVkT2JqZWN0RXh0cmFMaW5lcyh2YWx1ZSkge1xuICAgIHJldHVybiAoXCJnZXROaWNpZmllZE9iamVjdEV4dHJhTGluZXNcIiBpbiB2YWx1ZSA/IHZhbHVlLmdldE5pY2lmaWVkT2JqZWN0RXh0cmFMaW5lcyA6IG51bGwpPy4oKSA/PyBbXTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/urls.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUrlIfValid: () => (/* binding */ createUrlIfValid),\n/* harmony export */   getRelativePart: () => (/* binding */ getRelativePart),\n/* harmony export */   isLocalhost: () => (/* binding */ isLocalhost),\n/* harmony export */   isRelative: () => (/* binding */ isRelative),\n/* harmony export */   isValidHostname: () => (/* binding */ isValidHostname),\n/* harmony export */   isValidUrl: () => (/* binding */ isValidUrl),\n/* harmony export */   url: () => (/* binding */ url),\n/* harmony export */   urlString: () => (/* binding */ urlString)\n/* harmony export */ });\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\nfunction createUrlIfValid(...args) {\n    try {\n        return new URL(...args);\n    }\n    catch (e) {\n        return null;\n    }\n}\n undefined;\nfunction isValidUrl(url) {\n    return !!createUrlIfValid(url);\n}\n undefined;\nfunction isValidHostname(hostname) {\n    const url = createUrlIfValid(`https://${hostname}`);\n    if (!url)\n        return false;\n    return url.hostname === hostname;\n}\n undefined;\nfunction isLocalhost(urlOrString) {\n    const url = createUrlIfValid(urlOrString);\n    if (!url)\n        return false;\n    if (url.hostname === \"localhost\" || url.hostname.endsWith(\".localhost\"))\n        return true;\n    if (url.hostname.match(/^127\\.\\d+\\.\\d+\\.\\d+$/))\n        return true;\n    return false;\n}\n undefined;\nfunction isRelative(url) {\n    const randomDomain = `${(0,_crypto__WEBPACK_IMPORTED_MODULE_0__.generateSecureRandomString)()}.stack-auth.example.com`;\n    const u = createUrlIfValid(url, `https://${randomDomain}`);\n    if (!u)\n        return false;\n    if (u.host !== randomDomain)\n        return false;\n    if (u.protocol !== \"https:\")\n        return false;\n    return true;\n}\n undefined;\nfunction getRelativePart(url) {\n    return url.pathname + url.search + url.hash;\n}\n undefined;\n/**\n * A template literal tag that returns a URL.\n *\n * Any values passed are encoded.\n */\nfunction url(strings, ...values) {\n    return new URL(urlString(strings, ...values));\n}\n undefined;\n/**\n * A template literal tag that returns a URL string.\n *\n * Any values passed are encoded.\n */\nfunction urlString(strings, ...values) {\n    return (0,_strings__WEBPACK_IMPORTED_MODULE_1__.templateIdentity)(strings, ...values.map(encodeURIComponent));\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/uuids.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUuid: () => (/* binding */ generateUuid),\n/* harmony export */   isUuid: () => (/* binding */ isUuid)\n/* harmony export */ });\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n\nfunction generateUuid() {\n    // crypto.randomUuid is not supported in all browsers, so this is a polyfill\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c => (+c ^ (0,_crypto__WEBPACK_IMPORTED_MODULE_0__.generateRandomValues)(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16));\n}\n undefined;\nfunction isUuid(str) {\n    return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(str);\n}\n undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy91dWlkcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDekM7QUFDUDtBQUNBLCtFQUErRSw2REFBb0I7QUFDbkc7QUFDQSxVQVdFO0FBQ0s7QUFDUCxzQkFBc0IsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRztBQUNoRjtBQUNBLFVBaUJFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcdXRpbHNcXHV1aWRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlUmFuZG9tVmFsdWVzIH0gZnJvbSBcIi4vY3J5cHRvXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVVdWlkKCkge1xuICAgIC8vIGNyeXB0by5yYW5kb21VdWlkIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYWxsIGJyb3dzZXJzLCBzbyB0aGlzIGlzIGEgcG9seWZpbGxcbiAgICByZXR1cm4gXCIxMDAwMDAwMC0xMDAwLTQwMDAtODAwMC0xMDAwMDAwMDAwMDBcIi5yZXBsYWNlKC9bMDE4XS9nLCBjID0+ICgrYyBeIGdlbmVyYXRlUmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KDEpKVswXSAmIDE1ID4+ICtjIC8gNCkudG9TdHJpbmcoMTYpKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImdlbmVyYXRlVXVpZFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIC8vIFRlc3QgdGhhdCB0aGUgZnVuY3Rpb24gcmV0dXJucyBhIHZhbGlkIFVVSURcbiAgICBjb25zdCB1dWlkID0gZ2VuZXJhdGVVdWlkKCk7XG4gICAgZXhwZWN0KHV1aWQpLnRvTWF0Y2goL15bMC05YS1mXXs4fS1bMC05YS1mXXs0fS00WzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9JC8pO1xuICAgIC8vIFRlc3QgdGhhdCBtdWx0aXBsZSBjYWxscyBnZW5lcmF0ZSBkaWZmZXJlbnQgVVVJRHNcbiAgICBjb25zdCB1dWlkMiA9IGdlbmVyYXRlVXVpZCgpO1xuICAgIGV4cGVjdCh1dWlkKS5ub3QudG9CZSh1dWlkMik7XG4gICAgLy8gVGVzdCB0aGF0IHRoZSBVVUlEIGlzIHZlcnNpb24gNCAocmFuZG9tKVxuICAgIGV4cGVjdCh1dWlkLmNoYXJBdCgxNCkpLnRvQmUoJzQnKTtcbiAgICAvLyBUZXN0IHRoYXQgdGhlIFVVSUQgaGFzIHRoZSBjb3JyZWN0IHZhcmlhbnQgKDgsIDksIGEsIG9yIGIgaW4gcG9zaXRpb24gMTkpXG4gICAgZXhwZWN0KCc4OWFiJykudG9Db250YWluKHV1aWQuY2hhckF0KDE5KSk7XG59KTtcbmV4cG9ydCBmdW5jdGlvbiBpc1V1aWQoc3RyKSB7XG4gICAgcmV0dXJuIC9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tNFswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfSQvLnRlc3Qoc3RyKTtcbn1cbmltcG9ydC5tZXRhLnZpdGVzdD8udGVzdChcImlzVXVpZFwiLCAoeyBleHBlY3QgfSkgPT4ge1xuICAgIC8vIFRlc3Qgd2l0aCB2YWxpZCBVVUlEc1xuICAgIGV4cGVjdChpc1V1aWQoXCIxMjNlNDU2Ny1lODliLTQyZDMtYTQ1Ni00MjY2MTQxNzQwMDBcIikpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KGlzVXVpZChcIjEyM2U0NTY3LWU4OWItNDJkMy04NDU2LTQyNjYxNDE3NDAwMFwiKSkudG9CZSh0cnVlKTtcbiAgICBleHBlY3QoaXNVdWlkKFwiMTIzZTQ1NjctZTg5Yi00MmQzLTk0NTYtNDI2NjE0MTc0MDAwXCIpKS50b0JlKHRydWUpO1xuICAgIGV4cGVjdChpc1V1aWQoXCIxMjNlNDU2Ny1lODliLTQyZDMtYTQ1Ni00MjY2MTQxNzQwMDBcIikpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KGlzVXVpZChcIjEyM2U0NTY3LWU4OWItNDJkMy1iNDU2LTQyNjYxNDE3NDAwMFwiKSkudG9CZSh0cnVlKTtcbiAgICAvLyBUZXN0IHdpdGggaW52YWxpZCBVVUlEc1xuICAgIGV4cGVjdChpc1V1aWQoXCJcIikpLnRvQmUoZmFsc2UpO1xuICAgIGV4cGVjdChpc1V1aWQoXCJub3QtYS11dWlkXCIpKS50b0JlKGZhbHNlKTtcbiAgICBleHBlY3QoaXNVdWlkKFwiMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDAwXCIpKS50b0JlKGZhbHNlKTsgLy8gV3JvbmcgdmVyc2lvbiAobm90IDQpXG4gICAgZXhwZWN0KGlzVXVpZChcIjEyM2U0NTY3LWU4OWItNDJkMy1jNDU2LTQyNjYxNDE3NDAwMFwiKSkudG9CZShmYWxzZSk7IC8vIFdyb25nIHZhcmlhbnQgKG5vdCA4LCA5LCBhLCBvciBiKVxuICAgIGV4cGVjdChpc1V1aWQoXCIxMjNlNDU2Ny1lODliLTQyZDMtYTQ1Ni00MjY2MTQxNzQwMFwiKSkudG9CZShmYWxzZSk7IC8vIFRvbyBzaG9ydFxuICAgIGV4cGVjdChpc1V1aWQoXCIxMjNlNDU2Ny1lODliLTQyZDMtYTQ1Ni00MjY2MTQxNzQwMDAwXCIpKS50b0JlKGZhbHNlKTsgLy8gVG9vIGxvbmdcbiAgICBleHBlY3QoaXNVdWlkKFwiMTIzZTQ1NjctZTg5Yi00MmQzLWE0NTZfNDI2NjE0MTc0MDAwXCIpKS50b0JlKGZhbHNlKTsgLy8gV3JvbmcgZm9ybWF0ICh1bmRlcnNjb3JlIGluc3RlYWQgb2YgZGFzaClcbiAgICAvLyBUZXN0IHdpdGggdXBwZXJjYXNlIGxldHRlcnMgKHNob3VsZCBmYWlsIGFzIFVVSUQgc2hvdWxkIGJlIGxvd2VyY2FzZSlcbiAgICBleHBlY3QoaXNVdWlkKFwiMTIzRTQ1NjctRTg5Qi00MkQzLUE0NTYtNDI2NjE0MTc0MDAwXCIpKS50b0JlKGZhbHNlKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/auth.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewOAuthProviderOrScope: () => (/* binding */ addNewOAuthProviderOrScope),\n/* harmony export */   callOAuthCallback: () => (/* binding */ callOAuthCallback),\n/* harmony export */   signInWithOAuth: () => (/* binding */ signInWithOAuth)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/url */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cookie */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n// src/lib/auth.ts\n\n\n\n\n\n\n\nasync function signInWithOAuth(iface, options) {\n  const { codeChallenge, state } = await (0,_cookie__WEBPACK_IMPORTED_MODULE_5__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.redirectUrl, \"redirectUrl\"),\n    errorRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.errorRedirectUrl, \"errorRedirectUrl\"),\n    codeChallenge,\n    state,\n    type: \"authenticate\",\n    providerScope: options.providerScope\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nasync function addNewOAuthProviderOrScope(iface, options, session) {\n  const { codeChallenge, state } = await (0,_cookie__WEBPACK_IMPORTED_MODULE_5__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.redirectUrl, \"redirectUrl\"),\n    errorRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.errorRedirectUrl, \"errorRedirectUrl\"),\n    afterCallbackRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(window.location.href, \"afterCallbackRedirectUrl\"),\n    codeChallenge,\n    state,\n    type: \"link\",\n    session,\n    providerScope: options.providerScope\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nfunction consumeOAuthCallbackQueryParams() {\n  const requiredParams = [\"code\", \"state\"];\n  const originalUrl = new URL(window.location.href);\n  for (const param of requiredParams) {\n    if (!originalUrl.searchParams.has(param)) {\n      console.warn(new Error(`Missing required query parameter on OAuth callback: ${param}. Maybe you opened or reloaded the oauth-callback page from your history?`));\n      return null;\n    }\n  }\n  const expectedState = originalUrl.searchParams.get(\"state\") ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"This should never happen; isn't state required above?\");\n  const cookieResult = (0,_cookie__WEBPACK_IMPORTED_MODULE_5__.consumeVerifierAndStateCookie)(expectedState);\n  if (!cookieResult) {\n    console.warn((0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_4__.deindent)`\n      Stack found an outer OAuth callback state in the query parameters, but not in cookies.\n      \n      This could have multiple reasons:\n        - The cookie expired, because the OAuth flow took too long.\n        - The user's browser deleted the cookie, either manually or because of a very strict cookie policy.\n        - The cookie was already consumed by this page, and the user already logged in.\n        - You are using another OAuth client library with the same callback URL as Stack.\n        - The user opened the OAuth callback page from their history.\n\n      Either way, it is probably safe to ignore this warning unless you are debugging an OAuth issue.\n    `);\n    return null;\n  }\n  const newUrl = new URL(originalUrl);\n  for (const param of requiredParams) {\n    newUrl.searchParams.delete(param);\n  }\n  window.history.replaceState({}, \"\", newUrl.toString());\n  return {\n    originalUrl,\n    codeVerifier: cookieResult.codeVerifier,\n    state: expectedState\n  };\n}\nasync function callOAuthCallback(iface, redirectUrl) {\n  const consumed = consumeOAuthCallbackQueryParams();\n  if (!consumed) return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(void 0);\n  try {\n    return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(await iface.callOAuthCallback({\n      oauthParams: consumed.originalUrl.searchParams,\n      redirectUri: (0,_utils_url__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(redirectUrl, \"redirectUri\"),\n      codeVerifier: consumed.codeVerifier,\n      state: consumed.state\n    }));\n  } catch (e) {\n    if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownError) {\n      throw e;\n    }\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Error signing in during OAuth callback. Please try again.\", { cause: e });\n  }\n}\n\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDc0Q7QUFDcUM7QUFDZjtBQUNQO0FBQ0U7QUFDbkI7QUFDMkI7QUFDL0U7QUFDQSxVQUFVLHVCQUF1QixRQUFRLDZEQUFvQjtBQUM3RDtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFvQjtBQUNyQyxzQkFBc0IsZ0VBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsUUFBUSwwRkFBWTtBQUNwQjtBQUNBO0FBQ0EsVUFBVSx1QkFBdUIsUUFBUSw2REFBb0I7QUFDN0Q7QUFDQTtBQUNBLGlCQUFpQixnRUFBb0I7QUFDckMsc0JBQXNCLGdFQUFvQjtBQUMxQyw4QkFBOEIsZ0VBQW9CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLDBGQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixNQUFNO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxvRkFBUSw0QkFBNEI7QUFDckcsdUJBQXVCLHNFQUE2QjtBQUNwRDtBQUNBLGlCQUFpQixxRkFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwrRUFBTTtBQUM5QjtBQUNBLFdBQVcsK0VBQU07QUFDakI7QUFDQSxtQkFBbUIsZ0VBQW9CO0FBQ3ZDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKLHFCQUFxQixnRUFBVTtBQUMvQjtBQUNBO0FBQ0EsY0FBYywyRkFBbUIsZ0VBQWdFLFVBQVU7QUFDM0c7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxhdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvYXV0aC50c1xuaW1wb3J0IHsgS25vd25FcnJvciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWRcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIHRocm93RXJyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2Vycm9yc1wiO1xuaW1wb3J0IHsgbmV2ZXJSZXNvbHZlIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3Byb21pc2VzXCI7XG5pbXBvcnQgeyBSZXN1bHQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVzdWx0c1wiO1xuaW1wb3J0IHsgZGVpbmRlbnQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvc3RyaW5nc1wiO1xuaW1wb3J0IHsgY29uc3RydWN0UmVkaXJlY3RVcmwgfSBmcm9tIFwiLi4vdXRpbHMvdXJsXCI7XG5pbXBvcnQgeyBjb25zdW1lVmVyaWZpZXJBbmRTdGF0ZUNvb2tpZSwgc2F2ZVZlcmlmaWVyQW5kU3RhdGUgfSBmcm9tIFwiLi9jb29raWVcIjtcbmFzeW5jIGZ1bmN0aW9uIHNpZ25JbldpdGhPQXV0aChpZmFjZSwgb3B0aW9ucykge1xuICBjb25zdCB7IGNvZGVDaGFsbGVuZ2UsIHN0YXRlIH0gPSBhd2FpdCBzYXZlVmVyaWZpZXJBbmRTdGF0ZSgpO1xuICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGlmYWNlLmdldE9BdXRoVXJsKHtcbiAgICBwcm92aWRlcjogb3B0aW9ucy5wcm92aWRlcixcbiAgICByZWRpcmVjdFVybDogY29uc3RydWN0UmVkaXJlY3RVcmwob3B0aW9ucy5yZWRpcmVjdFVybCwgXCJyZWRpcmVjdFVybFwiKSxcbiAgICBlcnJvclJlZGlyZWN0VXJsOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChvcHRpb25zLmVycm9yUmVkaXJlY3RVcmwsIFwiZXJyb3JSZWRpcmVjdFVybFwiKSxcbiAgICBjb2RlQ2hhbGxlbmdlLFxuICAgIHN0YXRlLFxuICAgIHR5cGU6IFwiYXV0aGVudGljYXRlXCIsXG4gICAgcHJvdmlkZXJTY29wZTogb3B0aW9ucy5wcm92aWRlclNjb3BlXG4gIH0pO1xuICB3aW5kb3cubG9jYXRpb24uYXNzaWduKGxvY2F0aW9uKTtcbiAgYXdhaXQgbmV2ZXJSZXNvbHZlKCk7XG59XG5hc3luYyBmdW5jdGlvbiBhZGROZXdPQXV0aFByb3ZpZGVyT3JTY29wZShpZmFjZSwgb3B0aW9ucywgc2Vzc2lvbikge1xuICBjb25zdCB7IGNvZGVDaGFsbGVuZ2UsIHN0YXRlIH0gPSBhd2FpdCBzYXZlVmVyaWZpZXJBbmRTdGF0ZSgpO1xuICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGlmYWNlLmdldE9BdXRoVXJsKHtcbiAgICBwcm92aWRlcjogb3B0aW9ucy5wcm92aWRlcixcbiAgICByZWRpcmVjdFVybDogY29uc3RydWN0UmVkaXJlY3RVcmwob3B0aW9ucy5yZWRpcmVjdFVybCwgXCJyZWRpcmVjdFVybFwiKSxcbiAgICBlcnJvclJlZGlyZWN0VXJsOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChvcHRpb25zLmVycm9yUmVkaXJlY3RVcmwsIFwiZXJyb3JSZWRpcmVjdFVybFwiKSxcbiAgICBhZnRlckNhbGxiYWNrUmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKHdpbmRvdy5sb2NhdGlvbi5ocmVmLCBcImFmdGVyQ2FsbGJhY2tSZWRpcmVjdFVybFwiKSxcbiAgICBjb2RlQ2hhbGxlbmdlLFxuICAgIHN0YXRlLFxuICAgIHR5cGU6IFwibGlua1wiLFxuICAgIHNlc3Npb24sXG4gICAgcHJvdmlkZXJTY29wZTogb3B0aW9ucy5wcm92aWRlclNjb3BlXG4gIH0pO1xuICB3aW5kb3cubG9jYXRpb24uYXNzaWduKGxvY2F0aW9uKTtcbiAgYXdhaXQgbmV2ZXJSZXNvbHZlKCk7XG59XG5mdW5jdGlvbiBjb25zdW1lT0F1dGhDYWxsYmFja1F1ZXJ5UGFyYW1zKCkge1xuICBjb25zdCByZXF1aXJlZFBhcmFtcyA9IFtcImNvZGVcIiwgXCJzdGF0ZVwiXTtcbiAgY29uc3Qgb3JpZ2luYWxVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgZm9yIChjb25zdCBwYXJhbSBvZiByZXF1aXJlZFBhcmFtcykge1xuICAgIGlmICghb3JpZ2luYWxVcmwuc2VhcmNoUGFyYW1zLmhhcyhwYXJhbSkpIHtcbiAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IoYE1pc3NpbmcgcmVxdWlyZWQgcXVlcnkgcGFyYW1ldGVyIG9uIE9BdXRoIGNhbGxiYWNrOiAke3BhcmFtfS4gTWF5YmUgeW91IG9wZW5lZCBvciByZWxvYWRlZCB0aGUgb2F1dGgtY2FsbGJhY2sgcGFnZSBmcm9tIHlvdXIgaGlzdG9yeT9gKSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbiAgY29uc3QgZXhwZWN0ZWRTdGF0ZSA9IG9yaWdpbmFsVXJsLnNlYXJjaFBhcmFtcy5nZXQoXCJzdGF0ZVwiKSA/PyB0aHJvd0VycihcIlRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbjsgaXNuJ3Qgc3RhdGUgcmVxdWlyZWQgYWJvdmU/XCIpO1xuICBjb25zdCBjb29raWVSZXN1bHQgPSBjb25zdW1lVmVyaWZpZXJBbmRTdGF0ZUNvb2tpZShleHBlY3RlZFN0YXRlKTtcbiAgaWYgKCFjb29raWVSZXN1bHQpIHtcbiAgICBjb25zb2xlLndhcm4oZGVpbmRlbnRgXG4gICAgICBTdGFjayBmb3VuZCBhbiBvdXRlciBPQXV0aCBjYWxsYmFjayBzdGF0ZSBpbiB0aGUgcXVlcnkgcGFyYW1ldGVycywgYnV0IG5vdCBpbiBjb29raWVzLlxuICAgICAgXG4gICAgICBUaGlzIGNvdWxkIGhhdmUgbXVsdGlwbGUgcmVhc29uczpcbiAgICAgICAgLSBUaGUgY29va2llIGV4cGlyZWQsIGJlY2F1c2UgdGhlIE9BdXRoIGZsb3cgdG9vayB0b28gbG9uZy5cbiAgICAgICAgLSBUaGUgdXNlcidzIGJyb3dzZXIgZGVsZXRlZCB0aGUgY29va2llLCBlaXRoZXIgbWFudWFsbHkgb3IgYmVjYXVzZSBvZiBhIHZlcnkgc3RyaWN0IGNvb2tpZSBwb2xpY3kuXG4gICAgICAgIC0gVGhlIGNvb2tpZSB3YXMgYWxyZWFkeSBjb25zdW1lZCBieSB0aGlzIHBhZ2UsIGFuZCB0aGUgdXNlciBhbHJlYWR5IGxvZ2dlZCBpbi5cbiAgICAgICAgLSBZb3UgYXJlIHVzaW5nIGFub3RoZXIgT0F1dGggY2xpZW50IGxpYnJhcnkgd2l0aCB0aGUgc2FtZSBjYWxsYmFjayBVUkwgYXMgU3RhY2suXG4gICAgICAgIC0gVGhlIHVzZXIgb3BlbmVkIHRoZSBPQXV0aCBjYWxsYmFjayBwYWdlIGZyb20gdGhlaXIgaGlzdG9yeS5cblxuICAgICAgRWl0aGVyIHdheSwgaXQgaXMgcHJvYmFibHkgc2FmZSB0byBpZ25vcmUgdGhpcyB3YXJuaW5nIHVubGVzcyB5b3UgYXJlIGRlYnVnZ2luZyBhbiBPQXV0aCBpc3N1ZS5cbiAgICBgKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBuZXdVcmwgPSBuZXcgVVJMKG9yaWdpbmFsVXJsKTtcbiAgZm9yIChjb25zdCBwYXJhbSBvZiByZXF1aXJlZFBhcmFtcykge1xuICAgIG5ld1VybC5zZWFyY2hQYXJhbXMuZGVsZXRlKHBhcmFtKTtcbiAgfVxuICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUoe30sIFwiXCIsIG5ld1VybC50b1N0cmluZygpKTtcbiAgcmV0dXJuIHtcbiAgICBvcmlnaW5hbFVybCxcbiAgICBjb2RlVmVyaWZpZXI6IGNvb2tpZVJlc3VsdC5jb2RlVmVyaWZpZXIsXG4gICAgc3RhdGU6IGV4cGVjdGVkU3RhdGVcbiAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGNhbGxPQXV0aENhbGxiYWNrKGlmYWNlLCByZWRpcmVjdFVybCkge1xuICBjb25zdCBjb25zdW1lZCA9IGNvbnN1bWVPQXV0aENhbGxiYWNrUXVlcnlQYXJhbXMoKTtcbiAgaWYgKCFjb25zdW1lZCkgcmV0dXJuIFJlc3VsdC5vayh2b2lkIDApO1xuICB0cnkge1xuICAgIHJldHVybiBSZXN1bHQub2soYXdhaXQgaWZhY2UuY2FsbE9BdXRoQ2FsbGJhY2soe1xuICAgICAgb2F1dGhQYXJhbXM6IGNvbnN1bWVkLm9yaWdpbmFsVXJsLnNlYXJjaFBhcmFtcyxcbiAgICAgIHJlZGlyZWN0VXJpOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChyZWRpcmVjdFVybCwgXCJyZWRpcmVjdFVyaVwiKSxcbiAgICAgIGNvZGVWZXJpZmllcjogY29uc3VtZWQuY29kZVZlcmlmaWVyLFxuICAgICAgc3RhdGU6IGNvbnN1bWVkLnN0YXRlXG4gICAgfSkpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBLbm93bkVycm9yKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkVycm9yIHNpZ25pbmcgaW4gZHVyaW5nIE9BdXRoIGNhbGxiYWNrLiBQbGVhc2UgdHJ5IGFnYWluLlwiLCB7IGNhdXNlOiBlIH0pO1xuICB9XG59XG5leHBvcnQge1xuICBhZGROZXdPQXV0aFByb3ZpZGVyT3JTY29wZSxcbiAgY2FsbE9BdXRoQ2FsbGJhY2ssXG4gIHNpZ25JbldpdGhPQXV0aFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/cookie.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   consumeVerifierAndStateCookie: () => (/* binding */ consumeVerifierAndStateCookie),\n/* harmony export */   createBrowserCookieHelper: () => (/* binding */ createBrowserCookieHelper),\n/* harmony export */   createCookieHelper: () => (/* binding */ createCookieHelper),\n/* harmony export */   createPlaceholderCookieHelper: () => (/* binding */ createPlaceholderCookieHelper),\n/* harmony export */   deleteCookie: () => (/* binding */ deleteCookie),\n/* harmony export */   deleteCookieClient: () => (/* binding */ deleteCookieClient),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   getCookieClient: () => (/* binding */ getCookieClient),\n/* harmony export */   saveVerifierAndState: () => (/* binding */ saveVerifierAndState),\n/* harmony export */   setCookie: () => (/* binding */ setCookie),\n/* harmony export */   setCookieClient: () => (/* binding */ setCookieClient),\n/* harmony export */   setOrDeleteCookie: () => (/* binding */ setOrDeleteCookie),\n/* harmony export */   setOrDeleteCookieClient: () => (/* binding */ setOrDeleteCookieClient)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-sc/force-react-server */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n// src/lib/cookie.ts\n\n\n\n\n\n// ../../node_modules/.pnpm/oauth4webapi@2.10.4/node_modules/oauth4webapi/build/index.js\nvar USER_AGENT;\nif (typeof navigator === \"undefined\" || !navigator.userAgent?.startsWith?.(\"Mozilla/5.0 \")) {\n  const NAME = \"oauth4webapi\";\n  const VERSION = \"v2.10.4\";\n  USER_AGENT = `${NAME}/${VERSION}`;\n}\nvar clockSkew = Symbol();\nvar clockTolerance = Symbol();\nvar customFetch = Symbol();\nvar useMtlsAlias = Symbol();\nvar encoder = new TextEncoder();\nvar decoder = new TextDecoder();\nfunction buf(input) {\n  if (typeof input === \"string\") {\n    return encoder.encode(input);\n  }\n  return decoder.decode(input);\n}\nvar CHUNK_SIZE = 32768;\nfunction encodeBase64Url(input) {\n  if (input instanceof ArrayBuffer) {\n    input = new Uint8Array(input);\n  }\n  const arr = [];\n  for (let i = 0; i < input.byteLength; i += CHUNK_SIZE) {\n    arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n  }\n  return btoa(arr.join(\"\")).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction decodeBase64Url(input) {\n  try {\n    const binary = atob(input.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\"));\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n  } catch (cause) {\n    throw new OPE(\"The input to be decoded is not correctly encoded.\", { cause });\n  }\n}\nfunction b64u(input) {\n  if (typeof input === \"string\") {\n    return decodeBase64Url(input);\n  }\n  return encodeBase64Url(input);\n}\nvar LRU = class {\n  constructor(maxSize) {\n    this.cache = /* @__PURE__ */ new Map();\n    this._cache = /* @__PURE__ */ new Map();\n    this.maxSize = maxSize;\n  }\n  get(key) {\n    let v = this.cache.get(key);\n    if (v) {\n      return v;\n    }\n    if (v = this._cache.get(key)) {\n      this.update(key, v);\n      return v;\n    }\n    return void 0;\n  }\n  has(key) {\n    return this.cache.has(key) || this._cache.has(key);\n  }\n  set(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n    } else {\n      this.update(key, value);\n    }\n    return this;\n  }\n  delete(key) {\n    if (this.cache.has(key)) {\n      return this.cache.delete(key);\n    }\n    if (this._cache.has(key)) {\n      return this._cache.delete(key);\n    }\n    return false;\n  }\n  update(key, value) {\n    this.cache.set(key, value);\n    if (this.cache.size >= this.maxSize) {\n      this._cache = this.cache;\n      this.cache = /* @__PURE__ */ new Map();\n    }\n  }\n};\nvar OperationProcessingError = class extends Error {\n  constructor(message, options) {\n    super(message, options);\n    this.name = this.constructor.name;\n    Error.captureStackTrace?.(this, this.constructor);\n  }\n};\nvar OPE = OperationProcessingError;\nvar dpopNonces = new LRU(100);\nfunction validateString(input) {\n  return typeof input === \"string\" && input.length !== 0;\n}\nfunction randomBytes() {\n  return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction generateRandomCodeVerifier() {\n  return randomBytes();\n}\nfunction generateRandomState() {\n  return randomBytes();\n}\nasync function calculatePKCECodeChallenge(codeVerifier) {\n  if (!validateString(codeVerifier)) {\n    throw new TypeError('\"codeVerifier\" must be a non-empty string');\n  }\n  return b64u(await crypto.subtle.digest(\"SHA-256\", buf(codeVerifier)));\n}\nvar skipSubjectCheck = Symbol();\nvar expectNoNonce = Symbol();\nvar skipAuthTimeCheck = Symbol();\nvar noSignatureCheck = Symbol();\nvar skipStateCheck = Symbol();\nvar expectNoState = Symbol();\n\n// src/lib/cookie.ts\nfunction ensureClient() {\n  if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n    throw new Error(\"cookieClient functions can only be called in a browser environment, yet window is undefined\");\n  }\n}\nasync function createPlaceholderCookieHelper() {\n  function throwError() {\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Throwing cookie helper is just a placeholder. This should never be called\");\n  }\n  return {\n    get: throwError,\n    set: throwError,\n    setOrDelete: throwError,\n    delete: throwError\n  };\n}\nasync function createCookieHelper() {\n  if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n    return createBrowserCookieHelper();\n  } else {\n    return createNextCookieHelper(\n      await (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.cookies)(),\n      await (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.headers)()\n    );\n  }\n}\nfunction createBrowserCookieHelper() {\n  return {\n    get: getCookieClient,\n    set: setCookieClient,\n    setOrDelete: setOrDeleteCookieClient,\n    delete: deleteCookieClient\n  };\n}\nfunction handleCookieError(e, options) {\n  if (e instanceof Error && e.message.includes(\"Cookies can only be modified in\")) {\n    if (options.noOpIfServerComponent) {\n    } else {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Attempted to set cookie in server component. Pass { noOpIfServerComponent: true } in the options of Stack's cookie functions if this is intentional and you want to ignore this error. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options\");\n    }\n  } else {\n    throw e;\n  }\n}\nfunction createNextCookieHelper(rscCookiesAwaited, rscHeadersAwaited) {\n  const cookieHelper = {\n    get: (name) => {\n      try {\n        rscCookiesAwaited.set(\"stack-is-https\", \"true\", { secure: true });\n      } catch (e) {\n        if (typeof e === \"object\" && e !== null && \"message\" in e && typeof e.message === \"string\" && e.message.includes(\"Cookies can only be modified in a Server Action or Route Handler\")) {\n        } else {\n          throw e;\n        }\n      }\n      return rscCookiesAwaited.get(name)?.value ?? null;\n    },\n    set: (name, value, options) => {\n      let isSecureCookie = !!rscCookiesAwaited.get(\"stack-is-https\");\n      if (rscHeadersAwaited.get(\"x-forwarded-proto\") === \"https\") {\n        isSecureCookie = true;\n      }\n      try {\n        rscCookiesAwaited.set(name, value, {\n          secure: isSecureCookie,\n          maxAge: options.maxAge\n        });\n      } catch (e) {\n        handleCookieError(e, options);\n      }\n    },\n    setOrDelete(name, value, options = {}) {\n      if (value === null) {\n        this.delete(name, options);\n      } else {\n        this.set(name, value, options);\n      }\n    },\n    delete(name, options = {}) {\n      try {\n        rscCookiesAwaited.delete(name);\n      } catch (e) {\n        handleCookieError(e, options);\n      }\n    }\n  };\n  return cookieHelper;\n}\nfunction getCookieClient(name) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(\"stack-is-https\", \"true\", { secure: true });\n  return js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(name) ?? null;\n}\nasync function getCookie(name) {\n  const cookieHelper = await createCookieHelper();\n  return cookieHelper.get(name);\n}\nfunction setOrDeleteCookieClient(name, value, options = {}) {\n  ensureClient();\n  if (value === null) {\n    deleteCookieClient(name, options);\n  } else {\n    setCookieClient(name, value, options);\n  }\n}\nasync function setOrDeleteCookie(name, value, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.setOrDelete(name, value, options);\n}\nfunction deleteCookieClient(name, options = {}) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].remove(name);\n}\nasync function deleteCookie(name, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.delete(name, options);\n}\nfunction setCookieClient(name, value, options = {}) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(name, value, {\n    expires: options.maxAge === void 0 ? void 0 : new Date(Date.now() + options.maxAge * 1e3)\n  });\n}\nasync function setCookie(name, value, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.set(name, value, options);\n}\nasync function saveVerifierAndState() {\n  const codeVerifier = generateRandomCodeVerifier();\n  const codeChallenge = await calculatePKCECodeChallenge(codeVerifier);\n  const state = generateRandomState();\n  await setCookie(\"stack-oauth-outer-\" + state, codeVerifier, { maxAge: 60 * 60 });\n  return {\n    codeChallenge,\n    state\n  };\n}\nfunction consumeVerifierAndStateCookie(state) {\n  ensureClient();\n  const cookieName = \"stack-oauth-outer-\" + state;\n  const codeVerifier = getCookieClient(cookieName);\n  if (!codeVerifier) {\n    return null;\n  }\n  deleteCookieClient(cookieName);\n  return {\n    codeVerifier\n  };\n}\n\n//# sourceMappingURL=cookie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/hooks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStackApp: () => (/* binding */ useStackApp),\n/* harmony export */   useUser: () => (/* binding */ useUser)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _providers_stack_provider_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../providers/stack-provider-client */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\");\n// src/lib/hooks.tsx\n\n\nfunction useUser(options = {}) {\n  const stackApp = useStackApp(options);\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  if (options.projectIdMustMatch === \"internal\") {\n    return stackApp.useUser(options);\n  } else {\n    return stackApp.useUser(options);\n  }\n}\nfunction useStackApp(options = {}) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_providers_stack_provider_client__WEBPACK_IMPORTED_MODULE_1__.StackContext);\n  if (context === null) {\n    throw new Error(\"useStackApp must be used within a StackProvider\");\n  }\n  const stackApp = context.app;\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  return stackApp;\n}\n\n//# sourceMappingURL=hooks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvaG9va3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNtQztBQUMrQjtBQUNsRSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyxrQkFBa0IsaURBQVUsQ0FBQywwRUFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcaG9va3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9ob29rcy50c3hcbmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFN0YWNrQ29udGV4dCB9IGZyb20gXCIuLi9wcm92aWRlcnMvc3RhY2stcHJvdmlkZXItY2xpZW50XCI7XG5mdW5jdGlvbiB1c2VVc2VyKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBzdGFja0FwcCA9IHVzZVN0YWNrQXBwKG9wdGlvbnMpO1xuICBpZiAob3B0aW9ucy5wcm9qZWN0SWRNdXN0TWF0Y2ggJiYgc3RhY2tBcHAucHJvamVjdElkICE9PSBvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgcHJvamVjdCBJRCBpbiB1c2VTdGFja0FwcDogXCIgKyBzdGFja0FwcC5wcm9qZWN0SWQpO1xuICB9XG4gIGlmIChvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCA9PT0gXCJpbnRlcm5hbFwiKSB7XG4gICAgcmV0dXJuIHN0YWNrQXBwLnVzZVVzZXIob3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHN0YWNrQXBwLnVzZVVzZXIob3B0aW9ucyk7XG4gIH1cbn1cbmZ1bmN0aW9uIHVzZVN0YWNrQXBwKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChTdGFja0NvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZVN0YWNrQXBwIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBTdGFja1Byb3ZpZGVyXCIpO1xuICB9XG4gIGNvbnN0IHN0YWNrQXBwID0gY29udGV4dC5hcHA7XG4gIGlmIChvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCAmJiBzdGFja0FwcC5wcm9qZWN0SWQgIT09IG9wdGlvbnMucHJvamVjdElkTXVzdE1hdGNoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBwcm9qZWN0IElEIGluIHVzZVN0YWNrQXBwOiBcIiArIHN0YWNrQXBwLnByb2plY3RJZCk7XG4gIH1cbiAgcmV0dXJuIHN0YWNrQXBwO1xufVxuZXhwb3J0IHtcbiAgdXNlU3RhY2tBcHAsXG4gIHVzZVVzZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiKeyCreationOptionsToCrud: () => (/* binding */ apiKeyCreationOptionsToCrud),\n/* harmony export */   apiKeyUpdateOptionsToCrud: () => (/* binding */ apiKeyUpdateOptionsToCrud)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n// src/lib/stack-app/api-keys/index.ts\n\nasync function apiKeyCreationOptionsToCrud(type, userIdOrTeamId, options) {\n  return {\n    description: options.description,\n    expires_at_millis: options.expiresAt == null ? options.expiresAt : options.expiresAt.getTime(),\n    is_public: options.isPublic,\n    ...type === \"user\" ? { user_id: userIdOrTeamId } : { team_id: userIdOrTeamId }\n  };\n}\nasync function apiKeyUpdateOptionsToCrud(type, options) {\n  return (0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_0__.filterUndefined)({\n    description: options.description,\n    expires_at_millis: options.expiresAt == null ? options.expiresAt : options.expiresAt.getTime(),\n    revoked: options.revoked\n  });\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwaS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQzhFO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMEJBQTBCLElBQUk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsU0FBUyw0RkFBZTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcGkta2V5c1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvYXBpLWtleXMvaW5kZXgudHNcbmltcG9ydCB7IGZpbHRlclVuZGVmaW5lZCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9vYmplY3RzXCI7XG5hc3luYyBmdW5jdGlvbiBhcGlLZXlDcmVhdGlvbk9wdGlvbnNUb0NydWQodHlwZSwgdXNlcklkT3JUZWFtSWQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkZXNjcmlwdGlvbjogb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICBleHBpcmVzX2F0X21pbGxpczogb3B0aW9ucy5leHBpcmVzQXQgPT0gbnVsbCA/IG9wdGlvbnMuZXhwaXJlc0F0IDogb3B0aW9ucy5leHBpcmVzQXQuZ2V0VGltZSgpLFxuICAgIGlzX3B1YmxpYzogb3B0aW9ucy5pc1B1YmxpYyxcbiAgICAuLi50eXBlID09PSBcInVzZXJcIiA/IHsgdXNlcl9pZDogdXNlcklkT3JUZWFtSWQgfSA6IHsgdGVhbV9pZDogdXNlcklkT3JUZWFtSWQgfVxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gYXBpS2V5VXBkYXRlT3B0aW9uc1RvQ3J1ZCh0eXBlLCBvcHRpb25zKSB7XG4gIHJldHVybiBmaWx0ZXJVbmRlZmluZWQoe1xuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGV4cGlyZXNfYXRfbWlsbGlzOiBvcHRpb25zLmV4cGlyZXNBdCA9PSBudWxsID8gb3B0aW9ucy5leHBpcmVzQXQgOiBvcHRpb25zLmV4cGlyZXNBdC5nZXRUaW1lKCksXG4gICAgcmV2b2tlZDogb3B0aW9ucy5yZXZva2VkXG4gIH0pO1xufVxuZXhwb3J0IHtcbiAgYXBpS2V5Q3JlYXRpb25PcHRpb25zVG9DcnVkLFxuICBhcGlLZXlVcGRhdGVPcHRpb25zVG9DcnVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackAdminAppImplIncomplete: () => (/* binding */ _StackAdminAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/helpers/production-mode */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var _email_templates__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../email-templates */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/email-templates/index.js\");\n/* harmony import */ var _internal_api_keys__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../internal-api-keys */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js\");\n/* harmony import */ var _permissions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../permissions */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js\");\n/* harmony import */ var _projects__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../projects */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n/* harmony import */ var _server_app_impl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./server-app-impl */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\");\n// src/lib/stack-app/apps/implementations/admin-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _StackAdminAppImplIncomplete = class extends _server_app_impl__WEBPACK_IMPORTED_MODULE_6__._StackServerAppImplIncomplete {\n  constructor(options) {\n    super({\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.StackAdminInterface({\n        getBaseUrl: () => (0,_common__WEBPACK_IMPORTED_MODULE_7__.getBaseUrl)(options.baseUrl),\n        projectId: options.projectId ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultProjectId)(),\n        extraRequestHeaders: options.extraRequestHeaders ?? {},\n        clientVersion: _common__WEBPACK_IMPORTED_MODULE_7__.clientVersion,\n        ...\"projectOwnerSession\" in options ? {\n          projectOwnerSession: options.projectOwnerSession\n        } : {\n          publishableClientKey: options.publishableClientKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultPublishableClientKey)(),\n          secretServerKey: options.secretServerKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultSecretServerKey)(),\n          superSecretAdminKey: options.superSecretAdminKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultSuperSecretAdminKey)()\n        }\n      }),\n      baseUrl: options.baseUrl,\n      extraRequestHeaders: options.extraRequestHeaders,\n      projectId: options.projectId,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn,\n      redirectMethod: options.redirectMethod\n    });\n    this._adminProjectCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getProject();\n    });\n    this._internalApiKeysCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      const res = await this._interface.listInternalApiKeys();\n      return res;\n    });\n    this._adminEmailTemplatesCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listEmailTemplates();\n    });\n    this._adminTeamPermissionDefinitionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listTeamPermissionDefinitions();\n    });\n    this._adminProjectPermissionDefinitionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listProjectPermissionDefinitions();\n    });\n    this._svixTokenCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getSvixToken();\n    });\n    this._metricsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getMetrics();\n    });\n  }\n  _adminOwnedProjectFromCrud(data, onRefresh) {\n    if (this._tokenStoreInit !== null) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Owned apps must always have tokenStore === null \\u2014 did you not create this project with app._createOwnedApp()?\");\n      ;\n    }\n    return {\n      ...this._adminProjectFromCrud(data, onRefresh),\n      app: this\n    };\n  }\n  _adminProjectFromCrud(data, onRefresh) {\n    if (data.id !== this.projectId) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(`The project ID of the provided project JSON (${data.id}) does not match the project ID of the app (${this.projectId})!`);\n    }\n    const app = this;\n    return {\n      id: data.id,\n      displayName: data.display_name,\n      description: data.description,\n      createdAt: new Date(data.created_at_millis),\n      userCount: data.user_count,\n      isProductionMode: data.is_production_mode,\n      config: {\n        id: data.config.id,\n        signUpEnabled: data.config.sign_up_enabled,\n        credentialEnabled: data.config.credential_enabled,\n        magicLinkEnabled: data.config.magic_link_enabled,\n        passkeyEnabled: data.config.passkey_enabled,\n        clientTeamCreationEnabled: data.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: data.config.client_user_deletion_enabled,\n        allowLocalhost: data.config.allow_localhost,\n        oauthAccountMergeStrategy: data.config.oauth_account_merge_strategy,\n        allowUserApiKeys: data.config.allow_user_api_keys,\n        allowTeamApiKeys: data.config.allow_team_api_keys,\n        oauthProviders: data.config.oauth_providers.map((p) => p.type === \"shared\" ? {\n          id: p.id,\n          enabled: p.enabled,\n          type: \"shared\"\n        } : {\n          id: p.id,\n          enabled: p.enabled,\n          type: \"standard\",\n          clientId: p.client_id ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Client ID is missing\"),\n          clientSecret: p.client_secret ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Client secret is missing\"),\n          facebookConfigId: p.facebook_config_id,\n          microsoftTenantId: p.microsoft_tenant_id\n        }),\n        emailConfig: data.config.email_config.type === \"shared\" ? {\n          type: \"shared\"\n        } : {\n          type: \"standard\",\n          host: data.config.email_config.host ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email host is missing\"),\n          port: data.config.email_config.port ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email port is missing\"),\n          username: data.config.email_config.username ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email username is missing\"),\n          password: data.config.email_config.password ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email password is missing\"),\n          senderName: data.config.email_config.sender_name ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email sender name is missing\"),\n          senderEmail: data.config.email_config.sender_email ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email sender email is missing\")\n        },\n        domains: data.config.domains.map((d) => ({\n          domain: d.domain,\n          handlerPath: d.handler_path\n        })),\n        createTeamOnSignUp: data.config.create_team_on_sign_up,\n        teamCreatorDefaultPermissions: data.config.team_creator_default_permissions,\n        teamMemberDefaultPermissions: data.config.team_member_default_permissions,\n        userDefaultPermissions: data.config.user_default_permissions\n      },\n      async update(update) {\n        await app._interface.updateProject((0,_projects__WEBPACK_IMPORTED_MODULE_8__.adminProjectUpdateOptionsToCrud)(update));\n        await onRefresh();\n      },\n      async delete() {\n        await app._interface.deleteProject();\n      },\n      async getProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__.getProductionModeErrors)(data);\n      },\n      useProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__.getProductionModeErrors)(data);\n      }\n    };\n  }\n  _adminEmailTemplateFromCrud(data) {\n    return {\n      type: data.type,\n      subject: data.subject,\n      content: data.content,\n      isDefault: data.is_default\n    };\n  }\n  async getProject() {\n    return this._adminProjectFromCrud(\n      _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminProjectCache.getOrWait([], \"write-only\")),\n      () => this._refreshProject()\n    );\n  }\n  useProject() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminProjectCache, [], \"useProjectAdmin()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => this._adminProjectFromCrud(\n      crud,\n      () => this._refreshProject()\n    ), [crud]);\n  }\n  _createInternalApiKeyBaseFromCrud(data) {\n    const app = this;\n    return {\n      id: data.id,\n      description: data.description,\n      expiresAt: new Date(data.expires_at_millis),\n      manuallyRevokedAt: data.manually_revoked_at_millis ? new Date(data.manually_revoked_at_millis) : null,\n      createdAt: new Date(data.created_at_millis),\n      isValid() {\n        return this.whyInvalid() === null;\n      },\n      whyInvalid() {\n        if (this.expiresAt.getTime() < Date.now()) return \"expired\";\n        if (this.manuallyRevokedAt) return \"manually-revoked\";\n        return null;\n      },\n      async revoke() {\n        const res = await app._interface.revokeInternalApiKeyById(data.id);\n        await app._refreshInternalApiKeys();\n        return res;\n      }\n    };\n  }\n  _createInternalApiKeyFromCrud(data) {\n    return {\n      ...this._createInternalApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key ? { lastFour: data.publishable_client_key.last_four } : null,\n      secretServerKey: data.secret_server_key ? { lastFour: data.secret_server_key.last_four } : null,\n      superSecretAdminKey: data.super_secret_admin_key ? { lastFour: data.super_secret_admin_key.last_four } : null\n    };\n  }\n  _createInternalApiKeyFirstViewFromCrud(data) {\n    return {\n      ...this._createInternalApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key,\n      secretServerKey: data.secret_server_key,\n      superSecretAdminKey: data.super_secret_admin_key\n    };\n  }\n  async listInternalApiKeys() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._internalApiKeysCache.getOrWait([], \"write-only\"));\n    return crud.map((j) => this._createInternalApiKeyFromCrud(j));\n  }\n  useInternalApiKeys() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._internalApiKeysCache, [], \"useInternalApiKeys()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((j) => this._createInternalApiKeyFromCrud(j));\n    }, [crud]);\n  }\n  async createInternalApiKey(options) {\n    const crud = await this._interface.createInternalApiKey((0,_internal_api_keys__WEBPACK_IMPORTED_MODULE_9__.internalApiKeyCreateOptionsToCrud)(options));\n    await this._refreshInternalApiKeys();\n    return this._createInternalApiKeyFirstViewFromCrud(crud);\n  }\n  useEmailTemplates() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminEmailTemplatesCache, [], \"useEmailTemplates()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((j) => this._adminEmailTemplateFromCrud(j));\n    }, [crud]);\n  }\n  async listEmailTemplates() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminEmailTemplatesCache.getOrWait([], \"write-only\"));\n    return crud.map((j) => this._adminEmailTemplateFromCrud(j));\n  }\n  async updateEmailTemplate(type, data) {\n    await this._interface.updateEmailTemplate(type, (0,_email_templates__WEBPACK_IMPORTED_MODULE_10__.adminEmailTemplateUpdateOptionsToCrud)(data));\n    await this._adminEmailTemplatesCache.refresh([]);\n  }\n  async resetEmailTemplate(type) {\n    await this._interface.resetEmailTemplate(type);\n    await this._adminEmailTemplatesCache.refresh([]);\n  }\n  async createTeamPermissionDefinition(data) {\n    const crud = await this._interface.createTeamPermissionDefinition((0,_permissions__WEBPACK_IMPORTED_MODULE_11__.adminTeamPermissionDefinitionCreateOptionsToCrud)(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n    return this._serverTeamPermissionDefinitionFromCrud(crud);\n  }\n  async updateTeamPermissionDefinition(permissionId, data) {\n    await this._interface.updateTeamPermissionDefinition(permissionId, (0,_permissions__WEBPACK_IMPORTED_MODULE_11__.adminTeamPermissionDefinitionUpdateOptionsToCrud)(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async deleteTeamPermissionDefinition(permissionId) {\n    await this._interface.deleteTeamPermissionDefinition(permissionId);\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async listTeamPermissionDefinitions() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminTeamPermissionDefinitionsCache.getOrWait([], \"write-only\"));\n    return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n  }\n  useTeamPermissionDefinitions() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminTeamPermissionDefinitionsCache, [], \"usePermissions()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n    }, [crud]);\n  }\n  async createProjectPermissionDefinition(data) {\n    const crud = await this._interface.createProjectPermissionDefinition((0,_permissions__WEBPACK_IMPORTED_MODULE_11__.adminProjectPermissionDefinitionCreateOptionsToCrud)(data));\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n    return this._serverProjectPermissionDefinitionFromCrud(crud);\n  }\n  async updateProjectPermissionDefinition(permissionId, data) {\n    await this._interface.updateProjectPermissionDefinition(permissionId, (0,_permissions__WEBPACK_IMPORTED_MODULE_11__.adminProjectPermissionDefinitionUpdateOptionsToCrud)(data));\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n  }\n  async deleteProjectPermissionDefinition(permissionId) {\n    await this._interface.deleteProjectPermissionDefinition(permissionId);\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n  }\n  async listProjectPermissionDefinitions() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminProjectPermissionDefinitionsCache.getOrWait([], \"write-only\"));\n    return crud.map((p) => this._serverProjectPermissionDefinitionFromCrud(p));\n  }\n  useProjectPermissionDefinitions() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminProjectPermissionDefinitionsCache, [], \"useProjectPermissions()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((p) => this._serverProjectPermissionDefinitionFromCrud(p));\n    }, [crud]);\n  }\n  useSvixToken() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._svixTokenCache, [], \"useSvixToken()\");\n    return crud.token;\n  }\n  async _refreshProject() {\n    await Promise.all([\n      super._refreshProject(),\n      this._adminProjectCache.refresh([])\n    ]);\n  }\n  async _refreshInternalApiKeys() {\n    await this._internalApiKeysCache.refresh([]);\n  }\n  get [_common__WEBPACK_IMPORTED_MODULE_12__.stackAppInternalsSymbol]() {\n    return {\n      ...super[_common__WEBPACK_IMPORTED_MODULE_12__.stackAppInternalsSymbol],\n      useMetrics: () => {\n        return (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._metricsCache, [], \"useMetrics()\");\n      }\n    };\n  }\n  async sendTestEmail(options) {\n    const response = await this._interface.sendTestEmail({\n      recipient_email: options.recipientEmail,\n      email_config: {\n        ...(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__.pick)(options.emailConfig, [\"host\", \"port\", \"username\", \"password\"]),\n        sender_email: options.emailConfig.senderEmail,\n        sender_name: options.emailConfig.senderName\n      }\n    });\n    if (response.success) {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.error({ errorMessage: response.error_message ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email test error not specified\") });\n    }\n  }\n  async listSentEmails() {\n    const response = await this._interface.listSentEmails();\n    return response.items.map((email) => ({\n      id: email.id,\n      to: email.to ?? [],\n      subject: email.subject,\n      recipient: email.to?.[0] ?? \"\",\n      sentAt: new Date(email.sent_at_millis),\n      error: email.error\n    }));\n  }\n};\n\n//# sourceMappingURL=admin-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackClientAppImplIncomplete: () => (/* binding */ _StackClientAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @simplewebauthn/browser */ \"(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js\");\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/sessions */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/sessions.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/compile-time */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/maps */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/urls */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/uuids */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! cookie */ \"(app-pages-browser)/./node_modules/cookie/index.js\");\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../utils/url */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../auth */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\");\n/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../cookie */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n/* harmony import */ var _api_keys__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../api-keys */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../common */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var _contact_channels__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../contact-channels */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\");\n/* harmony import */ var _projects__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../projects */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\");\n/* harmony import */ var _teams__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../teams */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\");\n/* harmony import */ var _users__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../users */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @stackframe/stack-sc */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js\");\n// src/lib/stack-app/apps/implementations/client-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar isReactServer2 = false;\nisReactServer2 = _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__.isReactServer;\nvar NextNavigation = (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_3__.scrambleDuringCompileTime)(next_navigation__WEBPACK_IMPORTED_MODULE_16__);\nvar allClientApps = /* @__PURE__ */ new Map();\nvar __StackClientAppImplIncomplete = class __StackClientAppImplIncomplete {\n  constructor(_options) {\n    this._options = _options;\n    this._uniqueIdentifier = void 0;\n    this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY = false;\n    this._ownedAdminApps = new _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_6__.DependenciesMap();\n    this._currentUserCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      if (this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY) {\n        await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.wait)(2e3);\n      }\n      if (session.isKnownToBeInvalid()) {\n        return null;\n      }\n      return await this._interface.getClientUserByToken(session);\n    });\n    this._currentProjectCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCache)(async () => {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._interface.getClientProject());\n    });\n    this._ownedProjectsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      return await this._interface.listProjects(session);\n    });\n    this._currentUserPermissionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session, [teamId, recursive]) => {\n      return await this._interface.listCurrentUserTeamPermissions({ teamId, recursive }, session);\n    });\n    this._currentUserProjectPermissionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session, [recursive]) => {\n      return await this._interface.listCurrentUserProjectPermissions({ recursive }, session);\n    });\n    this._currentUserTeamsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      return await this._interface.listCurrentUserTeams(session);\n    });\n    this._currentUserOAuthConnectionAccessTokensCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [providerId, scope]) => {\n        try {\n          const result = await this._interface.createProviderAccessToken(providerId, scope || \"\", session);\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope || err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionNotConnectedToUser)) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._currentUserOAuthConnectionCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserCache.getOrWait([session], \"write-only\")),\n          getOrWaitOAuthToken: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserOAuthConnectionAccessTokensCache.getOrWait([session, providerId, scope || \"\"], \"write-only\")),\n          useOAuthToken: () => (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentUserOAuthConnectionAccessTokensCache, [session, providerId, scope || \"\"], \"useOAuthToken\"),\n          providerId,\n          scope,\n          redirect,\n          session\n        });\n      }\n    );\n    this._teamMemberProfilesCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.listTeamMemberProfiles({ teamId }, session);\n      }\n    );\n    this._teamInvitationsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.listTeamInvitations({ teamId }, session);\n      }\n    );\n    this._currentUserTeamProfileCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.getTeamMemberProfile({ teamId, userId: \"me\" }, session);\n      }\n    );\n    this._clientContactChannelsCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        return await this._interface.listClientContactChannels(session);\n      }\n    );\n    this._userApiKeysCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        const results = await this._interface.listProjectApiKeys({ user_id: \"me\" }, session, \"client\");\n        return results;\n      }\n    );\n    this._teamApiKeysCache = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        const results = await this._interface.listProjectApiKeys({ team_id: teamId }, session, \"client\");\n        return results;\n      }\n    );\n    this._anonymousSignUpInProgress = null;\n    this._memoryTokenStore = (0,_common__WEBPACK_IMPORTED_MODULE_19__.createEmptyTokenStore)();\n    this._nextServerCookiesTokenStores = /* @__PURE__ */ new WeakMap();\n    this._requestTokenStores = /* @__PURE__ */ new WeakMap();\n    this._storedBrowserCookieTokenStore = null;\n    /**\n     * A map from token stores and session keys to sessions.\n     *\n     * This isn't just a map from session keys to sessions for two reasons:\n     *\n     * - So we can garbage-collect Session objects when the token store is garbage-collected\n     * - So different token stores are separated and don't leak information between each other, eg. if the same user sends two requests to the same server they should get a different session object\n     */\n    this._sessionsByTokenStoreAndSessionKey = /* @__PURE__ */ new WeakMap();\n    if (!__StackClientAppImplIncomplete.LazyStackAdminAppImpl.value) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Admin app implementation not initialized. Did you import the _StackClientApp from stack-app/apps/implementations/index.ts? You can't import it directly from ./apps/implementations/client-app-impl.ts as that causes a circular dependency (see the comment at _LazyStackAdminAppImpl for more details).\");\n    }\n    if (\"interface\" in _options) {\n      this._interface = _options.interface;\n    } else {\n      this._interface = new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface({\n        getBaseUrl: () => (0,_common__WEBPACK_IMPORTED_MODULE_19__.getBaseUrl)(_options.baseUrl),\n        extraRequestHeaders: _options.extraRequestHeaders ?? (0,_common__WEBPACK_IMPORTED_MODULE_19__.getDefaultExtraRequestHeaders)(),\n        projectId: _options.projectId ?? (0,_common__WEBPACK_IMPORTED_MODULE_19__.getDefaultProjectId)(),\n        clientVersion: _common__WEBPACK_IMPORTED_MODULE_19__.clientVersion,\n        publishableClientKey: _options.publishableClientKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_19__.getDefaultPublishableClientKey)(),\n        prepareRequest: async () => {\n          await (0,_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__.cookies)?.();\n        }\n      });\n    }\n    this._tokenStoreInit = _options.tokenStore;\n    this._redirectMethod = _options.redirectMethod || \"none\";\n    this._redirectMethod = _options.redirectMethod || \"nextjs\";\n    this._urlOptions = _options.urls ?? {};\n    this._oauthScopesOnSignIn = _options.oauthScopesOnSignIn ?? {};\n    if (_options.uniqueIdentifier) {\n      this._uniqueIdentifier = _options.uniqueIdentifier;\n      this._initUniqueIdentifier();\n    }\n  }\n  async _createCookieHelper() {\n    if (this._tokenStoreInit === \"nextjs-cookie\" || this._tokenStoreInit === \"cookie\") {\n      return await (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.createCookieHelper)();\n    } else {\n      return await (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.createPlaceholderCookieHelper)();\n    }\n  }\n  async _getUserOAuthConnectionCacheFn(options) {\n    const user = await options.getUser();\n    let hasConnection = true;\n    if (!user || !user.oauth_providers.find((p) => p.id === options.providerId)) {\n      hasConnection = false;\n    }\n    const token = await options.getOrWaitOAuthToken();\n    if (!token) {\n      hasConnection = false;\n    }\n    if (!hasConnection && options.redirect) {\n      if (!options.session) {\n        throw new Error((0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__.deindent)`\n          Cannot add new scopes to a user that is not a CurrentUser. Please ensure that you are calling this function on a CurrentUser object, or remove the 'or: redirect' option.\n\n          Often, you can solve this by calling this function in the browser instead, or by removing the 'or: redirect' option and dealing with the case where the user doesn't have enough permissions.\n        `);\n      }\n      await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.addNewOAuthProviderOrScope)(\n        this._interface,\n        {\n          provider: options.providerId,\n          redirectUrl: this.urls.oauthCallback,\n          errorRedirectUrl: this.urls.error,\n          providerScope: (0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__.mergeScopeStrings)(options.scope || \"\", (this._oauthScopesOnSignIn[options.providerId] ?? []).join(\" \"))\n        },\n        options.session\n      );\n      return await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.neverResolve)();\n    } else if (!hasConnection) {\n      return null;\n    }\n    return {\n      id: options.providerId,\n      async getAccessToken() {\n        const result = await options.getOrWaitOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      },\n      useAccessToken() {\n        const result = options.useOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      }\n    };\n  }\n  _initUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Unique identifier not initialized\");\n    }\n    if (allClientApps.has(this._uniqueIdentifier)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"A Stack client app with the same unique identifier already exists\");\n    }\n    allClientApps.set(this._uniqueIdentifier, [this._options.checkString ?? \"default check string\", this]);\n  }\n  /**\n   * Cloudflare workers does not allow use of randomness on the global scope (on which the Stack app is probably\n   * initialized). For that reason, we generate the unique identifier lazily when it is first needed instead of in the\n   * constructor.\n   */\n  _getUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      this._uniqueIdentifier = (0,_stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_14__.generateUuid)();\n      this._initUniqueIdentifier();\n    }\n    return this._uniqueIdentifier;\n  }\n  async _checkFeatureSupport(name, options) {\n    return await this._interface.checkFeatureSupport({ ...options, name });\n  }\n  _useCheckFeatureSupport(name, options) {\n    (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(this._checkFeatureSupport(name, options));\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`${name} is not currently supported. Please reach out to Stack support for more information.`);\n  }\n  get _refreshTokenCookieName() {\n    return `stack-refresh-${this.projectId}`;\n  }\n  _getTokensFromCookies(cookies2) {\n    const refreshToken = cookies2.refreshTokenCookie;\n    const accessTokenObject = cookies2.accessTokenCookie?.startsWith('[\"') ? JSON.parse(cookies2.accessTokenCookie) : null;\n    const accessToken = accessTokenObject && refreshToken === accessTokenObject[0] ? accessTokenObject[1] : null;\n    return {\n      refreshToken,\n      accessToken\n    };\n  }\n  get _accessTokenCookieName() {\n    return `stack-access`;\n  }\n  _getBrowserCookieTokenStore() {\n    if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n      throw new Error(\"Cannot use cookie token store on the server!\");\n    }\n    if (this._storedBrowserCookieTokenStore === null) {\n      const getCurrentValue = (old) => {\n        const tokens = this._getTokensFromCookies({\n          refreshTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(this._refreshTokenCookieName) ?? (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(\"stack-refresh\"),\n          // keep old cookie name for backwards-compatibility\n          accessTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(this._accessTokenCookieName)\n        });\n        return {\n          refreshToken: tokens.refreshToken,\n          accessToken: tokens.accessToken ?? (old?.refreshToken === tokens.refreshToken ? old.accessToken : null)\n        };\n      };\n      this._storedBrowserCookieTokenStore = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store(getCurrentValue(null));\n      let hasSucceededInWriting = true;\n      setInterval(() => {\n        if (hasSucceededInWriting) {\n          const oldValue = this._storedBrowserCookieTokenStore.get();\n          const currentValue = getCurrentValue(oldValue);\n          if (!(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__.deepPlainEquals)(currentValue, oldValue)) {\n            this._storedBrowserCookieTokenStore.set(currentValue);\n          }\n        }\n      }, 100);\n      this._storedBrowserCookieTokenStore.onChange((value) => {\n        try {\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookieClient)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365 });\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookieClient)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24 });\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.deleteCookieClient)(\"stack-refresh\");\n          hasSucceededInWriting = true;\n        } catch (e) {\n          if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n            hasSucceededInWriting = false;\n          } else {\n            throw e;\n          }\n        }\n      });\n    }\n    return this._storedBrowserCookieTokenStore;\n  }\n  _getOrCreateTokenStore(cookieHelper, overrideTokenStoreInit) {\n    const tokenStoreInit = overrideTokenStoreInit === void 0 ? this._tokenStoreInit : overrideTokenStoreInit;\n    switch (tokenStoreInit) {\n      case \"cookie\": {\n        return this._getBrowserCookieTokenStore();\n      }\n      case \"nextjs-cookie\": {\n        if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n          return this._getBrowserCookieTokenStore();\n        } else {\n          const tokens = this._getTokensFromCookies({\n            refreshTokenCookie: cookieHelper.get(this._refreshTokenCookieName) ?? cookieHelper.get(\"stack-refresh\"),\n            // keep old cookie name for backwards-compatibility\n            accessTokenCookie: cookieHelper.get(this._accessTokenCookieName)\n          });\n          const store = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store(tokens);\n          store.onChange((value) => {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n              await Promise.all([\n                (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookie)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365, noOpIfServerComponent: true }),\n                (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookie)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24, noOpIfServerComponent: true })\n              ]);\n            });\n          });\n          return store;\n        }\n      }\n      case \"memory\": {\n        return this._memoryTokenStore;\n      }\n      default: {\n        if (tokenStoreInit === null) {\n          return (0,_common__WEBPACK_IMPORTED_MODULE_19__.createEmptyTokenStore)();\n        } else if (typeof tokenStoreInit === \"object\" && \"headers\" in tokenStoreInit) {\n          if (this._requestTokenStores.has(tokenStoreInit)) return this._requestTokenStores.get(tokenStoreInit);\n          const stackAuthHeader = tokenStoreInit.headers.get(\"x-stack-auth\");\n          if (stackAuthHeader) {\n            let parsed2;\n            try {\n              parsed2 = JSON.parse(stackAuthHeader);\n              if (typeof parsed2 !== \"object\") throw new Error(\"x-stack-auth header must be a JSON object\");\n              if (parsed2 === null) throw new Error(\"x-stack-auth header must not be null\");\n            } catch (e) {\n              throw new Error(`Invalid x-stack-auth header: ${stackAuthHeader}`, { cause: e });\n            }\n            return this._getOrCreateTokenStore(cookieHelper, {\n              accessToken: parsed2.accessToken ?? null,\n              refreshToken: parsed2.refreshToken ?? null\n            });\n          }\n          const cookieHeader = tokenStoreInit.headers.get(\"cookie\");\n          const parsed = cookie__WEBPACK_IMPORTED_MODULE_15__.parse(cookieHeader || \"\");\n          const res = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store({\n            refreshToken: parsed[this._refreshTokenCookieName] || parsed[\"stack-refresh\"] || null,\n            // keep old cookie name for backwards-compatibility\n            accessToken: parsed[this._accessTokenCookieName] || null\n          });\n          this._requestTokenStores.set(tokenStoreInit, res);\n          return res;\n        } else if (\"accessToken\" in tokenStoreInit || \"refreshToken\" in tokenStoreInit) {\n          return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store({\n            refreshToken: tokenStoreInit.refreshToken,\n            accessToken: tokenStoreInit.accessToken\n          });\n        }\n        throw new Error(`Invalid token store ${tokenStoreInit}`);\n      }\n    }\n  }\n  _useTokenStore(overrideTokenStoreInit) {\n    (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspendIfSsr)();\n    const cookieHelper = (0,_cookie__WEBPACK_IMPORTED_MODULE_20__.createBrowserCookieHelper)();\n    const tokenStore = this._getOrCreateTokenStore(cookieHelper, overrideTokenStoreInit);\n    return tokenStore;\n  }\n  _getSessionFromTokenStore(tokenStore) {\n    const tokenObj = tokenStore.get();\n    const sessionKey = _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_2__.InternalSession.calculateSessionKey(tokenObj);\n    const existing = sessionKey ? this._sessionsByTokenStoreAndSessionKey.get(tokenStore)?.get(sessionKey) : null;\n    if (existing) return existing;\n    const session = this._interface.createSession({\n      refreshToken: tokenObj.refreshToken,\n      accessToken: tokenObj.accessToken\n    });\n    session.onAccessTokenChange((newAccessToken) => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: newAccessToken?.token ?? null\n      }));\n    });\n    session.onInvalidate(() => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: null,\n        refreshToken: null\n      }));\n    });\n    let sessionsBySessionKey = this._sessionsByTokenStoreAndSessionKey.get(tokenStore) ?? /* @__PURE__ */ new Map();\n    this._sessionsByTokenStoreAndSessionKey.set(tokenStore, sessionsBySessionKey);\n    sessionsBySessionKey.set(sessionKey, session);\n    return session;\n  }\n  async _getSession(overrideTokenStoreInit) {\n    const tokenStore = this._getOrCreateTokenStore(await this._createCookieHelper(), overrideTokenStoreInit);\n    return this._getSessionFromTokenStore(tokenStore);\n  }\n  _useSession(overrideTokenStoreInit) {\n    const tokenStore = this._useTokenStore(overrideTokenStoreInit);\n    const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((cb) => {\n      const { unsubscribe } = tokenStore.onChange(() => {\n        cb();\n      });\n      return unsubscribe;\n    }, [tokenStore]);\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_17__.useCallback)(() => this._getSessionFromTokenStore(tokenStore), [tokenStore]);\n    return react__WEBPACK_IMPORTED_MODULE_17___default().useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  }\n  async _signInToAccountWithTokens(tokens) {\n    if (!(\"accessToken\" in tokens) || !(\"refreshToken\" in tokens)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Invalid tokens object; can't sign in with this\", { tokens });\n    }\n    const tokenStore = this._getOrCreateTokenStore(await this._createCookieHelper());\n    tokenStore.set(tokens);\n  }\n  _hasPersistentTokenStore(overrideTokenStoreInit) {\n    return (overrideTokenStoreInit !== void 0 ? overrideTokenStoreInit : this._tokenStoreInit) !== null;\n  }\n  _ensurePersistentTokenStore(overrideTokenStoreInit) {\n    if (!this._hasPersistentTokenStore(overrideTokenStoreInit)) {\n      throw new Error(\"Cannot call this function on a Stack app without a persistent token store. Make sure the tokenStore option on the constructor is set to a non-null value when initializing Stack.\\n\\nStack uses token stores to access access tokens of the current user. For example, on web frontends it is commonly the string value 'cookies' for cookie storage.\");\n    }\n  }\n  _isInternalProject() {\n    return this.projectId === \"internal\";\n  }\n  _ensureInternalProject() {\n    if (!this._isInternalProject()) {\n      throw new Error(\"Cannot call this function on a Stack app with a project ID other than 'internal'.\");\n    }\n  }\n  _clientProjectFromCrud(crud) {\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      config: {\n        signUpEnabled: crud.config.sign_up_enabled,\n        credentialEnabled: crud.config.credential_enabled,\n        magicLinkEnabled: crud.config.magic_link_enabled,\n        passkeyEnabled: crud.config.passkey_enabled,\n        clientTeamCreationEnabled: crud.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: crud.config.client_user_deletion_enabled,\n        allowTeamApiKeys: crud.config.allow_team_api_keys,\n        allowUserApiKeys: crud.config.allow_user_api_keys,\n        oauthProviders: crud.config.enabled_oauth_providers.map((p) => ({\n          id: p.id\n        }))\n      }\n    };\n  }\n  _clientPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _clientTeamUserFromCrud(crud) {\n    return {\n      id: crud.user_id,\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _clientTeamInvitationFromCrud(session, crud) {\n    return {\n      id: crud.id,\n      recipientEmail: crud.recipient_email,\n      expiresAt: new Date(crud.expires_at_millis),\n      revoke: async () => {\n        await this._interface.revokeTeamInvitation(crud.id, crud.team_id, session);\n        await this._teamInvitationsCache.refresh([session, crud.team_id]);\n      }\n    };\n  }\n  _baseApiKeyFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      expiresAt: crud.expires_at_millis ? new Date(crud.expires_at_millis) : void 0,\n      manuallyRevokedAt: crud.manually_revoked_at_millis ? new Date(crud.manually_revoked_at_millis) : null,\n      createdAt: new Date(crud.created_at_millis),\n      ...crud.type === \"team\" ? { type: \"team\", teamId: crud.team_id } : { type: \"user\", userId: crud.user_id },\n      value: typeof crud.value === \"string\" ? crud.value : {\n        lastFour: crud.value.last_four\n      },\n      isValid: function() {\n        return this.whyInvalid() === null;\n      },\n      whyInvalid: function() {\n        if (this.manuallyRevokedAt) {\n          return \"manually-revoked\";\n        }\n        if (this.expiresAt && this.expiresAt < /* @__PURE__ */ new Date()) {\n          return \"expired\";\n        }\n        return null;\n      }\n    };\n  }\n  _clientApiKeyFromCrud(session, crud) {\n    return {\n      ...this._baseApiKeyFromCrud(crud),\n      async revoke() {\n        await this.update({ revoked: true });\n      },\n      update: async (options) => {\n        await this._interface.updateProjectApiKey(crud.type === \"team\" ? { team_id: crud.team_id } : { user_id: crud.user_id }, crud.id, options, session, \"client\");\n        if (crud.type === \"team\") {\n          await this._teamApiKeysCache.refresh([session, crud.team_id]);\n        } else {\n          await this._userApiKeysCache.refresh([session]);\n        }\n      }\n    };\n  }\n  _clientTeamFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      async inviteUser(options) {\n        await app._interface.sendTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          session,\n          callbackUrl: options.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.teamInvitation, \"callbackUrl\")\n        });\n        await app._teamInvitationsCache.refresh([session, crud.id]);\n      },\n      async listUsers() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamMemberProfilesCache.getOrWait([session, crud.id], \"write-only\"));\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      useUsers() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamMemberProfilesCache, [session, crud.id], \"team.useUsers()\");\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      async listInvitations() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamInvitationsCache.getOrWait([session, crud.id], \"write-only\"));\n        return result.map((crud2) => app._clientTeamInvitationFromCrud(session, crud2));\n      },\n      useInvitations() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamInvitationsCache, [session, crud.id], \"team.useInvitations()\");\n        return result.map((crud2) => app._clientTeamInvitationFromCrud(session, crud2));\n      },\n      async update(data) {\n        await app._interface.updateTeam({ data: (0,_teams__WEBPACK_IMPORTED_MODULE_23__.teamUpdateOptionsToCrud)(data), teamId: crud.id }, session);\n        await app._currentUserTeamsCache.refresh([session]);\n      },\n      async delete() {\n        await app._interface.deleteTeam(crud.id, session);\n        await app._currentUserTeamsCache.refresh([session]);\n      },\n      useApiKeys() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamApiKeysCache, [session, crud.id], \"team.useApiKeys()\");\n        return result.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async listApiKeys() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamApiKeysCache.getOrWait([session, crud.id], \"write-only\"));\n        return results.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys__WEBPACK_IMPORTED_MODULE_24__.apiKeyCreationOptionsToCrud)(\"team\", crud.id, options),\n          session,\n          \"client\"\n        );\n        await app._teamApiKeysCache.refresh([session, crud.id]);\n        return app._clientApiKeyFromCrud(session, result);\n      }\n    };\n  }\n  _clientContactChannelFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.id,\n      value: crud.value,\n      type: crud.type,\n      isVerified: crud.is_verified,\n      isPrimary: crud.is_primary,\n      usedForAuth: crud.used_for_auth,\n      async sendVerificationEmail(options) {\n        await app._interface.sendCurrentUserContactChannelVerificationEmail(\n          crud.id,\n          options?.callbackUrl || (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"),\n          session\n        );\n      },\n      async update(data) {\n        await app._interface.updateClientContactChannel(crud.id, (0,_contact_channels__WEBPACK_IMPORTED_MODULE_25__.contactChannelUpdateOptionsToCrud)(data), session);\n        await app._clientContactChannelsCache.refresh([session]);\n      },\n      async delete() {\n        await app._interface.deleteClientContactChannel(crud.id, session);\n        await app._clientContactChannelsCache.refresh([session]);\n      }\n    };\n  }\n  _createAuth(session) {\n    const app = this;\n    return {\n      _internalSession: session,\n      currentSession: {\n        async getTokens() {\n          const tokens = await session.getOrFetchLikelyValidTokens(2e4);\n          return {\n            accessToken: tokens?.accessToken.token ?? null,\n            refreshToken: tokens?.refreshToken?.token ?? null\n          };\n        }\n      },\n      async getAuthHeaders() {\n        return {\n          \"x-stack-auth\": JSON.stringify(await this.getAuthJson())\n        };\n      },\n      async getAuthJson() {\n        const tokens = await this.currentSession.getTokens();\n        return tokens;\n      },\n      async registerPasskey(options) {\n        const hostname = (await app._getCurrentUrl())?.hostname;\n        if (!hostname) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"hostname must be provided if the Stack App does not have a redirect method\");\n        }\n        const initiationResult = await app._interface.initiatePasskeyRegistration({}, session);\n        if (initiationResult.status !== \"ok\") {\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyRegistrationFailed(\"Failed to get initiation options for passkey registration\"));\n        }\n        const { options_json, code } = initiationResult.data;\n        if (options_json.rp.id !== \"THIS_VALUE_WILL_BE_REPLACED.example.com\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`Expected returned RP ID from server to equal sentinel, but found ${options_json.rp.id}`);\n        }\n        options_json.rp.id = hostname;\n        let attResp;\n        try {\n          attResp = await (0,_simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.startRegistration)({ optionsJSON: options_json });\n        } catch (error) {\n          if (error instanceof _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.WebAuthnError) {\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyWebAuthnError(error.message, error.name));\n          } else {\n            (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.captureError)(\"passkey-registration-failed\", error);\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyRegistrationFailed(\"Failed to start passkey registration due to unknown error\"));\n          }\n        }\n        const registrationResult = await app._interface.registerPasskey({ credential: attResp, code }, session);\n        await app._refreshUser(session);\n        return registrationResult;\n      },\n      signOut(options) {\n        return app._signOut(session, options);\n      }\n    };\n  }\n  _editableTeamProfileFromCrud(crud, session) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async update(update) {\n        await app._interface.updateTeamMemberProfile({\n          teamId: crud.team_id,\n          userId: crud.user_id,\n          profile: {\n            display_name: update.displayName,\n            profile_image_url: update.profileImageUrl\n          }\n        }, session);\n        await app._currentUserTeamProfileCache.refresh([session, crud.team_id]);\n      }\n    };\n  }\n  _createBaseUser(crud) {\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      primaryEmail: crud.primary_email,\n      primaryEmailVerified: crud.primary_email_verified,\n      profileImageUrl: crud.profile_image_url,\n      signedUpAt: new Date(crud.signed_up_at_millis),\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      hasPassword: crud.has_password,\n      emailAuthEnabled: crud.auth_with_email,\n      otpAuthEnabled: crud.otp_auth_enabled,\n      oauthProviders: crud.oauth_providers,\n      passkeyAuthEnabled: crud.passkey_auth_enabled,\n      isMultiFactorRequired: crud.requires_totp_mfa,\n      isAnonymous: crud.is_anonymous,\n      toClientJson() {\n        return crud;\n      }\n    };\n  }\n  _createUserExtraFromCurrent(crud, session) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserOAuthConnectionCache.getOrWait([session, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\"));\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserOAuthConnectionCache, [session, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      async getActiveSessions() {\n        const sessions = await app._interface.listSessions(session);\n        return sessions.items.map((crud2) => app._clientSessionFromCrud(crud2));\n      },\n      async revokeSession(sessionId) {\n        await app._interface.deleteSession(sessionId, session);\n      },\n      setDisplayName(displayName) {\n        return this.update({ displayName });\n      },\n      setClientMetadata(metadata) {\n        return this.update({ clientMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      // THIS_LINE_PLATFORM react-like\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserTeamsCache.getOrWait([session], \"write-only\"));\n        return teams.map((crud2) => app._clientTeamFromCrud(crud2, session));\n      },\n      useTeams() {\n        const teams = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserTeamsCache, [session], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => teams.map((crud2) => app._clientTeamFromCrud(crud2, session)), [teams]);\n      },\n      async createTeam(data) {\n        const crud2 = await app._interface.createClientTeam((0,_teams__WEBPACK_IMPORTED_MODULE_23__.teamCreateOptionsToCrud)(data, \"me\"), session);\n        await app._currentUserTeamsCache.refresh([session]);\n        await this.update({ selectedTeamId: crud2.id });\n        return app._clientTeamFromCrud(crud2, session);\n      },\n      async leaveTeam(team) {\n        await app._interface.leaveTeam(team.id, session);\n      },\n      async listPermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserPermissionsCache.getOrWait([session, scope.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._clientPermissionFromCrud(crud2));\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserProjectPermissionsCache.getOrWait([session, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._clientPermissionFromCrud(crud2));\n        }\n      },\n      usePermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserPermissionsCache, [session, scope.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.map((crud2) => app._clientPermissionFromCrud(crud2)), [permissions]);\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserProjectPermissionsCache, [session, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.map((crud2) => app._clientPermissionFromCrud(crud2)), [permissions]);\n        }\n      },\n      usePermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = this.usePermissions(scope);\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = this.usePermissions();\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.find((p) => p.id === pid) ?? null, [permissions, pid]);\n        }\n      },\n      async getPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = await this.listPermissions(scope);\n          return permissions.find((p) => p.id === permissionId) ?? null;\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = await this.listPermissions();\n          return permissions.find((p) => p.id === pid) ?? null;\n        }\n      },\n      async hasPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          return await this.getPermission(scope, permissionId) !== null;\n        } else {\n          const pid = scopeOrPermissionId;\n          return await this.getPermission(pid) !== null;\n        }\n      },\n      async update(update) {\n        return await app._updateClientUser(update, session);\n      },\n      async sendVerificationEmail(options) {\n        if (!crud.primary_email) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"User does not have a primary email\");\n        }\n        return await app._interface.sendVerificationEmail(\n          crud.primary_email,\n          options?.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"),\n          session\n        );\n      },\n      async updatePassword(options) {\n        const result = await app._interface.updatePassword(options, session);\n        await app._currentUserCache.refresh([session]);\n        return result;\n      },\n      async setPassword(options) {\n        const result = await app._interface.setPassword(options, session);\n        await app._currentUserCache.refresh([session]);\n        return result;\n      },\n      selectedTeam: crud.selected_team && this._clientTeamFromCrud(crud.selected_team, session),\n      async getTeamProfile(team) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserTeamProfileCache.getOrWait([session, team.id], \"write-only\"));\n        return app._editableTeamProfileFromCrud(result, session);\n      },\n      useTeamProfile(team) {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserTeamProfileCache, [session, team.id], \"user.useTeamProfile()\");\n        return app._editableTeamProfileFromCrud(result, session);\n      },\n      async delete() {\n        await app._interface.deleteCurrentUser(session);\n        session.markInvalid();\n      },\n      async listContactChannels() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._clientContactChannelsCache.getOrWait([session], \"write-only\"));\n        return result.map((crud2) => app._clientContactChannelFromCrud(crud2, session));\n      },\n      useContactChannels() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._clientContactChannelsCache, [session], \"user.useContactChannels()\");\n        return result.map((crud2) => app._clientContactChannelFromCrud(crud2, session));\n      },\n      async createContactChannel(data) {\n        const crud2 = await app._interface.createClientContactChannel((0,_contact_channels__WEBPACK_IMPORTED_MODULE_25__.contactChannelCreateOptionsToCrud)(\"me\", data), session);\n        await app._clientContactChannelsCache.refresh([session]);\n        return app._clientContactChannelFromCrud(crud2, session);\n      },\n      useApiKeys() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._userApiKeysCache, [session], \"user.useApiKeys()\");\n        return result.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async listApiKeys() {\n        const results = await app._interface.listProjectApiKeys({ user_id: \"me\" }, session, \"client\");\n        return results.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys__WEBPACK_IMPORTED_MODULE_24__.apiKeyCreationOptionsToCrud)(\"user\", \"me\", options),\n          session,\n          \"client\"\n        );\n        await app._userApiKeysCache.refresh([session]);\n        return app._clientApiKeyFromCrud(session, result);\n      }\n    };\n  }\n  _createInternalUserExtra(session) {\n    const app = this;\n    this._ensureInternalProject();\n    return {\n      createProject(newProject) {\n        return app._createProject(session, newProject);\n      },\n      listOwnedProjects() {\n        return app._listOwnedProjects(session);\n      },\n      useOwnedProjects() {\n        return app._useOwnedProjects(session);\n      }\n    };\n  }\n  _currentUserFromCrud(crud, session) {\n    const currentUser = {\n      ...this._createBaseUser(crud),\n      ...this._createAuth(session),\n      ...this._createUserExtraFromCurrent(crud, session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {}\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _clientSessionFromCrud(crud) {\n    return {\n      id: crud.id,\n      userId: crud.user_id,\n      createdAt: new Date(crud.created_at),\n      isImpersonation: crud.is_impersonation,\n      lastUsedAt: crud.last_used_at ? new Date(crud.last_used_at) : void 0,\n      isCurrentSession: crud.is_current_session ?? false,\n      geoInfo: crud.last_used_at_end_user_ip_info\n    };\n  }\n  _getOwnedAdminApp(forProjectId, session) {\n    if (!this._ownedAdminApps.has([session, forProjectId])) {\n      this._ownedAdminApps.set([session, forProjectId], new __StackClientAppImplIncomplete.LazyStackAdminAppImpl.value({\n        baseUrl: this._interface.options.getBaseUrl(),\n        projectId: forProjectId,\n        tokenStore: null,\n        projectOwnerSession: session,\n        noAutomaticPrefetch: true\n      }));\n    }\n    return this._ownedAdminApps.get([session, forProjectId]);\n  }\n  get projectId() {\n    return this._interface.projectId;\n  }\n  async _isTrusted(url) {\n    return (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.isRelative)(url);\n  }\n  get urls() {\n    return (0,_common__WEBPACK_IMPORTED_MODULE_19__.getUrls)(this._urlOptions);\n  }\n  async _getCurrentUrl() {\n    if (this._redirectMethod === \"none\") {\n      return null;\n    }\n    return new URL(window.location.href);\n  }\n  async _redirectTo(options) {\n    if (this._redirectMethod === \"none\") {\n      return;\n    } else if (isReactServer2 && this._redirectMethod === \"nextjs\") {\n      NextNavigation.redirect(options.url.toString(), options.replace ? NextNavigation.RedirectType.replace : NextNavigation.RedirectType.push);\n    } else if (typeof this._redirectMethod === \"object\" && this._redirectMethod.navigate) {\n      this._redirectMethod.navigate(options.url.toString());\n    } else {\n      if (options.replace) {\n        window.location.replace(options.url);\n      } else {\n        window.location.assign(options.url);\n      }\n    }\n    await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.wait)(2e3);\n  }\n  useNavigate() {\n    if (typeof this._redirectMethod === \"object\") {\n      return this._redirectMethod.useNavigate();\n    } else if (this._redirectMethod === \"window\") {\n      return (to) => window.location.assign(to);\n    } else if (this._redirectMethod === \"nextjs\") {\n      const router = NextNavigation.useRouter();\n      return (to) => router.push(to);\n    } else {\n      return (to) => {\n      };\n    }\n  }\n  async _redirectIfTrusted(url, options) {\n    if (!await this._isTrusted(url)) {\n      throw new Error(`Redirect URL ${url} is not trusted; should be relative.`);\n    }\n    return await this._redirectTo({ url, ...options });\n  }\n  async _redirectToHandler(handlerName, options) {\n    let url = this.urls[handlerName];\n    if (!url) {\n      throw new Error(`No URL for handler name ${handlerName}`);\n    }\n    if (!options?.noRedirectBack) {\n      if (handlerName === \"afterSignIn\" || handlerName === \"afterSignUp\") {\n        if (isReactServer2 || typeof window === \"undefined\") {\n          try {\n            await this._checkFeatureSupport(\"rsc-handler-\" + handlerName, {});\n          } catch (e) {\n          }\n        } else {\n          const queryParams = new URLSearchParams(window.location.search);\n          url = queryParams.get(\"after_auth_return_to\") || url;\n        }\n      } else if (handlerName === \"signIn\" || handlerName === \"signUp\") {\n        if (isReactServer2 || typeof window === \"undefined\") {\n          try {\n            await this._checkFeatureSupport(\"rsc-handler-\" + handlerName, {});\n          } catch (e) {\n          }\n        } else {\n          const currentUrl = new URL(window.location.href);\n          const nextUrl = new URL(url, currentUrl);\n          if (currentUrl.searchParams.has(\"after_auth_return_to\")) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", currentUrl.searchParams.get(\"after_auth_return_to\"));\n          } else if (currentUrl.protocol === nextUrl.protocol && currentUrl.host === nextUrl.host) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.getRelativePart)(currentUrl));\n          }\n          url = (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.getRelativePart)(nextUrl);\n        }\n      }\n    }\n    await this._redirectIfTrusted(url, options);\n  }\n  async redirectToSignIn(options) {\n    return await this._redirectToHandler(\"signIn\", options);\n  }\n  async redirectToSignUp(options) {\n    return await this._redirectToHandler(\"signUp\", options);\n  }\n  async redirectToSignOut(options) {\n    return await this._redirectToHandler(\"signOut\", options);\n  }\n  async redirectToEmailVerification(options) {\n    return await this._redirectToHandler(\"emailVerification\", options);\n  }\n  async redirectToPasswordReset(options) {\n    return await this._redirectToHandler(\"passwordReset\", options);\n  }\n  async redirectToForgotPassword(options) {\n    return await this._redirectToHandler(\"forgotPassword\", options);\n  }\n  async redirectToHome(options) {\n    return await this._redirectToHandler(\"home\", options);\n  }\n  async redirectToOAuthCallback(options) {\n    return await this._redirectToHandler(\"oauthCallback\", options);\n  }\n  async redirectToMagicLinkCallback(options) {\n    return await this._redirectToHandler(\"magicLinkCallback\", options);\n  }\n  async redirectToAfterSignIn(options) {\n    return await this._redirectToHandler(\"afterSignIn\", options);\n  }\n  async redirectToAfterSignUp(options) {\n    return await this._redirectToHandler(\"afterSignUp\", options);\n  }\n  async redirectToAfterSignOut(options) {\n    return await this._redirectToHandler(\"afterSignOut\", options);\n  }\n  async redirectToAccountSettings(options) {\n    return await this._redirectToHandler(\"accountSettings\", options);\n  }\n  async redirectToError(options) {\n    return await this._redirectToHandler(\"error\", options);\n  }\n  async redirectToTeamInvitation(options) {\n    return await this._redirectToHandler(\"teamInvitation\", options);\n  }\n  async sendForgotPasswordEmail(email, options) {\n    return await this._interface.sendForgotPasswordEmail(email, options?.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.passwordReset, \"callbackUrl\"));\n  }\n  async sendMagicLinkEmail(email, options) {\n    return await this._interface.sendMagicLinkEmail(email, options?.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.magicLinkCallback, \"callbackUrl\"));\n  }\n  async resetPassword(options) {\n    return await this._interface.resetPassword(options);\n  }\n  async verifyPasswordResetCode(code) {\n    return await this._interface.verifyPasswordResetCode(code);\n  }\n  async verifyTeamInvitationCode(code) {\n    return await this._interface.acceptTeamInvitation({\n      type: \"check\",\n      code,\n      session: await this._getSession()\n    });\n  }\n  async acceptTeamInvitation(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"use\",\n      code,\n      session: await this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async getTeamInvitationDetails(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"details\",\n      code,\n      session: await this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok({ teamDisplayName: result.data.team_display_name });\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async verifyEmail(code) {\n    const result = await this._interface.verifyEmail(code);\n    await this._currentUserCache.refresh([await this._getSession()]);\n    await this._clientContactChannelsCache.refresh([await this._getSession()]);\n    return result;\n  }\n  async getUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const session = await this._getSession(options?.tokenStore);\n    let crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserCache.getOrWait([session], \"write-only\"));\n    if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists\") {\n      crud = null;\n    }\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          await this.redirectToSignIn({ replace: true });\n          break;\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n        }\n        case \"anonymous\": {\n          const tokens = await this._signUpAnonymously();\n          return await this.getUser({ tokenStore: tokens, or: \"anonymous-if-exists\" }) ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.throwErr)(\"Something went wrong while signing up anonymously\");\n        }\n        case void 0:\n        case \"anonymous-if-exists\":\n        case \"return-null\": {\n          return null;\n        }\n      }\n    }\n    return crud && this._currentUserFromCrud(crud, session);\n  }\n  useUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const session = this._useSession(options?.tokenStore);\n    let crud = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentUserCache, [session], \"useUser()\");\n    if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists\") {\n      crud = null;\n    }\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n          (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspend)();\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"suspend should never return\");\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n        }\n        case \"anonymous\": {\n          (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n            await this._signUpAnonymously();\n            if (typeof window !== \"undefined\") {\n              window.location.reload();\n            }\n          });\n          (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspend)();\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"suspend should never return\");\n        }\n        case void 0:\n        case \"anonymous-if-exists\":\n        case \"return-null\": {\n        }\n      }\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => {\n      return crud && this._currentUserFromCrud(crud, session);\n    }, [crud, session, options?.or]);\n  }\n  async _updateClientUser(update, session) {\n    const res = await this._interface.updateClientUser((0,_users__WEBPACK_IMPORTED_MODULE_26__.userUpdateOptionsToCrud)(update), session);\n    await this._refreshUser(session);\n    return res;\n  }\n  async signInWithOAuth(provider) {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"signInWithOAuth can currently only be called in a browser environment\");\n    }\n    this._ensurePersistentTokenStore();\n    await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.signInWithOAuth)(\n      this._interface,\n      {\n        provider,\n        redirectUrl: this.urls.oauthCallback,\n        errorRedirectUrl: this.urls.error,\n        providerScope: this._oauthScopesOnSignIn[provider]?.join(\" \")\n      }\n    );\n  }\n  /**\n   * @deprecated\n   * TODO remove\n   */\n  async _experimentalMfa(error, session) {\n    const otp = prompt(\"Please enter the six-digit TOTP code from your authenticator app.\");\n    if (!otp) {\n      throw new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode();\n    }\n    return await this._interface.totpMfa(\n      error.details?.attempt_code ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.throwErr)(\"attempt code missing\"),\n      otp,\n      session\n    );\n  }\n  /**\n   * @deprecated\n   * TODO remove\n   */\n  async _catchMfaRequiredError(callback) {\n    try {\n      return await callback();\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.MultiFactorAuthenticationRequired) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(await this._experimentalMfa(e, await this._getSession()));\n      }\n      throw e;\n    }\n  }\n  async signInWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithCredential(options.email, options.password, session);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(e);\n      }\n      throw e;\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options.noRedirect) {\n        await this.redirectToAfterSignIn({ replace: true });\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async signUpWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    const emailVerificationRedirectUrl = options.verificationCallbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.emailVerification, \"verificationCallbackUrl\");\n    const result = await this._interface.signUpWithCredential(\n      options.email,\n      options.password,\n      emailVerificationRedirectUrl,\n      session\n    );\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options.noRedirect) {\n        await this.redirectToAfterSignUp({ replace: true });\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async _signUpAnonymously() {\n    this._ensurePersistentTokenStore();\n    if (!this._anonymousSignUpInProgress) {\n      this._anonymousSignUpInProgress = (async () => {\n        this._ensurePersistentTokenStore();\n        const session = await this._getSession();\n        const result = await this._interface.signUpAnonymously(session);\n        if (result.status === \"ok\") {\n          await this._signInToAccountWithTokens(result.data);\n        } else {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"signUpAnonymously() should never return an error\");\n        }\n        this._anonymousSignUpInProgress = null;\n        return result.data;\n      })();\n    }\n    return await this._anonymousSignUpInProgress;\n  }\n  async signInWithMagicLink(code, options) {\n    this._ensurePersistentTokenStore();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithMagicLink(code);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(e);\n      }\n      throw e;\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options?.noRedirect) {\n        if (result.data.newUser) {\n          await this.redirectToAfterSignUp({ replace: true });\n        } else {\n          await this.redirectToAfterSignIn({ replace: true });\n        }\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async signInWithPasskey() {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        const initiationResult = await this._interface.initiatePasskeyAuthentication({}, session);\n        if (initiationResult.status !== \"ok\") {\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyAuthenticationFailed(\"Failed to get initiation options for passkey authentication\"));\n        }\n        const { options_json, code } = initiationResult.data;\n        if (options_json.rpId !== \"THIS_VALUE_WILL_BE_REPLACED.example.com\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`Expected returned RP ID from server to equal sentinel, but found ${options_json.rpId}`);\n        }\n        options_json.rpId = window.location.hostname;\n        const authentication_response = await (0,_simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.startAuthentication)({ optionsJSON: options_json });\n        return await this._interface.signInWithPasskey({ authentication_response, code });\n      });\n    } catch (error) {\n      if (error instanceof _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.WebAuthnError) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyWebAuthnError(error.message, error.name));\n      } else {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyAuthenticationFailed(\"Failed to sign in with passkey\"));\n      }\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      await this.redirectToAfterSignIn({ replace: true });\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async callOAuthCallback() {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"callOAuthCallback can currently only be called in a browser environment\");\n    }\n    this._ensurePersistentTokenStore();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.callOAuthCallback)(this._interface, this.urls.oauthCallback);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        alert(\"Invalid TOTP code. Please try signing in again.\");\n        return false;\n      } else {\n        throw e;\n      }\n    }\n    if (result.status === \"ok\" && result.data) {\n      await this._signInToAccountWithTokens(result.data);\n      if (\"afterCallbackRedirectUrl\" in result.data && result.data.afterCallbackRedirectUrl) {\n        await this._redirectTo({ url: result.data.afterCallbackRedirectUrl, replace: true });\n        return true;\n      } else if (result.data.newUser) {\n        await this.redirectToAfterSignUp({ replace: true });\n        return true;\n      } else {\n        await this.redirectToAfterSignIn({ replace: true });\n        return true;\n      }\n    }\n    return false;\n  }\n  async _signOut(session, options) {\n    await _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.storeLock.withWriteLock(async () => {\n      await this._interface.signOut(session);\n      if (options?.redirectUrl) {\n        await this._redirectTo({ url: options.redirectUrl, replace: true });\n      } else {\n        await this.redirectToAfterSignOut();\n      }\n    });\n  }\n  async signOut(options) {\n    const user = await this.getUser();\n    if (user) {\n      await user.signOut(options);\n    }\n  }\n  async getProject() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentProjectCache.getOrWait([], \"write-only\"));\n    return this._clientProjectFromCrud(crud);\n  }\n  useProject() {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentProjectCache, [], \"useProject()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => this._clientProjectFromCrud(crud), [crud]);\n  }\n  async _listOwnedProjects(session) {\n    this._ensureInternalProject();\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._ownedProjectsCache.getOrWait([session], \"write-only\"));\n    return crud.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    ));\n  }\n  _useOwnedProjects(session) {\n    this._ensureInternalProject();\n    const projects = (0,_common__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._ownedProjectsCache, [session], \"useOwnedProjects()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => projects.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    )), [projects]);\n  }\n  async _createProject(session, newProject) {\n    this._ensureInternalProject();\n    const crud = await this._interface.createProject((0,_projects__WEBPACK_IMPORTED_MODULE_27__.adminProjectCreateOptionsToCrud)(newProject), session);\n    const res = this._getOwnedAdminApp(crud.id, session)._adminOwnedProjectFromCrud(\n      crud,\n      () => this._refreshOwnedProjects(session)\n    );\n    await this._refreshOwnedProjects(session);\n    return res;\n  }\n  async _refreshUser(session) {\n    await this._refreshSession(session);\n  }\n  async _refreshSession(session) {\n    await this._currentUserCache.refresh([session]);\n  }\n  async _refreshUsers() {\n  }\n  async _refreshProject() {\n    await this._currentProjectCache.refresh([]);\n  }\n  async _refreshOwnedProjects(session) {\n    await this._ownedProjectsCache.refresh([session]);\n  }\n  static get [_common__WEBPACK_IMPORTED_MODULE_28__.stackAppInternalsSymbol]() {\n    return {\n      fromClientJson: (json) => {\n        const providedCheckString = JSON.stringify((0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__.omit)(json, [\n          /* none currently */\n        ]));\n        const existing = allClientApps.get(json.uniqueIdentifier);\n        if (existing) {\n          const [existingCheckString, clientApp] = existing;\n          if (existingCheckString !== providedCheckString) {\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"The provided app JSON does not match the configuration of the existing client app with the same unique identifier\", { providedObj: json, existingString: existingCheckString });\n          }\n          return clientApp;\n        }\n        return new __StackClientAppImplIncomplete({\n          ...json,\n          checkString: providedCheckString\n        });\n      }\n    };\n  }\n  get [_common__WEBPACK_IMPORTED_MODULE_28__.stackAppInternalsSymbol]() {\n    return {\n      toClientJson: () => {\n        if (!(\"publishableClientKey\" in this._interface.options)) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Cannot serialize to JSON from an application without a publishable client key\");\n        }\n        if (typeof this._redirectMethod !== \"string\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Cannot serialize to JSON from an application with a non-string redirect method\");\n        }\n        return {\n          baseUrl: this._options.baseUrl,\n          projectId: this.projectId,\n          publishableClientKey: this._interface.options.publishableClientKey,\n          tokenStore: this._tokenStoreInit,\n          urls: this._urlOptions,\n          oauthScopesOnSignIn: this._oauthScopesOnSignIn,\n          uniqueIdentifier: this._getUniqueIdentifier(),\n          redirectMethod: this._redirectMethod,\n          extraRequestHeaders: this._options.extraRequestHeaders\n        };\n      },\n      setCurrentUser: (userJsonPromise) => {\n        (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n          await this._currentUserCache.forceSetCachedValueAsync([await this._getSession()], _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.fromPromise(userJsonPromise));\n        });\n      },\n      sendRequest: async (path, requestOptions, requestType = \"client\") => {\n        return await this._interface.sendClientRequest(path, requestOptions, await this._getSession(), requestType);\n      }\n    };\n  }\n};\n/**\n * There is a circular dependency between the admin app and the client app, as the former inherits from the latter and\n * the latter needs to use the former when creating a new instance of an internal project.\n *\n * To break it, we set the admin app here lazily instead of importing it directly. This variable is set by ./index.ts,\n * which imports both this file and ./admin-app-impl.ts.\n */\n__StackClientAppImplIncomplete.LazyStackAdminAppImpl = { value: void 0 };\nvar _StackClientAppImplIncomplete = __StackClientAppImplIncomplete;\n\n//# sourceMappingURL=client-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientVersion: () => (/* binding */ clientVersion),\n/* harmony export */   createCache: () => (/* binding */ createCache),\n/* harmony export */   createCacheBySession: () => (/* binding */ createCacheBySession),\n/* harmony export */   createEmptyTokenStore: () => (/* binding */ createEmptyTokenStore),\n/* harmony export */   getBaseUrl: () => (/* binding */ getBaseUrl),\n/* harmony export */   getDefaultExtraRequestHeaders: () => (/* binding */ getDefaultExtraRequestHeaders),\n/* harmony export */   getDefaultProjectId: () => (/* binding */ getDefaultProjectId),\n/* harmony export */   getDefaultPublishableClientKey: () => (/* binding */ getDefaultPublishableClientKey),\n/* harmony export */   getDefaultSecretServerKey: () => (/* binding */ getDefaultSecretServerKey),\n/* harmony export */   getDefaultSuperSecretAdminKey: () => (/* binding */ getDefaultSuperSecretAdminKey),\n/* harmony export */   getUrls: () => (/* binding */ getUrls),\n/* harmony export */   useAsyncCache: () => (/* binding */ useAsyncCache)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/caches */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/lib/stack-app/apps/implementations/common.ts\n\n\n\n\n\n\n\n\nvar clientVersion = \"js @stackframe/stack@2.8.3\";\nif (clientVersion.startsWith(\"STACK_COMPILE_TIME\")) {\n  throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Client version was not replaced. Something went wrong during build!\");\n}\nvar createCache = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__.AsyncCache(\n    async (dependencies) => await _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__.Result.fromThrowingAsync(async () => await fetcher(dependencies)),\n    {}\n  );\n};\nvar createCacheBySession = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__.AsyncCache(\n    async ([session, ...extraDependencies]) => await _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__.Result.fromThrowingAsync(async () => await fetcher(session, extraDependencies)),\n    {\n      onSubscribe: ([session], refresh) => {\n        const handler = session.onInvalidate(() => refresh());\n        return () => handler.unsubscribe();\n      }\n    }\n  );\n};\nfunction getUrls(partial) {\n  const handler = partial.handler ?? \"/handler\";\n  const home = partial.home ?? \"/\";\n  const afterSignIn = partial.afterSignIn ?? home;\n  return {\n    handler,\n    signIn: `${handler}/sign-in`,\n    afterSignIn: home,\n    signUp: `${handler}/sign-up`,\n    afterSignUp: afterSignIn,\n    signOut: `${handler}/sign-out`,\n    afterSignOut: home,\n    emailVerification: `${handler}/email-verification`,\n    passwordReset: `${handler}/password-reset`,\n    forgotPassword: `${handler}/forgot-password`,\n    oauthCallback: `${handler}/oauth-callback`,\n    magicLinkCallback: `${handler}/magic-link-callback`,\n    home,\n    accountSettings: `${handler}/account-settings`,\n    error: `${handler}/error`,\n    teamInvitation: `${handler}/team-invitation`,\n    ...(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)(partial)\n  };\n}\nfunction getDefaultProjectId() {\n  return \"c96ba5de-bb2a-43b9-9283-7d0b5d7762c9\" || 0;\n}\nfunction getDefaultPublishableClientKey() {\n  return \"pck_0b4d3xze5mgp06cgr16xe761fge2j7xhfwsheya2mxt1g\" || 0;\n}\nfunction getDefaultSecretServerKey() {\n  return process.env.STACK_SECRET_SERVER_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"No secret server key provided. Please copy your key from the Stack dashboard and put it in the STACK_SECRET_SERVER_KEY environment variable.\"));\n}\nfunction getDefaultSuperSecretAdminKey() {\n  return process.env.STACK_SUPER_SECRET_ADMIN_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"No super secret admin key provided. Please copy your key from the Stack dashboard and put it in the STACK_SUPER_SECRET_ADMIN_KEY environment variable.\"));\n}\nfunction getDefaultExtraRequestHeaders() {\n  return JSON.parse(process.env.NEXT_PUBLIC_STACK_EXTRA_REQUEST_HEADERS || \"{}\");\n}\nfunction getBaseUrl(userSpecifiedBaseUrl) {\n  let url;\n  if (userSpecifiedBaseUrl) {\n    if (typeof userSpecifiedBaseUrl === \"string\") {\n      url = userSpecifiedBaseUrl;\n    } else {\n      if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n        url = userSpecifiedBaseUrl.browser;\n      } else {\n        url = userSpecifiedBaseUrl.server;\n      }\n    }\n  } else {\n    if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n      url = process.env.NEXT_PUBLIC_BROWSER_STACK_API_URL;\n    } else {\n      url = process.env.NEXT_PUBLIC_SERVER_STACK_API_URL;\n    }\n    url = url || process.env.NEXT_PUBLIC_STACK_API_URL || process.env.NEXT_PUBLIC_STACK_URL || defaultBaseUrl;\n  }\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\n}\nvar defaultBaseUrl = \"https://api.stack-auth.com\";\nfunction createEmptyTokenStore() {\n  return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_6__.Store({\n    refreshToken: null,\n    accessToken: null\n  });\n}\nvar cachePromiseByHookId = /* @__PURE__ */ new Map();\nfunction useAsyncCache(cache, dependencies, caller) {\n  (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_4__.suspendIfSsr)(caller);\n  const id = react__WEBPACK_IMPORTED_MODULE_7___default().useId();\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((cb) => {\n    const { unsubscribe } = cache.onStateChange(dependencies, () => {\n      cachePromiseByHookId.delete(id);\n      cb();\n    });\n    return unsubscribe;\n  }, [cache, ...dependencies]);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)(() => {\n    if (!cachePromiseByHookId.has(id)) {\n      cachePromiseByHookId.set(id, cache.getOrWait(dependencies, \"read-write\"));\n    }\n    return cachePromiseByHookId.get(id);\n  }, [cache, ...dependencies]);\n  const promise = react__WEBPACK_IMPORTED_MODULE_7___default().useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    () => (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"getServerSnapshot should never be called in useAsyncCache because we restrict to CSR earlier\"))\n  );\n  const result = react__WEBPACK_IMPORTED_MODULE_7___default().use(promise);\n  if (result.status === \"error\") {\n    const error = result.error;\n    if (error instanceof Error && !error.__stackHasConcatenatedStacktraces) {\n      (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.concatStacktraces)(error, new Error());\n      error.__stackHasConcatenatedStacktraces = true;\n    }\n    throw error;\n  }\n  return result.data;\n}\n\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW1wbGVtZW50YXRpb25zL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDd0U7QUFDQTtBQUNzQztBQUNoQztBQUNMO0FBQ0o7QUFDRjtBQUN4QjtBQUMzQztBQUNBO0FBQ0EsWUFBWSwyRkFBbUI7QUFDL0I7QUFDQTtBQUNBLGFBQWEsa0ZBQVU7QUFDdkIsa0NBQWtDLCtFQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrRkFBVTtBQUN2QixxREFBcUQsK0VBQU07QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0EsMEJBQTBCLFFBQVE7QUFDbEMsc0JBQXNCLFFBQVE7QUFDOUIsdUJBQXVCLFFBQVE7QUFDL0Isc0JBQXNCLFFBQVE7QUFDOUIsMEJBQTBCLFFBQVE7QUFDbEM7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQyxjQUFjLFFBQVE7QUFDdEIsdUJBQXVCLFFBQVE7QUFDL0IsT0FBTyw0RkFBZTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNDQUF3QyxJQUFJLENBQWdQO0FBQ3JTO0FBQ0E7QUFDQSxTQUFTLG1EQUFvRCxJQUFJLENBQXNUO0FBQ3ZYO0FBQ0E7QUFDQSxTQUFTLE9BQU8sZ0NBQWdDLG9GQUFRO0FBQ3hEO0FBQ0E7QUFDQSxTQUFTLE9BQU8scUNBQXFDLG9GQUFRO0FBQzdEO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTyxtREFBbUQ7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLFVBQVUsc0ZBQWE7QUFDdkI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLFFBQVEsc0ZBQWE7QUFDckIsWUFBWSxPQUFPO0FBQ25CLE1BQU07QUFDTixZQUFZLE9BQU87QUFDbkI7QUFDQSxpQkFBaUIsT0FBTyxrQ0FBa0MsT0FBTztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw2RUFBSztBQUNsQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEVBQUUsdUZBQVk7QUFDZCxhQUFhLGtEQUFXO0FBQ3hCLG9CQUFvQixrREFBVztBQUMvQixZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSCxzQkFBc0Isa0RBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsa0JBQWtCLGlFQUEwQjtBQUM1QztBQUNBO0FBQ0EsVUFBVSxvRkFBUTtBQUNsQjtBQUNBLGlCQUFpQixnREFBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZGQUFpQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFjRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcHBzXFxpbXBsZW1lbnRhdGlvbnNcXGNvbW1vbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9hcHBzL2ltcGxlbWVudGF0aW9ucy9jb21tb24udHNcbmltcG9ydCB7IEFzeW5jQ2FjaGUgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY2FjaGVzXCI7XG5pbXBvcnQgeyBpc0Jyb3dzZXJMaWtlIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2VudlwiO1xuaW1wb3J0IHsgU3RhY2tBc3NlcnRpb25FcnJvciwgY29uY2F0U3RhY2t0cmFjZXMsIHRocm93RXJyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2Vycm9yc1wiO1xuaW1wb3J0IHsgZmlsdGVyVW5kZWZpbmVkIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL29iamVjdHNcIjtcbmltcG9ydCB7IHN1c3BlbmRJZlNzciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9yZWFjdFwiO1xuaW1wb3J0IHsgUmVzdWx0IH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3Jlc3VsdHNcIjtcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3N0b3Jlc1wiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgY2xpZW50VmVyc2lvbiA9IFwianMgQHN0YWNrZnJhbWUvc3RhY2tAMi44LjNcIjtcbmlmIChjbGllbnRWZXJzaW9uLnN0YXJ0c1dpdGgoXCJTVEFDS19DT01QSUxFX1RJTUVcIikpIHtcbiAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJDbGllbnQgdmVyc2lvbiB3YXMgbm90IHJlcGxhY2VkLiBTb21ldGhpbmcgd2VudCB3cm9uZyBkdXJpbmcgYnVpbGQhXCIpO1xufVxudmFyIGNyZWF0ZUNhY2hlID0gKGZldGNoZXIpID0+IHtcbiAgcmV0dXJuIG5ldyBBc3luY0NhY2hlKFxuICAgIGFzeW5jIChkZXBlbmRlbmNpZXMpID0+IGF3YWl0IFJlc3VsdC5mcm9tVGhyb3dpbmdBc3luYyhhc3luYyAoKSA9PiBhd2FpdCBmZXRjaGVyKGRlcGVuZGVuY2llcykpLFxuICAgIHt9XG4gICk7XG59O1xudmFyIGNyZWF0ZUNhY2hlQnlTZXNzaW9uID0gKGZldGNoZXIpID0+IHtcbiAgcmV0dXJuIG5ldyBBc3luY0NhY2hlKFxuICAgIGFzeW5jIChbc2Vzc2lvbiwgLi4uZXh0cmFEZXBlbmRlbmNpZXNdKSA9PiBhd2FpdCBSZXN1bHQuZnJvbVRocm93aW5nQXN5bmMoYXN5bmMgKCkgPT4gYXdhaXQgZmV0Y2hlcihzZXNzaW9uLCBleHRyYURlcGVuZGVuY2llcykpLFxuICAgIHtcbiAgICAgIG9uU3Vic2NyaWJlOiAoW3Nlc3Npb25dLCByZWZyZXNoKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhbmRsZXIgPSBzZXNzaW9uLm9uSW52YWxpZGF0ZSgoKSA9PiByZWZyZXNoKCkpO1xuICAgICAgICByZXR1cm4gKCkgPT4gaGFuZGxlci51bnN1YnNjcmliZSgpO1xuICAgICAgfVxuICAgIH1cbiAgKTtcbn07XG5mdW5jdGlvbiBnZXRVcmxzKHBhcnRpYWwpIHtcbiAgY29uc3QgaGFuZGxlciA9IHBhcnRpYWwuaGFuZGxlciA/PyBcIi9oYW5kbGVyXCI7XG4gIGNvbnN0IGhvbWUgPSBwYXJ0aWFsLmhvbWUgPz8gXCIvXCI7XG4gIGNvbnN0IGFmdGVyU2lnbkluID0gcGFydGlhbC5hZnRlclNpZ25JbiA/PyBob21lO1xuICByZXR1cm4ge1xuICAgIGhhbmRsZXIsXG4gICAgc2lnbkluOiBgJHtoYW5kbGVyfS9zaWduLWluYCxcbiAgICBhZnRlclNpZ25JbjogaG9tZSxcbiAgICBzaWduVXA6IGAke2hhbmRsZXJ9L3NpZ24tdXBgLFxuICAgIGFmdGVyU2lnblVwOiBhZnRlclNpZ25JbixcbiAgICBzaWduT3V0OiBgJHtoYW5kbGVyfS9zaWduLW91dGAsXG4gICAgYWZ0ZXJTaWduT3V0OiBob21lLFxuICAgIGVtYWlsVmVyaWZpY2F0aW9uOiBgJHtoYW5kbGVyfS9lbWFpbC12ZXJpZmljYXRpb25gLFxuICAgIHBhc3N3b3JkUmVzZXQ6IGAke2hhbmRsZXJ9L3Bhc3N3b3JkLXJlc2V0YCxcbiAgICBmb3Jnb3RQYXNzd29yZDogYCR7aGFuZGxlcn0vZm9yZ290LXBhc3N3b3JkYCxcbiAgICBvYXV0aENhbGxiYWNrOiBgJHtoYW5kbGVyfS9vYXV0aC1jYWxsYmFja2AsXG4gICAgbWFnaWNMaW5rQ2FsbGJhY2s6IGAke2hhbmRsZXJ9L21hZ2ljLWxpbmstY2FsbGJhY2tgLFxuICAgIGhvbWUsXG4gICAgYWNjb3VudFNldHRpbmdzOiBgJHtoYW5kbGVyfS9hY2NvdW50LXNldHRpbmdzYCxcbiAgICBlcnJvcjogYCR7aGFuZGxlcn0vZXJyb3JgLFxuICAgIHRlYW1JbnZpdGF0aW9uOiBgJHtoYW5kbGVyfS90ZWFtLWludml0YXRpb25gLFxuICAgIC4uLmZpbHRlclVuZGVmaW5lZChwYXJ0aWFsKVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0RGVmYXVsdFByb2plY3RJZCgpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUQUNLX1BST0pFQ1RfSUQgfHwgdGhyb3dFcnIobmV3IEVycm9yKFwiV2VsY29tZSB0byBTdGFjayBBdXRoISBJdCBzZWVtcyB0aGF0IHlvdSBoYXZlbid0IHByb3ZpZGVkIGEgcHJvamVjdCBJRC4gUGxlYXNlIGNyZWF0ZSBhIHByb2plY3Qgb24gdGhlIFN0YWNrIGRhc2hib2FyZCBhdCBodHRwczovL2FwcC5zdGFjay1hdXRoLmNvbSBhbmQgcHV0IGl0IGluIHRoZSBORVhUX1BVQkxJQ19TVEFDS19QUk9KRUNUX0lEIGVudmlyb25tZW50IHZhcmlhYmxlLlwiKSk7XG59XG5mdW5jdGlvbiBnZXREZWZhdWx0UHVibGlzaGFibGVDbGllbnRLZXkoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVEFDS19QVUJMSVNIQUJMRV9DTElFTlRfS0VZIHx8IHRocm93RXJyKG5ldyBFcnJvcihcIldlbGNvbWUgdG8gU3RhY2sgQXV0aCEgSXQgc2VlbXMgdGhhdCB5b3UgaGF2ZW4ndCBwcm92aWRlZCBhIHB1Ymxpc2hhYmxlIGNsaWVudCBrZXkuIFBsZWFzZSBjcmVhdGUgYW4gQVBJIGtleSBmb3IgeW91ciBwcm9qZWN0IG9uIHRoZSBTdGFjayBkYXNoYm9hcmQgYXQgaHR0cHM6Ly9hcHAuc3RhY2stYXV0aC5jb20gYW5kIGNvcHkgeW91ciBwdWJsaXNoYWJsZSBjbGllbnQga2V5IGludG8gdGhlIE5FWFRfUFVCTElDX1NUQUNLX1BVQkxJU0hBQkxFX0NMSUVOVF9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIpKTtcbn1cbmZ1bmN0aW9uIGdldERlZmF1bHRTZWNyZXRTZXJ2ZXJLZXkoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5TVEFDS19TRUNSRVRfU0VSVkVSX0tFWSB8fCB0aHJvd0VycihuZXcgRXJyb3IoXCJObyBzZWNyZXQgc2VydmVyIGtleSBwcm92aWRlZC4gUGxlYXNlIGNvcHkgeW91ciBrZXkgZnJvbSB0aGUgU3RhY2sgZGFzaGJvYXJkIGFuZCBwdXQgaXQgaW4gdGhlIFNUQUNLX1NFQ1JFVF9TRVJWRVJfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiKSk7XG59XG5mdW5jdGlvbiBnZXREZWZhdWx0U3VwZXJTZWNyZXRBZG1pbktleSgpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52LlNUQUNLX1NVUEVSX1NFQ1JFVF9BRE1JTl9LRVkgfHwgdGhyb3dFcnIobmV3IEVycm9yKFwiTm8gc3VwZXIgc2VjcmV0IGFkbWluIGtleSBwcm92aWRlZC4gUGxlYXNlIGNvcHkgeW91ciBrZXkgZnJvbSB0aGUgU3RhY2sgZGFzaGJvYXJkIGFuZCBwdXQgaXQgaW4gdGhlIFNUQUNLX1NVUEVSX1NFQ1JFVF9BRE1JTl9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIpKTtcbn1cbmZ1bmN0aW9uIGdldERlZmF1bHRFeHRyYVJlcXVlc3RIZWFkZXJzKCkge1xuICByZXR1cm4gSlNPTi5wYXJzZShwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVEFDS19FWFRSQV9SRVFVRVNUX0hFQURFUlMgfHwgXCJ7fVwiKTtcbn1cbmZ1bmN0aW9uIGdldEJhc2VVcmwodXNlclNwZWNpZmllZEJhc2VVcmwpIHtcbiAgbGV0IHVybDtcbiAgaWYgKHVzZXJTcGVjaWZpZWRCYXNlVXJsKSB7XG4gICAgaWYgKHR5cGVvZiB1c2VyU3BlY2lmaWVkQmFzZVVybCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgdXJsID0gdXNlclNwZWNpZmllZEJhc2VVcmw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc0Jyb3dzZXJMaWtlKCkpIHtcbiAgICAgICAgdXJsID0gdXNlclNwZWNpZmllZEJhc2VVcmwuYnJvd3NlcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVybCA9IHVzZXJTcGVjaWZpZWRCYXNlVXJsLnNlcnZlcjtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGlzQnJvd3Nlckxpa2UoKSkge1xuICAgICAgdXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQlJPV1NFUl9TVEFDS19BUElfVVJMO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TRVJWRVJfU1RBQ0tfQVBJX1VSTDtcbiAgICB9XG4gICAgdXJsID0gdXJsIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUQUNLX0FQSV9VUkwgfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfVVJMIHx8IGRlZmF1bHRCYXNlVXJsO1xuICB9XG4gIHJldHVybiB1cmwuZW5kc1dpdGgoXCIvXCIpID8gdXJsLnNsaWNlKDAsIC0xKSA6IHVybDtcbn1cbnZhciBkZWZhdWx0QmFzZVVybCA9IFwiaHR0cHM6Ly9hcGkuc3RhY2stYXV0aC5jb21cIjtcbmZ1bmN0aW9uIGNyZWF0ZUVtcHR5VG9rZW5TdG9yZSgpIHtcbiAgcmV0dXJuIG5ldyBTdG9yZSh7XG4gICAgcmVmcmVzaFRva2VuOiBudWxsLFxuICAgIGFjY2Vzc1Rva2VuOiBudWxsXG4gIH0pO1xufVxudmFyIGNhY2hlUHJvbWlzZUJ5SG9va0lkID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbmZ1bmN0aW9uIHVzZUFzeW5jQ2FjaGUoY2FjaGUsIGRlcGVuZGVuY2llcywgY2FsbGVyKSB7XG4gIHN1c3BlbmRJZlNzcihjYWxsZXIpO1xuICBjb25zdCBpZCA9IFJlYWN0LnVzZUlkKCk7XG4gIGNvbnN0IHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKChjYikgPT4ge1xuICAgIGNvbnN0IHsgdW5zdWJzY3JpYmUgfSA9IGNhY2hlLm9uU3RhdGVDaGFuZ2UoZGVwZW5kZW5jaWVzLCAoKSA9PiB7XG4gICAgICBjYWNoZVByb21pc2VCeUhvb2tJZC5kZWxldGUoaWQpO1xuICAgICAgY2IoKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0sIFtjYWNoZSwgLi4uZGVwZW5kZW5jaWVzXSk7XG4gIGNvbnN0IGdldFNuYXBzaG90ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICghY2FjaGVQcm9taXNlQnlIb29rSWQuaGFzKGlkKSkge1xuICAgICAgY2FjaGVQcm9taXNlQnlIb29rSWQuc2V0KGlkLCBjYWNoZS5nZXRPcldhaXQoZGVwZW5kZW5jaWVzLCBcInJlYWQtd3JpdGVcIikpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVQcm9taXNlQnlIb29rSWQuZ2V0KGlkKTtcbiAgfSwgW2NhY2hlLCAuLi5kZXBlbmRlbmNpZXNdKTtcbiAgY29uc3QgcHJvbWlzZSA9IFJlYWN0LnVzZVN5bmNFeHRlcm5hbFN0b3JlKFxuICAgIHN1YnNjcmliZSxcbiAgICBnZXRTbmFwc2hvdCxcbiAgICAoKSA9PiB0aHJvd0VycihuZXcgRXJyb3IoXCJnZXRTZXJ2ZXJTbmFwc2hvdCBzaG91bGQgbmV2ZXIgYmUgY2FsbGVkIGluIHVzZUFzeW5jQ2FjaGUgYmVjYXVzZSB3ZSByZXN0cmljdCB0byBDU1IgZWFybGllclwiKSlcbiAgKTtcbiAgY29uc3QgcmVzdWx0ID0gUmVhY3QudXNlKHByb21pc2UpO1xuICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiKSB7XG4gICAgY29uc3QgZXJyb3IgPSByZXN1bHQuZXJyb3I7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIWVycm9yLl9fc3RhY2tIYXNDb25jYXRlbmF0ZWRTdGFja3RyYWNlcykge1xuICAgICAgY29uY2F0U3RhY2t0cmFjZXMoZXJyb3IsIG5ldyBFcnJvcigpKTtcbiAgICAgIGVycm9yLl9fc3RhY2tIYXNDb25jYXRlbmF0ZWRTdGFja3RyYWNlcyA9IHRydWU7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG4gIHJldHVybiByZXN1bHQuZGF0YTtcbn1cbmV4cG9ydCB7XG4gIGNsaWVudFZlcnNpb24sXG4gIGNyZWF0ZUNhY2hlLFxuICBjcmVhdGVDYWNoZUJ5U2Vzc2lvbixcbiAgY3JlYXRlRW1wdHlUb2tlblN0b3JlLFxuICBnZXRCYXNlVXJsLFxuICBnZXREZWZhdWx0RXh0cmFSZXF1ZXN0SGVhZGVycyxcbiAgZ2V0RGVmYXVsdFByb2plY3RJZCxcbiAgZ2V0RGVmYXVsdFB1Ymxpc2hhYmxlQ2xpZW50S2V5LFxuICBnZXREZWZhdWx0U2VjcmV0U2VydmVyS2V5LFxuICBnZXREZWZhdWx0U3VwZXJTZWNyZXRBZG1pbktleSxcbiAgZ2V0VXJscyxcbiAgdXNlQXN5bmNDYWNoZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbW1vbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackAdminAppImpl: () => (/* binding */ _StackAdminAppImpl),\n/* harmony export */   _StackClientAppImpl: () => (/* binding */ _StackClientAppImpl),\n/* harmony export */   _StackServerAppImpl: () => (/* binding */ _StackServerAppImpl)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/compile-time */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js\");\n/* harmony import */ var _admin_app_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./admin-app-impl */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js\");\n/* harmony import */ var _client_app_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client-app-impl */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\");\n/* harmony import */ var _server_app_impl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-app-impl */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\");\n// src/lib/stack-app/apps/implementations/index.ts\n\n\n\n\nfunction complete() {\n  _client_app_impl__WEBPACK_IMPORTED_MODULE_1__._StackClientAppImplIncomplete.LazyStackAdminAppImpl.value = _admin_app_impl__WEBPACK_IMPORTED_MODULE_2__._StackAdminAppImplIncomplete;\n  return {\n    _StackAdminAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_admin_app_impl__WEBPACK_IMPORTED_MODULE_2__._StackAdminAppImplIncomplete),\n    _StackClientAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_client_app_impl__WEBPACK_IMPORTED_MODULE_1__._StackClientAppImplIncomplete),\n    _StackServerAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_server_app_impl__WEBPACK_IMPORTED_MODULE_3__._StackServerAppImplIncomplete)\n  };\n}\nvar {\n  _StackAdminAppImpl,\n  _StackClientAppImpl,\n  _StackServerAppImpl\n} = complete();\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW1wbGVtZW50YXRpb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUM2RjtBQUM3QjtBQUNFO0FBQ0E7QUFDbEU7QUFDQSxFQUFFLDJFQUE2QiwrQkFBK0IseUVBQTRCO0FBQzFGO0FBQ0Esd0JBQXdCLDJHQUF5QixDQUFDLHlFQUE0QjtBQUM5RSx5QkFBeUIsMkdBQXlCLENBQUMsMkVBQTZCO0FBQ2hGLHlCQUF5QiwyR0FBeUIsQ0FBQywyRUFBNkI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUtBO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGFwcHNcXGltcGxlbWVudGF0aW9uc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvYXBwcy9pbXBsZW1lbnRhdGlvbnMvaW5kZXgudHNcbmltcG9ydCB7IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY29tcGlsZS10aW1lXCI7XG5pbXBvcnQgeyBfU3RhY2tBZG1pbkFwcEltcGxJbmNvbXBsZXRlIH0gZnJvbSBcIi4vYWRtaW4tYXBwLWltcGxcIjtcbmltcG9ydCB7IF9TdGFja0NsaWVudEFwcEltcGxJbmNvbXBsZXRlIH0gZnJvbSBcIi4vY2xpZW50LWFwcC1pbXBsXCI7XG5pbXBvcnQgeyBfU3RhY2tTZXJ2ZXJBcHBJbXBsSW5jb21wbGV0ZSB9IGZyb20gXCIuL3NlcnZlci1hcHAtaW1wbFwiO1xuZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gIF9TdGFja0NsaWVudEFwcEltcGxJbmNvbXBsZXRlLkxhenlTdGFja0FkbWluQXBwSW1wbC52YWx1ZSA9IF9TdGFja0FkbWluQXBwSW1wbEluY29tcGxldGU7XG4gIHJldHVybiB7XG4gICAgX1N0YWNrQWRtaW5BcHBJbXBsOiBzY3JhbWJsZUR1cmluZ0NvbXBpbGVUaW1lKF9TdGFja0FkbWluQXBwSW1wbEluY29tcGxldGUpLFxuICAgIF9TdGFja0NsaWVudEFwcEltcGw6IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUoX1N0YWNrQ2xpZW50QXBwSW1wbEluY29tcGxldGUpLFxuICAgIF9TdGFja1NlcnZlckFwcEltcGw6IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUoX1N0YWNrU2VydmVyQXBwSW1wbEluY29tcGxldGUpXG4gIH07XG59XG52YXIge1xuICBfU3RhY2tBZG1pbkFwcEltcGwsXG4gIF9TdGFja0NsaWVudEFwcEltcGwsXG4gIF9TdGFja1NlcnZlckFwcEltcGxcbn0gPSBjb21wbGV0ZSgpO1xuZXhwb3J0IHtcbiAgX1N0YWNrQWRtaW5BcHBJbXBsLFxuICBfU3RhY2tDbGllbnRBcHBJbXBsLFxuICBfU3RhY2tTZXJ2ZXJBcHBJbXBsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackServerAppImplIncomplete: () => (/* binding */ _StackServerAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../utils/url */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _api_keys__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../api-keys */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\");\n/* harmony import */ var _contact_channels__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../contact-channels */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\");\n/* harmony import */ var _teams__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../teams */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\");\n/* harmony import */ var _users__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../users */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\");\n/* harmony import */ var _client_app_impl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client-app-impl */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n// src/lib/stack-app/apps/implementations/server-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _StackServerAppImplIncomplete = class extends _client_app_impl__WEBPACK_IMPORTED_MODULE_6__._StackClientAppImplIncomplete {\n  constructor(options) {\n    super(\"interface\" in options ? {\n      interface: options.interface,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn\n    } : {\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.StackServerInterface({\n        getBaseUrl: () => (0,_common__WEBPACK_IMPORTED_MODULE_7__.getBaseUrl)(options.baseUrl),\n        projectId: options.projectId ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultProjectId)(),\n        extraRequestHeaders: options.extraRequestHeaders ?? {},\n        clientVersion: _common__WEBPACK_IMPORTED_MODULE_7__.clientVersion,\n        publishableClientKey: options.publishableClientKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultPublishableClientKey)(),\n        secretServerKey: options.secretServerKey ?? (0,_common__WEBPACK_IMPORTED_MODULE_7__.getDefaultSecretServerKey)()\n      }),\n      baseUrl: options.baseUrl,\n      extraRequestHeaders: options.extraRequestHeaders,\n      projectId: options.projectId,\n      publishableClientKey: options.publishableClientKey,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn,\n      redirectMethod: options.redirectMethod\n    });\n    // TODO override the client user cache to use the server user cache, so we save some requests\n    this._currentServerUserCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCacheBySession)(async (session) => {\n      if (session.isKnownToBeInvalid()) {\n        return null;\n      }\n      return await this._interface.getServerUserByToken(session);\n    });\n    this._serverUsersCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([cursor, limit, orderBy, desc, query]) => {\n      return await this._interface.listServerUsers({ cursor, limit, orderBy, desc, query });\n    });\n    this._serverUserCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId]) => {\n      const user = await this._interface.getServerUserById(userId);\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.or(user, null);\n    });\n    this._serverTeamsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId]) => {\n      return await this._interface.listServerTeams({ userId });\n    });\n    this._serverTeamUserPermissionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([teamId, userId, recursive]) => {\n      return await this._interface.listServerTeamPermissions({ teamId, userId, recursive }, null);\n    });\n    this._serverUserProjectPermissionsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId, recursive]) => {\n      return await this._interface.listServerProjectPermissions({ userId, recursive }, null);\n    });\n    this._serverUserOAuthConnectionAccessTokensCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId, providerId, scope]) => {\n        try {\n          const result = await this._interface.createServerProviderAccessToken(userId, providerId, scope || \"\");\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope || err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthConnectionNotConnectedToUser)) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._serverUserOAuthConnectionCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId, providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserCache.getOrWait([userId], \"write-only\")),\n          getOrWaitOAuthToken: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserOAuthConnectionAccessTokensCache.getOrWait([userId, providerId, scope || \"\"], \"write-only\")),\n          useOAuthToken: () => (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUserOAuthConnectionAccessTokensCache, [userId, providerId, scope || \"\"], \"user.useConnectedAccount()\"),\n          providerId,\n          scope,\n          redirect,\n          session: null\n        });\n      }\n    );\n    this._serverTeamMemberProfilesCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        return await this._interface.listServerTeamMemberProfiles({ teamId });\n      }\n    );\n    this._serverTeamInvitationsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        return await this._interface.listServerTeamInvitations({ teamId });\n      }\n    );\n    this._serverUserTeamProfileCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId, userId]) => {\n        return await this._interface.getServerTeamMemberProfile({ teamId, userId });\n      }\n    );\n    this._serverContactChannelsCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        return await this._interface.listServerContactChannels(userId);\n      }\n    );\n    this._serverUserApiKeysCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        const result = await this._interface.listProjectApiKeys({\n          user_id: userId\n        }, null, \"server\");\n        return result;\n      }\n    );\n    this._serverTeamApiKeysCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        const result = await this._interface.listProjectApiKeys({\n          team_id: teamId\n        }, null, \"server\");\n        return result;\n      }\n    );\n    this._serverCheckApiKeyCache = (0,_common__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([type, apiKey]) => {\n      const result = await this._interface.checkProjectApiKey(\n        type,\n        apiKey,\n        null,\n        \"server\"\n      );\n      return result;\n    });\n  }\n  async _updateServerUser(userId, update) {\n    const result = await this._interface.updateServerUser(userId, (0,_users__WEBPACK_IMPORTED_MODULE_8__.serverUserUpdateOptionsToCrud)(update));\n    await this._refreshUsers();\n    return result;\n  }\n  _serverEditableTeamProfileFromCrud(crud) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async update(update) {\n        await app._interface.updateServerTeamMemberProfile({\n          teamId: crud.team_id,\n          userId: crud.user_id,\n          profile: {\n            display_name: update.displayName,\n            profile_image_url: update.profileImageUrl\n          }\n        });\n        await app._serverUserTeamProfileCache.refresh([crud.team_id, crud.user_id]);\n      }\n    };\n  }\n  _serverContactChannelFromCrud(userId, crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      value: crud.value,\n      type: crud.type,\n      isVerified: crud.is_verified,\n      isPrimary: crud.is_primary,\n      usedForAuth: crud.used_for_auth,\n      async sendVerificationEmail(options) {\n        await app._interface.sendServerContactChannelVerificationEmail(userId, crud.id, options?.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_9__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"));\n      },\n      async update(data) {\n        await app._interface.updateServerContactChannel(userId, crud.id, (0,_contact_channels__WEBPACK_IMPORTED_MODULE_10__.serverContactChannelUpdateOptionsToCrud)(data));\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([userId]),\n          app._serverUserCache.refresh([userId])\n        ]);\n      },\n      async delete() {\n        await app._interface.deleteServerContactChannel(userId, crud.id);\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([userId]),\n          app._serverUserCache.refresh([userId])\n        ]);\n      }\n    };\n  }\n  _serverApiKeyFromCrud(crud) {\n    return {\n      ...this._baseApiKeyFromCrud(crud),\n      async revoke() {\n        await this.update({ revoked: true });\n      },\n      update: async (options) => {\n        await this._interface.updateProjectApiKey(\n          crud.type === \"team\" ? { team_id: crud.team_id } : { user_id: crud.user_id },\n          crud.id,\n          await (0,_api_keys__WEBPACK_IMPORTED_MODULE_11__.apiKeyUpdateOptionsToCrud)(crud.type, options),\n          null,\n          \"server\"\n        );\n        if (crud.type === \"team\") {\n          await this._serverTeamApiKeysCache.refresh([crud.team_id]);\n        } else {\n          await this._serverUserApiKeysCache.refresh([crud.user_id]);\n        }\n      }\n    };\n  }\n  _serverUserFromCrud(crud) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserOAuthConnectionCache.getOrWait([crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\"));\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserOAuthConnectionCache, [crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      ...super._createBaseUser(crud),\n      lastActiveAt: new Date(crud.last_active_at_millis),\n      serverMetadata: crud.server_metadata,\n      async setPrimaryEmail(email, options) {\n        await app._updateServerUser(crud.id, { primaryEmail: email, primaryEmailVerified: options?.verified });\n      },\n      async grantPermission(scope, permissionId) {\n        await app._interface.grantServerTeamUserPermission(scope.id, crud.id, permissionId);\n        for (const recursive of [true, false]) {\n          await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n        }\n      },\n      async revokePermission(scope, permissionId) {\n        await app._interface.revokeServerTeamUserPermission(scope.id, crud.id, permissionId);\n        for (const recursive of [true, false]) {\n          await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n        }\n      },\n      async delete() {\n        const res = await app._interface.deleteServerUser(crud.id);\n        await app._refreshUsers();\n        return res;\n      },\n      async createSession(options) {\n        const tokens = await app._interface.createServerUserSession(crud.id, options.expiresInMillis ?? 1e3 * 60 * 60 * 24 * 365, options.isImpersonation ?? false);\n        return {\n          async getTokens() {\n            return tokens;\n          }\n        };\n      },\n      async getActiveSessions() {\n        const sessions = await app._interface.listServerSessions(crud.id);\n        return sessions.map((session) => app._clientSessionFromCrud(session));\n      },\n      async revokeSession(sessionId) {\n        await app._interface.deleteServerSession(sessionId);\n      },\n      async setDisplayName(displayName) {\n        return await this.update({ displayName });\n      },\n      async setClientMetadata(metadata) {\n        return await this.update({ clientMetadata: metadata });\n      },\n      async setClientReadOnlyMetadata(metadata) {\n        return await this.update({ clientReadOnlyMetadata: metadata });\n      },\n      async setServerMetadata(metadata) {\n        return await this.update({ serverMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        return await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      // THIS_LINE_PLATFORM react-like\n      selectedTeam: crud.selected_team ? app._serverTeamFromCrud(crud.selected_team) : null,\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamsCache.getOrWait([crud.id], \"write-only\"));\n        return teams.map((t) => app._serverTeamFromCrud(t));\n      },\n      useTeams() {\n        const teams = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamsCache, [crud.id], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => teams.map((t) => app._serverTeamFromCrud(t)), [teams]);\n      },\n      createTeam: async (data) => {\n        const team = await app._interface.createServerTeam((0,_teams__WEBPACK_IMPORTED_MODULE_12__.serverTeamCreateOptionsToCrud)({\n          creatorUserId: crud.id,\n          ...data\n        }));\n        await app._serverTeamsCache.refresh([void 0]);\n        await app._updateServerUser(crud.id, { selectedTeamId: team.id });\n        return app._serverTeamFromCrud(team);\n      },\n      leaveTeam: async (team) => {\n        await app._interface.leaveServerTeam({ teamId: team.id, userId: crud.id });\n      },\n      async listPermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamUserPermissionsCache.getOrWait([scope.id, crud.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._serverPermissionFromCrud(crud2));\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserProjectPermissionsCache.getOrWait([crud.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._serverPermissionFromCrud(crud2));\n        }\n      },\n      usePermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamUserPermissionsCache, [scope.id, crud.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.map((crud2) => app._serverPermissionFromCrud(crud2)), [permissions]);\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserProjectPermissionsCache, [crud.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.map((crud2) => app._serverPermissionFromCrud(crud2)), [permissions]);\n        }\n      },\n      async getPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = await this.listPermissions(scope);\n          return permissions.find((p) => p.id === permissionId) ?? null;\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = await this.listPermissions();\n          return permissions.find((p) => p.id === pid) ?? null;\n        }\n      },\n      usePermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = this.usePermissions(scope);\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = this.usePermissions();\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.find((p) => p.id === pid) ?? null, [permissions, pid]);\n        }\n      },\n      async hasPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          return await this.getPermission(scope, permissionId) !== null;\n        } else {\n          const pid = scopeOrPermissionId;\n          return await this.getPermission(pid) !== null;\n        }\n      },\n      async update(update) {\n        await app._updateServerUser(crud.id, update);\n      },\n      async sendVerificationEmail() {\n        return await app._checkFeatureSupport(\"sendVerificationEmail() on ServerUser\", {});\n      },\n      async updatePassword(options) {\n        const result = await app._interface.updatePassword(options);\n        await app._serverUserCache.refresh([crud.id]);\n        return result;\n      },\n      async setPassword(options) {\n        const result = await this.update(options);\n        await app._serverUserCache.refresh([crud.id]);\n        return result;\n      },\n      async getTeamProfile(team) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserTeamProfileCache.getOrWait([team.id, crud.id], \"write-only\"));\n        return app._serverEditableTeamProfileFromCrud(result);\n      },\n      useTeamProfile(team) {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserTeamProfileCache, [team.id, crud.id], \"user.useTeamProfile()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => app._serverEditableTeamProfileFromCrud(result), [result]);\n      },\n      async listContactChannels() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverContactChannelsCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((data) => app._serverContactChannelFromCrud(crud.id, data));\n      },\n      useContactChannels() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverContactChannelsCache, [crud.id], \"user.useContactChannels()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((data) => app._serverContactChannelFromCrud(crud.id, data)), [result]);\n      },\n      createContactChannel: async (data) => {\n        const contactChannel = await app._interface.createServerContactChannel((0,_contact_channels__WEBPACK_IMPORTED_MODULE_10__.serverContactChannelCreateOptionsToCrud)(crud.id, data));\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([crud.id]),\n          app._serverUserCache.refresh([crud.id])\n        ]);\n        return app._serverContactChannelFromCrud(crud.id, contactChannel);\n      },\n      useApiKeys() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserApiKeysCache, [crud.id], \"user.useApiKeys()\");\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async listApiKeys() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserApiKeysCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys__WEBPACK_IMPORTED_MODULE_11__.apiKeyCreationOptionsToCrud)(\"user\", crud.id, options),\n          null,\n          \"server\"\n        );\n        await app._serverUserApiKeysCache.refresh([crud.id]);\n        return app._serverApiKeyFromCrud(result);\n      }\n    };\n  }\n  _serverTeamUserFromCrud(crud) {\n    return {\n      ...this._serverUserFromCrud(crud.user),\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _serverTeamInvitationFromCrud(crud) {\n    return {\n      id: crud.id,\n      recipientEmail: crud.recipient_email,\n      expiresAt: new Date(crud.expires_at_millis),\n      revoke: async () => {\n        await this._interface.revokeServerTeamInvitation(crud.id, crud.team_id);\n      }\n    };\n  }\n  _currentUserFromCrud(crud, session) {\n    const app = this;\n    const currentUser = {\n      ...this._serverUserFromCrud(crud),\n      ...this._createAuth(session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {}\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _serverTeamFromCrud(crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      createdAt: new Date(crud.created_at_millis),\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      serverMetadata: crud.server_metadata,\n      async update(update) {\n        await app._interface.updateServerTeam(crud.id, (0,_teams__WEBPACK_IMPORTED_MODULE_12__.serverTeamUpdateOptionsToCrud)(update));\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async delete() {\n        await app._interface.deleteServerTeam(crud.id);\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async listUsers() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamMemberProfilesCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((u) => app._serverTeamUserFromCrud(u));\n      },\n      useUsers() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamMemberProfilesCache, [crud.id], \"team.useUsers()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((u) => app._serverTeamUserFromCrud(u)), [result]);\n      },\n      async addUser(userId) {\n        await app._interface.addServerUserToTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async removeUser(userId) {\n        await app._interface.removeServerUserFromTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async inviteUser(options) {\n        await app._interface.sendServerTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          callbackUrl: options.callbackUrl ?? (0,_utils_url__WEBPACK_IMPORTED_MODULE_9__.constructRedirectUrl)(app.urls.teamInvitation, \"callbackUrl\")\n        });\n        await app._serverTeamInvitationsCache.refresh([crud.id]);\n      },\n      async listInvitations() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamInvitationsCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((crud2) => app._serverTeamInvitationFromCrud(crud2));\n      },\n      useInvitations() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamInvitationsCache, [crud.id], \"team.useInvitations()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((crud2) => app._serverTeamInvitationFromCrud(crud2)), [result]);\n      },\n      useApiKeys() {\n        const result = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamApiKeysCache, [crud.id], \"team.useApiKeys()\");\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async listApiKeys() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamApiKeysCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys__WEBPACK_IMPORTED_MODULE_11__.apiKeyCreationOptionsToCrud)(\"team\", crud.id, options),\n          null,\n          \"server\"\n        );\n        await app._serverTeamApiKeysCache.refresh([crud.id]);\n        return app._serverApiKeyFromCrud(result);\n      }\n    };\n  }\n  async _getUserApiKey(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverCheckApiKeyCache.getOrWait([\"user\", options.apiKey], \"write-only\"));\n    return crud ? this._serverApiKeyFromCrud(crud) : null;\n  }\n  async _getTeamApiKey(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverCheckApiKeyCache.getOrWait([\"team\", options.apiKey], \"write-only\"));\n    return crud ? this._serverApiKeyFromCrud(crud) : null;\n  }\n  _useUserApiKey(options) {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverCheckApiKeyCache, [\"user\", options.apiKey], \"useUserApiKey()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => crud ? this._serverApiKeyFromCrud(crud) : null, [crud]);\n  }\n  _useTeamApiKey(options) {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverCheckApiKeyCache, [\"team\", options.apiKey], \"useTeamApiKey()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => crud ? this._serverApiKeyFromCrud(crud) : null, [crud]);\n  }\n  async _getUserByApiKey(apiKey) {\n    const apiKeyObject = await this._getUserApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return await this.getServerUserById(apiKeyObject.userId);\n  }\n  _useUserByApiKey(apiKey) {\n    const apiKeyObject = this._useUserApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return this.useUserById(apiKeyObject.userId);\n  }\n  async _getTeamByApiKey(apiKey) {\n    const apiKeyObject = await this._getTeamApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return await this.getTeam(apiKeyObject.teamId);\n  }\n  _useTeamByApiKey(apiKey) {\n    const apiKeyObject = this._useTeamApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return this.useTeam(apiKeyObject.teamId);\n  }\n  async createUser(options) {\n    const crud = await this._interface.createServerUser((0,_users__WEBPACK_IMPORTED_MODULE_8__.serverUserCreateOptionsToCrud)(options));\n    await this._refreshUsers();\n    return this._serverUserFromCrud(crud);\n  }\n  async getUser(options) {\n    if (typeof options === \"string\") {\n      return await this.getServerUserById(options);\n    } else if (typeof options === \"object\" && \"apiKey\" in options) {\n      return await this._getUserByApiKey(options.apiKey);\n    } else {\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const session = await this._getSession(options?.tokenStore);\n      let crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._currentServerUserCache.getOrWait([session], \"write-only\"));\n      if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists\") {\n        crud = null;\n      }\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            await this.redirectToSignIn({ replace: true });\n            break;\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n          }\n          case \"anonymous\": {\n            const tokens = await this._signUpAnonymously();\n            return await this.getUser({ tokenStore: tokens, or: \"anonymous-if-exists\" }) ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"Something went wrong while signing up anonymously\");\n          }\n          case void 0:\n          case \"anonymous-if-exists\":\n          case \"return-null\": {\n            return null;\n          }\n        }\n      }\n      return crud && this._currentUserFromCrud(crud, session);\n    }\n  }\n  async getServerUser() {\n    console.warn(\"stackServerApp.getServerUser is deprecated; use stackServerApp.getUser instead\");\n    return await this.getUser();\n  }\n  async getServerUserById(userId) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserCache.getOrWait([userId], \"write-only\"));\n    return crud && this._serverUserFromCrud(crud);\n  }\n  useUser(options) {\n    if (typeof options === \"string\") {\n      return this.useUserById(options);\n    } else if (typeof options === \"object\" && \"apiKey\" in options) {\n      return this._useUserByApiKey(options.apiKey);\n    } else {\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const session = this._useSession(options?.tokenStore);\n      let crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._currentServerUserCache, [session], \"useUser()\");\n      if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists\") {\n        crud = null;\n      }\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n            (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__.suspend)();\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"suspend should never return\");\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n          }\n          case \"anonymous\": {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(async () => {\n              await this._signUpAnonymously();\n              if (typeof window !== \"undefined\") {\n                window.location.reload();\n              }\n            });\n            (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__.suspend)();\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"suspend should never return\");\n          }\n          case void 0:\n          case \"anonymous-if-exists\":\n          case \"return-null\": {\n          }\n        }\n      }\n      return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n        return crud && this._currentUserFromCrud(crud, session);\n      }, [crud, session, options?.or]);\n    }\n  }\n  useUserById(userId) {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUserCache, [userId], \"useUserById()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud && this._serverUserFromCrud(crud);\n    }, [crud]);\n  }\n  async listUsers(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUsersCache.getOrWait([options?.cursor, options?.limit, options?.orderBy, options?.desc, options?.query], \"write-only\"));\n    const result = crud.items.map((j) => this._serverUserFromCrud(j));\n    result.nextCursor = crud.pagination?.next_cursor ?? null;\n    return result;\n  }\n  useUsers(options) {\n    const crud = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUsersCache, [options?.cursor, options?.limit, options?.orderBy, options?.desc, options?.query], \"useServerUsers()\");\n    const result = crud.items.map((j) => this._serverUserFromCrud(j));\n    result.nextCursor = crud.pagination?.next_cursor ?? null;\n    return result;\n  }\n  _serverPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _serverTeamPermissionDefinitionFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      containedPermissionIds: crud.contained_permission_ids\n    };\n  }\n  _serverProjectPermissionDefinitionFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      containedPermissionIds: crud.contained_permission_ids\n    };\n  }\n  async listTeams() {\n    const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverTeamsCache.getOrWait([void 0], \"write-only\"));\n    return teams.map((t) => this._serverTeamFromCrud(t));\n  }\n  async createTeam(data) {\n    const team = await this._interface.createServerTeam((0,_teams__WEBPACK_IMPORTED_MODULE_12__.serverTeamCreateOptionsToCrud)(data));\n    await this._serverTeamsCache.refresh([void 0]);\n    return this._serverTeamFromCrud(team);\n  }\n  useTeams() {\n    const teams = (0,_common__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverTeamsCache, [void 0], \"useServerTeams()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return teams.map((t) => this._serverTeamFromCrud(t));\n    }, [teams]);\n  }\n  async getTeam(options) {\n    if (typeof options === \"object\" && \"apiKey\" in options) {\n      return await this._getTeamByApiKey(options.apiKey);\n    } else {\n      const teamId = options;\n      const teams = await this.listTeams();\n      return teams.find((t) => t.id === teamId) ?? null;\n    }\n  }\n  useTeam(options) {\n    if (typeof options === \"object\" && \"apiKey\" in options) {\n      return this._useTeamByApiKey(options.apiKey);\n    } else {\n      const teamId = options;\n      const teams = this.useTeams();\n      return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n        return teams.find((t) => t.id === teamId) ?? null;\n      }, [teams, teamId]);\n    }\n  }\n  async _refreshSession(session) {\n    await Promise.all([\n      super._refreshUser(session),\n      this._currentServerUserCache.refresh([session])\n    ]);\n  }\n  async _refreshUsers() {\n    await Promise.all([\n      super._refreshUsers(),\n      this._serverUserCache.refreshWhere(() => true),\n      this._serverUsersCache.refreshWhere(() => true),\n      this._serverContactChannelsCache.refreshWhere(() => true)\n    ]);\n  }\n};\n\n//# sourceMappingURL=server-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW1wbGVtZW50YXRpb25zL3NlcnZlci1hcHAtaW1wbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUM2RTtBQUNjO0FBQ1Y7QUFDYjtBQUNDO0FBQ3JDO0FBQzZCO0FBQzJCO0FBQ2tDO0FBQy9CO0FBQ0E7QUFDekI7QUFDc0c7QUFDL0g7QUFDekMsa0RBQWtELDJFQUE2QjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04scUJBQXFCLDBFQUFvQjtBQUN6QywwQkFBMEIsbURBQVU7QUFDcEMsd0NBQXdDLDREQUFtQjtBQUMzRCw4REFBOEQ7QUFDOUQscUJBQXFCO0FBQ3JCLDhEQUE4RCx1RUFBOEI7QUFDNUYsb0RBQW9ELGtFQUF5QjtBQUM3RSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLG1DQUFtQyw2REFBb0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNkJBQTZCLG9EQUFXO0FBQ3hDLHFEQUFxRCxxQ0FBcUM7QUFDMUYsS0FBSztBQUNMLDRCQUE0QixvREFBVztBQUN2QztBQUNBLGFBQWEsK0VBQU07QUFDbkIsS0FBSztBQUNMLDZCQUE2QixvREFBVztBQUN4QyxxREFBcUQsUUFBUTtBQUM3RCxLQUFLO0FBQ0wsMkNBQTJDLG9EQUFXO0FBQ3RELCtEQUErRCwyQkFBMkI7QUFDMUYsS0FBSztBQUNMLDhDQUE4QyxvREFBVztBQUN6RCxrRUFBa0UsbUJBQW1CO0FBQ3JGLEtBQUs7QUFDTCx1REFBdUQsb0RBQVc7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLFVBQVU7QUFDViwrQkFBK0IsaUVBQVcsMkRBQTJELGlFQUFXO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxvREFBVztBQUN0RDtBQUNBO0FBQ0EsK0JBQStCLCtFQUFNO0FBQ3JDLDJDQUEyQywrRUFBTTtBQUNqRCwrQkFBK0Isc0RBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDBDQUEwQyxvREFBVztBQUNyRDtBQUNBLG9FQUFvRSxRQUFRO0FBQzVFO0FBQ0E7QUFDQSx1Q0FBdUMsb0RBQVc7QUFDbEQ7QUFDQSxpRUFBaUUsUUFBUTtBQUN6RTtBQUNBO0FBQ0EsdUNBQXVDLG9EQUFXO0FBQ2xEO0FBQ0Esa0VBQWtFLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0EsdUNBQXVDLG9EQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9EQUFXO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0RBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvREFBVztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0VBQWtFLHFFQUE2QjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0hBQWdILGdFQUFvQjtBQUNwSSxPQUFPO0FBQ1A7QUFDQSx5RUFBeUUsMkZBQXVDO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0MsT0FBTztBQUNQO0FBQ0E7QUFDQSxtQ0FBbUMsd0JBQXdCLElBQUksdUJBQXVCO0FBQ3RGO0FBQ0EsZ0JBQWdCLHFFQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsK0VBQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxzREFBYTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsOERBQThEO0FBQzdHLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxtQ0FBbUMsYUFBYTtBQUNoRCxPQUFPO0FBQ1A7QUFDQSxtQ0FBbUMsMEJBQTBCO0FBQzdELE9BQU87QUFDUDtBQUNBLG1DQUFtQyxrQ0FBa0M7QUFDckUsT0FBTztBQUNQO0FBQ0EsbUNBQW1DLDBCQUEwQjtBQUM3RCxPQUFPO0FBQ1A7QUFDQSxtQ0FBbUMsa0NBQWtDO0FBQ3JFLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsZUFBZSw4Q0FBTztBQUN0QjtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQSxzQkFBc0IsK0VBQU07QUFDNUI7QUFDQSxPQUFPO0FBQ1A7QUFDQSxzQkFBc0Isc0RBQWE7QUFDbkMsZUFBZSw4Q0FBTztBQUN0QixPQUFPO0FBQ1A7QUFDQSwyREFBMkQsc0VBQTZCO0FBQ3hGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwrQ0FBK0MseUJBQXlCO0FBQ3hFO0FBQ0EsT0FBTztBQUNQO0FBQ0EsK0NBQStDLGtDQUFrQztBQUNqRixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0VBQU07QUFDcEM7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLDhCQUE4QiwrRUFBTTtBQUNwQztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNEQUFhO0FBQzNDLGlCQUFpQiw4Q0FBTztBQUN4QixVQUFVO0FBQ1Y7QUFDQTtBQUNBLDhCQUE4QixzREFBYTtBQUMzQyxpQkFBaUIsOENBQU87QUFDeEI7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4Q0FBTztBQUN4QixVQUFVO0FBQ1Y7QUFDQTtBQUNBLGlCQUFpQiw4Q0FBTztBQUN4QjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLHlGQUF5RjtBQUN6RixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsK0VBQU07QUFDN0I7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQWE7QUFDcEMsZUFBZSw4Q0FBTztBQUN0QixPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsK0VBQU07QUFDN0I7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQWE7QUFDcEMsZUFBZSw4Q0FBTztBQUN0QixPQUFPO0FBQ1A7QUFDQSwrRUFBK0UsMkZBQXVDO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQWE7QUFDcEM7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsK0VBQU07QUFDN0I7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQix1RUFBMkI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHNFQUE2QjtBQUNwRjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsK0VBQU07QUFDN0I7QUFDQSxPQUFPO0FBQ1A7QUFDQSx1QkFBdUIsc0RBQWE7QUFDcEMsZUFBZSw4Q0FBTztBQUN0QixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsZ0VBQW9CO0FBQ2xFLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUDtBQUNBLHVCQUF1QiwrRUFBTTtBQUM3QjtBQUNBLE9BQU87QUFDUDtBQUNBLHVCQUF1QixzREFBYTtBQUNwQyxlQUFlLDhDQUFPO0FBQ3RCLE9BQU87QUFDUDtBQUNBLHVCQUF1QixzREFBYTtBQUNwQztBQUNBLE9BQU87QUFDUDtBQUNBLHVCQUF1QiwrRUFBTTtBQUM3QjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLHVFQUEyQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0VBQU07QUFDdkI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLCtFQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzREFBYTtBQUM5QixXQUFXLDhDQUFPO0FBQ2xCO0FBQ0E7QUFDQSxpQkFBaUIsc0RBQWE7QUFDOUIsV0FBVyw4Q0FBTztBQUNsQjtBQUNBO0FBQ0EscURBQXFELFFBQVE7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFFBQVE7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELHFFQUE2QjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLGlCQUFpQiwrRUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsZUFBZTtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsYUFBYTtBQUM5RjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsK0NBQStDLEtBQUssb0ZBQVE7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrRUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxpQkFBaUIsc0RBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrRkFBaUIseUJBQXlCLGVBQWU7QUFDckUsWUFBWSxrRkFBTztBQUNuQixzQkFBc0IsMkZBQW1CO0FBQ3pDO0FBQ0E7QUFDQSxpRkFBaUYsYUFBYTtBQUM5RjtBQUNBO0FBQ0EsWUFBWSwrRkFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWSxrRkFBTztBQUNuQixzQkFBc0IsMkZBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4Q0FBTztBQUNwQjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0RBQWE7QUFDOUIsV0FBVyw4Q0FBTztBQUNsQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUJBQWlCLCtFQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0RBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLCtFQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxzRUFBNkI7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQWE7QUFDL0IsV0FBVyw4Q0FBTztBQUNsQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxhQUFhLDhDQUFPO0FBQ3BCO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcHBzXFxpbXBsZW1lbnRhdGlvbnNcXHNlcnZlci1hcHAtaW1wbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9hcHBzL2ltcGxlbWVudGF0aW9ucy9zZXJ2ZXItYXBwLWltcGwudHNcbmltcG9ydCB7IEtub3duRXJyb3JzLCBTdGFja1NlcnZlckludGVyZmFjZSB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWRcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIHRocm93RXJyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2Vycm9yc1wiO1xuaW1wb3J0IHsgcnVuQXN5bmNocm9ub3VzbHkgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcHJvbWlzZXNcIjtcbmltcG9ydCB7IHN1c3BlbmQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVhY3RcIjtcbmltcG9ydCB7IFJlc3VsdCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9yZXN1bHRzXCI7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25zdHJ1Y3RSZWRpcmVjdFVybCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy91cmxcIjtcbmltcG9ydCB7IGFwaUtleUNyZWF0aW9uT3B0aW9uc1RvQ3J1ZCwgYXBpS2V5VXBkYXRlT3B0aW9uc1RvQ3J1ZCB9IGZyb20gXCIuLi8uLi9hcGkta2V5c1wiO1xuaW1wb3J0IHsgc2VydmVyQ29udGFjdENoYW5uZWxDcmVhdGVPcHRpb25zVG9DcnVkLCBzZXJ2ZXJDb250YWN0Q2hhbm5lbFVwZGF0ZU9wdGlvbnNUb0NydWQgfSBmcm9tIFwiLi4vLi4vY29udGFjdC1jaGFubmVsc1wiO1xuaW1wb3J0IHsgc2VydmVyVGVhbUNyZWF0ZU9wdGlvbnNUb0NydWQsIHNlcnZlclRlYW1VcGRhdGVPcHRpb25zVG9DcnVkIH0gZnJvbSBcIi4uLy4uL3RlYW1zXCI7XG5pbXBvcnQgeyBzZXJ2ZXJVc2VyQ3JlYXRlT3B0aW9uc1RvQ3J1ZCwgc2VydmVyVXNlclVwZGF0ZU9wdGlvbnNUb0NydWQgfSBmcm9tIFwiLi4vLi4vdXNlcnNcIjtcbmltcG9ydCB7IF9TdGFja0NsaWVudEFwcEltcGxJbmNvbXBsZXRlIH0gZnJvbSBcIi4vY2xpZW50LWFwcC1pbXBsXCI7XG5pbXBvcnQgeyBjbGllbnRWZXJzaW9uLCBjcmVhdGVDYWNoZSwgY3JlYXRlQ2FjaGVCeVNlc3Npb24sIGdldEJhc2VVcmwsIGdldERlZmF1bHRQcm9qZWN0SWQsIGdldERlZmF1bHRQdWJsaXNoYWJsZUNsaWVudEtleSwgZ2V0RGVmYXVsdFNlY3JldFNlcnZlcktleSB9IGZyb20gXCIuL2NvbW1vblwiO1xuaW1wb3J0IHsgdXNlQXN5bmNDYWNoZSB9IGZyb20gXCIuL2NvbW1vblwiO1xudmFyIF9TdGFja1NlcnZlckFwcEltcGxJbmNvbXBsZXRlID0gY2xhc3MgZXh0ZW5kcyBfU3RhY2tDbGllbnRBcHBJbXBsSW5jb21wbGV0ZSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcihcImludGVyZmFjZVwiIGluIG9wdGlvbnMgPyB7XG4gICAgICBpbnRlcmZhY2U6IG9wdGlvbnMuaW50ZXJmYWNlLFxuICAgICAgdG9rZW5TdG9yZTogb3B0aW9ucy50b2tlblN0b3JlLFxuICAgICAgdXJsczogb3B0aW9ucy51cmxzLFxuICAgICAgb2F1dGhTY29wZXNPblNpZ25Jbjogb3B0aW9ucy5vYXV0aFNjb3Blc09uU2lnbkluXG4gICAgfSA6IHtcbiAgICAgIGludGVyZmFjZTogbmV3IFN0YWNrU2VydmVySW50ZXJmYWNlKHtcbiAgICAgICAgZ2V0QmFzZVVybDogKCkgPT4gZ2V0QmFzZVVybChvcHRpb25zLmJhc2VVcmwpLFxuICAgICAgICBwcm9qZWN0SWQ6IG9wdGlvbnMucHJvamVjdElkID8/IGdldERlZmF1bHRQcm9qZWN0SWQoKSxcbiAgICAgICAgZXh0cmFSZXF1ZXN0SGVhZGVyczogb3B0aW9ucy5leHRyYVJlcXVlc3RIZWFkZXJzID8/IHt9LFxuICAgICAgICBjbGllbnRWZXJzaW9uLFxuICAgICAgICBwdWJsaXNoYWJsZUNsaWVudEtleTogb3B0aW9ucy5wdWJsaXNoYWJsZUNsaWVudEtleSA/PyBnZXREZWZhdWx0UHVibGlzaGFibGVDbGllbnRLZXkoKSxcbiAgICAgICAgc2VjcmV0U2VydmVyS2V5OiBvcHRpb25zLnNlY3JldFNlcnZlcktleSA/PyBnZXREZWZhdWx0U2VjcmV0U2VydmVyS2V5KClcbiAgICAgIH0pLFxuICAgICAgYmFzZVVybDogb3B0aW9ucy5iYXNlVXJsLFxuICAgICAgZXh0cmFSZXF1ZXN0SGVhZGVyczogb3B0aW9ucy5leHRyYVJlcXVlc3RIZWFkZXJzLFxuICAgICAgcHJvamVjdElkOiBvcHRpb25zLnByb2plY3RJZCxcbiAgICAgIHB1Ymxpc2hhYmxlQ2xpZW50S2V5OiBvcHRpb25zLnB1Ymxpc2hhYmxlQ2xpZW50S2V5LFxuICAgICAgdG9rZW5TdG9yZTogb3B0aW9ucy50b2tlblN0b3JlLFxuICAgICAgdXJsczogb3B0aW9ucy51cmxzLFxuICAgICAgb2F1dGhTY29wZXNPblNpZ25Jbjogb3B0aW9ucy5vYXV0aFNjb3Blc09uU2lnbkluLFxuICAgICAgcmVkaXJlY3RNZXRob2Q6IG9wdGlvbnMucmVkaXJlY3RNZXRob2RcbiAgICB9KTtcbiAgICAvLyBUT0RPIG92ZXJyaWRlIHRoZSBjbGllbnQgdXNlciBjYWNoZSB0byB1c2UgdGhlIHNlcnZlciB1c2VyIGNhY2hlLCBzbyB3ZSBzYXZlIHNvbWUgcmVxdWVzdHNcbiAgICB0aGlzLl9jdXJyZW50U2VydmVyVXNlckNhY2hlID0gY3JlYXRlQ2FjaGVCeVNlc3Npb24oYXN5bmMgKHNlc3Npb24pID0+IHtcbiAgICAgIGlmIChzZXNzaW9uLmlzS25vd25Ub0JlSW52YWxpZCgpKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2ludGVyZmFjZS5nZXRTZXJ2ZXJVc2VyQnlUb2tlbihzZXNzaW9uKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXJ2ZXJVc2Vyc0NhY2hlID0gY3JlYXRlQ2FjaGUoYXN5bmMgKFtjdXJzb3IsIGxpbWl0LCBvcmRlckJ5LCBkZXNjLCBxdWVyeV0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UubGlzdFNlcnZlclVzZXJzKHsgY3Vyc29yLCBsaW1pdCwgb3JkZXJCeSwgZGVzYywgcXVlcnkgfSk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2VydmVyVXNlckNhY2hlID0gY3JlYXRlQ2FjaGUoYXN5bmMgKFt1c2VySWRdKSA9PiB7XG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5faW50ZXJmYWNlLmdldFNlcnZlclVzZXJCeUlkKHVzZXJJZCk7XG4gICAgICByZXR1cm4gUmVzdWx0Lm9yKHVzZXIsIG51bGwpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NlcnZlclRlYW1zQ2FjaGUgPSBjcmVhdGVDYWNoZShhc3luYyAoW3VzZXJJZF0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UubGlzdFNlcnZlclRlYW1zKHsgdXNlcklkIH0pO1xuICAgIH0pO1xuICAgIHRoaXMuX3NlcnZlclRlYW1Vc2VyUGVybWlzc2lvbnNDYWNoZSA9IGNyZWF0ZUNhY2hlKGFzeW5jIChbdGVhbUlkLCB1c2VySWQsIHJlY3Vyc2l2ZV0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UubGlzdFNlcnZlclRlYW1QZXJtaXNzaW9ucyh7IHRlYW1JZCwgdXNlcklkLCByZWN1cnNpdmUgfSwgbnVsbCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2VydmVyVXNlclByb2plY3RQZXJtaXNzaW9uc0NhY2hlID0gY3JlYXRlQ2FjaGUoYXN5bmMgKFt1c2VySWQsIHJlY3Vyc2l2ZV0pID0+IHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UubGlzdFNlcnZlclByb2plY3RQZXJtaXNzaW9ucyh7IHVzZXJJZCwgcmVjdXJzaXZlIH0sIG51bGwpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NlcnZlclVzZXJPQXV0aENvbm5lY3Rpb25BY2Nlc3NUb2tlbnNDYWNoZSA9IGNyZWF0ZUNhY2hlKFxuICAgICAgYXN5bmMgKFt1c2VySWQsIHByb3ZpZGVySWQsIHNjb3BlXSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuX2ludGVyZmFjZS5jcmVhdGVTZXJ2ZXJQcm92aWRlckFjY2Vzc1Rva2VuKHVzZXJJZCwgcHJvdmlkZXJJZCwgc2NvcGUgfHwgXCJcIik7XG4gICAgICAgICAgcmV0dXJuIHsgYWNjZXNzVG9rZW46IHJlc3VsdC5hY2Nlc3NfdG9rZW4gfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgaWYgKCEoZXJyIGluc3RhbmNlb2YgS25vd25FcnJvcnMuT0F1dGhDb25uZWN0aW9uRG9lc05vdEhhdmVSZXF1aXJlZFNjb3BlIHx8IGVyciBpbnN0YW5jZW9mIEtub3duRXJyb3JzLk9BdXRoQ29ubmVjdGlvbk5vdENvbm5lY3RlZFRvVXNlcikpIHtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgKTtcbiAgICB0aGlzLl9zZXJ2ZXJVc2VyT0F1dGhDb25uZWN0aW9uQ2FjaGUgPSBjcmVhdGVDYWNoZShcbiAgICAgIGFzeW5jIChbdXNlcklkLCBwcm92aWRlcklkLCBzY29wZSwgcmVkaXJlY3RdKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9nZXRVc2VyT0F1dGhDb25uZWN0aW9uQ2FjaGVGbih7XG4gICAgICAgICAgZ2V0VXNlcjogYXN5bmMgKCkgPT4gUmVzdWx0Lm9yVGhyb3coYXdhaXQgdGhpcy5fc2VydmVyVXNlckNhY2hlLmdldE9yV2FpdChbdXNlcklkXSwgXCJ3cml0ZS1vbmx5XCIpKSxcbiAgICAgICAgICBnZXRPcldhaXRPQXV0aFRva2VuOiBhc3luYyAoKSA9PiBSZXN1bHQub3JUaHJvdyhhd2FpdCB0aGlzLl9zZXJ2ZXJVc2VyT0F1dGhDb25uZWN0aW9uQWNjZXNzVG9rZW5zQ2FjaGUuZ2V0T3JXYWl0KFt1c2VySWQsIHByb3ZpZGVySWQsIHNjb3BlIHx8IFwiXCJdLCBcIndyaXRlLW9ubHlcIikpLFxuICAgICAgICAgIHVzZU9BdXRoVG9rZW46ICgpID0+IHVzZUFzeW5jQ2FjaGUodGhpcy5fc2VydmVyVXNlck9BdXRoQ29ubmVjdGlvbkFjY2Vzc1Rva2Vuc0NhY2hlLCBbdXNlcklkLCBwcm92aWRlcklkLCBzY29wZSB8fCBcIlwiXSwgXCJ1c2VyLnVzZUNvbm5lY3RlZEFjY291bnQoKVwiKSxcbiAgICAgICAgICBwcm92aWRlcklkLFxuICAgICAgICAgIHNjb3BlLFxuICAgICAgICAgIHJlZGlyZWN0LFxuICAgICAgICAgIHNlc3Npb246IG51bGxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgKTtcbiAgICB0aGlzLl9zZXJ2ZXJUZWFtTWVtYmVyUHJvZmlsZXNDYWNoZSA9IGNyZWF0ZUNhY2hlKFxuICAgICAgYXN5bmMgKFt0ZWFtSWRdKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UubGlzdFNlcnZlclRlYW1NZW1iZXJQcm9maWxlcyh7IHRlYW1JZCB9KTtcbiAgICAgIH1cbiAgICApO1xuICAgIHRoaXMuX3NlcnZlclRlYW1JbnZpdGF0aW9uc0NhY2hlID0gY3JlYXRlQ2FjaGUoXG4gICAgICBhc3luYyAoW3RlYW1JZF0pID0+IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2ludGVyZmFjZS5saXN0U2VydmVyVGVhbUludml0YXRpb25zKHsgdGVhbUlkIH0pO1xuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5fc2VydmVyVXNlclRlYW1Qcm9maWxlQ2FjaGUgPSBjcmVhdGVDYWNoZShcbiAgICAgIGFzeW5jIChbdGVhbUlkLCB1c2VySWRdKSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9pbnRlcmZhY2UuZ2V0U2VydmVyVGVhbU1lbWJlclByb2ZpbGUoeyB0ZWFtSWQsIHVzZXJJZCB9KTtcbiAgICAgIH1cbiAgICApO1xuICAgIHRoaXMuX3NlcnZlckNvbnRhY3RDaGFubmVsc0NhY2hlID0gY3JlYXRlQ2FjaGUoXG4gICAgICBhc3luYyAoW3VzZXJJZF0pID0+IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2ludGVyZmFjZS5saXN0U2VydmVyQ29udGFjdENoYW5uZWxzKHVzZXJJZCk7XG4gICAgICB9XG4gICAgKTtcbiAgICB0aGlzLl9zZXJ2ZXJVc2VyQXBpS2V5c0NhY2hlID0gY3JlYXRlQ2FjaGUoXG4gICAgICBhc3luYyAoW3VzZXJJZF0pID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5faW50ZXJmYWNlLmxpc3RQcm9qZWN0QXBpS2V5cyh7XG4gICAgICAgICAgdXNlcl9pZDogdXNlcklkXG4gICAgICAgIH0sIG51bGwsIFwic2VydmVyXCIpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5fc2VydmVyVGVhbUFwaUtleXNDYWNoZSA9IGNyZWF0ZUNhY2hlKFxuICAgICAgYXN5bmMgKFt0ZWFtSWRdKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuX2ludGVyZmFjZS5saXN0UHJvamVjdEFwaUtleXMoe1xuICAgICAgICAgIHRlYW1faWQ6IHRlYW1JZFxuICAgICAgICB9LCBudWxsLCBcInNlcnZlclwiKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICApO1xuICAgIHRoaXMuX3NlcnZlckNoZWNrQXBpS2V5Q2FjaGUgPSBjcmVhdGVDYWNoZShhc3luYyAoW3R5cGUsIGFwaUtleV0pID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuX2ludGVyZmFjZS5jaGVja1Byb2plY3RBcGlLZXkoXG4gICAgICAgIHR5cGUsXG4gICAgICAgIGFwaUtleSxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgXCJzZXJ2ZXJcIlxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG4gIH1cbiAgYXN5bmMgX3VwZGF0ZVNlcnZlclVzZXIodXNlcklkLCB1cGRhdGUpIHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLl9pbnRlcmZhY2UudXBkYXRlU2VydmVyVXNlcih1c2VySWQsIHNlcnZlclVzZXJVcGRhdGVPcHRpb25zVG9DcnVkKHVwZGF0ZSkpO1xuICAgIGF3YWl0IHRoaXMuX3JlZnJlc2hVc2VycygpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgX3NlcnZlckVkaXRhYmxlVGVhbVByb2ZpbGVGcm9tQ3J1ZChjcnVkKSB7XG4gICAgY29uc3QgYXBwID0gdGhpcztcbiAgICByZXR1cm4ge1xuICAgICAgZGlzcGxheU5hbWU6IGNydWQuZGlzcGxheV9uYW1lLFxuICAgICAgcHJvZmlsZUltYWdlVXJsOiBjcnVkLnByb2ZpbGVfaW1hZ2VfdXJsLFxuICAgICAgYXN5bmMgdXBkYXRlKHVwZGF0ZSkge1xuICAgICAgICBhd2FpdCBhcHAuX2ludGVyZmFjZS51cGRhdGVTZXJ2ZXJUZWFtTWVtYmVyUHJvZmlsZSh7XG4gICAgICAgICAgdGVhbUlkOiBjcnVkLnRlYW1faWQsXG4gICAgICAgICAgdXNlcklkOiBjcnVkLnVzZXJfaWQsXG4gICAgICAgICAgcHJvZmlsZToge1xuICAgICAgICAgICAgZGlzcGxheV9uYW1lOiB1cGRhdGUuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICBwcm9maWxlX2ltYWdlX3VybDogdXBkYXRlLnByb2ZpbGVJbWFnZVVybFxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IGFwcC5fc2VydmVyVXNlclRlYW1Qcm9maWxlQ2FjaGUucmVmcmVzaChbY3J1ZC50ZWFtX2lkLCBjcnVkLnVzZXJfaWRdKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIF9zZXJ2ZXJDb250YWN0Q2hhbm5lbEZyb21DcnVkKHVzZXJJZCwgY3J1ZCkge1xuICAgIGNvbnN0IGFwcCA9IHRoaXM7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBjcnVkLmlkLFxuICAgICAgdmFsdWU6IGNydWQudmFsdWUsXG4gICAgICB0eXBlOiBjcnVkLnR5cGUsXG4gICAgICBpc1ZlcmlmaWVkOiBjcnVkLmlzX3ZlcmlmaWVkLFxuICAgICAgaXNQcmltYXJ5OiBjcnVkLmlzX3ByaW1hcnksXG4gICAgICB1c2VkRm9yQXV0aDogY3J1ZC51c2VkX2Zvcl9hdXRoLFxuICAgICAgYXN5bmMgc2VuZFZlcmlmaWNhdGlvbkVtYWlsKG9wdGlvbnMpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2Uuc2VuZFNlcnZlckNvbnRhY3RDaGFubmVsVmVyaWZpY2F0aW9uRW1haWwodXNlcklkLCBjcnVkLmlkLCBvcHRpb25zPy5jYWxsYmFja1VybCA/PyBjb25zdHJ1Y3RSZWRpcmVjdFVybChhcHAudXJscy5lbWFpbFZlcmlmaWNhdGlvbiwgXCJjYWxsYmFja1VybFwiKSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UudXBkYXRlU2VydmVyQ29udGFjdENoYW5uZWwodXNlcklkLCBjcnVkLmlkLCBzZXJ2ZXJDb250YWN0Q2hhbm5lbFVwZGF0ZU9wdGlvbnNUb0NydWQoZGF0YSkpO1xuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgYXBwLl9zZXJ2ZXJDb250YWN0Q2hhbm5lbHNDYWNoZS5yZWZyZXNoKFt1c2VySWRdKSxcbiAgICAgICAgICBhcHAuX3NlcnZlclVzZXJDYWNoZS5yZWZyZXNoKFt1c2VySWRdKVxuICAgICAgICBdKTtcbiAgICAgIH0sXG4gICAgICBhc3luYyBkZWxldGUoKSB7XG4gICAgICAgIGF3YWl0IGFwcC5faW50ZXJmYWNlLmRlbGV0ZVNlcnZlckNvbnRhY3RDaGFubmVsKHVzZXJJZCwgY3J1ZC5pZCk7XG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICBhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsc0NhY2hlLnJlZnJlc2goW3VzZXJJZF0pLFxuICAgICAgICAgIGFwcC5fc2VydmVyVXNlckNhY2hlLnJlZnJlc2goW3VzZXJJZF0pXG4gICAgICAgIF0pO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgX3NlcnZlckFwaUtleUZyb21DcnVkKGNydWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4udGhpcy5fYmFzZUFwaUtleUZyb21DcnVkKGNydWQpLFxuICAgICAgYXN5bmMgcmV2b2tlKCkge1xuICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZSh7IHJldm9rZWQ6IHRydWUgfSk7XG4gICAgICB9LFxuICAgICAgdXBkYXRlOiBhc3luYyAob3B0aW9ucykgPT4ge1xuICAgICAgICBhd2FpdCB0aGlzLl9pbnRlcmZhY2UudXBkYXRlUHJvamVjdEFwaUtleShcbiAgICAgICAgICBjcnVkLnR5cGUgPT09IFwidGVhbVwiID8geyB0ZWFtX2lkOiBjcnVkLnRlYW1faWQgfSA6IHsgdXNlcl9pZDogY3J1ZC51c2VyX2lkIH0sXG4gICAgICAgICAgY3J1ZC5pZCxcbiAgICAgICAgICBhd2FpdCBhcGlLZXlVcGRhdGVPcHRpb25zVG9DcnVkKGNydWQudHlwZSwgb3B0aW9ucyksXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICBcInNlcnZlclwiXG4gICAgICAgICk7XG4gICAgICAgIGlmIChjcnVkLnR5cGUgPT09IFwidGVhbVwiKSB7XG4gICAgICAgICAgYXdhaXQgdGhpcy5fc2VydmVyVGVhbUFwaUtleXNDYWNoZS5yZWZyZXNoKFtjcnVkLnRlYW1faWRdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhd2FpdCB0aGlzLl9zZXJ2ZXJVc2VyQXBpS2V5c0NhY2hlLnJlZnJlc2goW2NydWQudXNlcl9pZF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBfc2VydmVyVXNlckZyb21DcnVkKGNydWQpIHtcbiAgICBjb25zdCBhcHAgPSB0aGlzO1xuICAgIGFzeW5jIGZ1bmN0aW9uIGdldENvbm5lY3RlZEFjY291bnQoaWQsIG9wdGlvbnMpIHtcbiAgICAgIGNvbnN0IHNjb3BlU3RyaW5nID0gb3B0aW9ucz8uc2NvcGVzPy5qb2luKFwiIFwiKTtcbiAgICAgIHJldHVybiBSZXN1bHQub3JUaHJvdyhhd2FpdCBhcHAuX3NlcnZlclVzZXJPQXV0aENvbm5lY3Rpb25DYWNoZS5nZXRPcldhaXQoW2NydWQuaWQsIGlkLCBzY29wZVN0cmluZyB8fCBcIlwiLCBvcHRpb25zPy5vciA9PT0gXCJyZWRpcmVjdFwiXSwgXCJ3cml0ZS1vbmx5XCIpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXNlQ29ubmVjdGVkQWNjb3VudChpZCwgb3B0aW9ucykge1xuICAgICAgY29uc3Qgc2NvcGVTdHJpbmcgPSBvcHRpb25zPy5zY29wZXM/LmpvaW4oXCIgXCIpO1xuICAgICAgcmV0dXJuIHVzZUFzeW5jQ2FjaGUoYXBwLl9zZXJ2ZXJVc2VyT0F1dGhDb25uZWN0aW9uQ2FjaGUsIFtjcnVkLmlkLCBpZCwgc2NvcGVTdHJpbmcgfHwgXCJcIiwgb3B0aW9ucz8ub3IgPT09IFwicmVkaXJlY3RcIl0sIFwidXNlci51c2VDb25uZWN0ZWRBY2NvdW50KClcIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAuLi5zdXBlci5fY3JlYXRlQmFzZVVzZXIoY3J1ZCksXG4gICAgICBsYXN0QWN0aXZlQXQ6IG5ldyBEYXRlKGNydWQubGFzdF9hY3RpdmVfYXRfbWlsbGlzKSxcbiAgICAgIHNlcnZlck1ldGFkYXRhOiBjcnVkLnNlcnZlcl9tZXRhZGF0YSxcbiAgICAgIGFzeW5jIHNldFByaW1hcnlFbWFpbChlbWFpbCwgb3B0aW9ucykge1xuICAgICAgICBhd2FpdCBhcHAuX3VwZGF0ZVNlcnZlclVzZXIoY3J1ZC5pZCwgeyBwcmltYXJ5RW1haWw6IGVtYWlsLCBwcmltYXJ5RW1haWxWZXJpZmllZDogb3B0aW9ucz8udmVyaWZpZWQgfSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgZ3JhbnRQZXJtaXNzaW9uKHNjb3BlLCBwZXJtaXNzaW9uSWQpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UuZ3JhbnRTZXJ2ZXJUZWFtVXNlclBlcm1pc3Npb24oc2NvcGUuaWQsIGNydWQuaWQsIHBlcm1pc3Npb25JZCk7XG4gICAgICAgIGZvciAoY29uc3QgcmVjdXJzaXZlIG9mIFt0cnVlLCBmYWxzZV0pIHtcbiAgICAgICAgICBhd2FpdCBhcHAuX3NlcnZlclRlYW1Vc2VyUGVybWlzc2lvbnNDYWNoZS5yZWZyZXNoKFtzY29wZS5pZCwgY3J1ZC5pZCwgcmVjdXJzaXZlXSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhc3luYyByZXZva2VQZXJtaXNzaW9uKHNjb3BlLCBwZXJtaXNzaW9uSWQpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UucmV2b2tlU2VydmVyVGVhbVVzZXJQZXJtaXNzaW9uKHNjb3BlLmlkLCBjcnVkLmlkLCBwZXJtaXNzaW9uSWQpO1xuICAgICAgICBmb3IgKGNvbnN0IHJlY3Vyc2l2ZSBvZiBbdHJ1ZSwgZmFsc2VdKSB7XG4gICAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtVXNlclBlcm1pc3Npb25zQ2FjaGUucmVmcmVzaChbc2NvcGUuaWQsIGNydWQuaWQsIHJlY3Vyc2l2ZV0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYXN5bmMgZGVsZXRlKCkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBhcHAuX2ludGVyZmFjZS5kZWxldGVTZXJ2ZXJVc2VyKGNydWQuaWQpO1xuICAgICAgICBhd2FpdCBhcHAuX3JlZnJlc2hVc2VycygpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGNyZWF0ZVNlc3Npb24ob3B0aW9ucykge1xuICAgICAgICBjb25zdCB0b2tlbnMgPSBhd2FpdCBhcHAuX2ludGVyZmFjZS5jcmVhdGVTZXJ2ZXJVc2VyU2Vzc2lvbihjcnVkLmlkLCBvcHRpb25zLmV4cGlyZXNJbk1pbGxpcyA/PyAxZTMgKiA2MCAqIDYwICogMjQgKiAzNjUsIG9wdGlvbnMuaXNJbXBlcnNvbmF0aW9uID8/IGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBhc3luYyBnZXRUb2tlbnMoKSB7XG4gICAgICAgICAgICByZXR1cm4gdG9rZW5zO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgICBhc3luYyBnZXRBY3RpdmVTZXNzaW9ucygpIHtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBhd2FpdCBhcHAuX2ludGVyZmFjZS5saXN0U2VydmVyU2Vzc2lvbnMoY3J1ZC5pZCk7XG4gICAgICAgIHJldHVybiBzZXNzaW9ucy5tYXAoKHNlc3Npb24pID0+IGFwcC5fY2xpZW50U2Vzc2lvbkZyb21DcnVkKHNlc3Npb24pKTtcbiAgICAgIH0sXG4gICAgICBhc3luYyByZXZva2VTZXNzaW9uKHNlc3Npb25JZCkge1xuICAgICAgICBhd2FpdCBhcHAuX2ludGVyZmFjZS5kZWxldGVTZXJ2ZXJTZXNzaW9uKHNlc3Npb25JZCk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgc2V0RGlzcGxheU5hbWUoZGlzcGxheU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXBkYXRlKHsgZGlzcGxheU5hbWUgfSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgc2V0Q2xpZW50TWV0YWRhdGEobWV0YWRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXBkYXRlKHsgY2xpZW50TWV0YWRhdGE6IG1ldGFkYXRhIH0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIHNldENsaWVudFJlYWRPbmx5TWV0YWRhdGEobWV0YWRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXBkYXRlKHsgY2xpZW50UmVhZE9ubHlNZXRhZGF0YTogbWV0YWRhdGEgfSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgc2V0U2VydmVyTWV0YWRhdGEobWV0YWRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudXBkYXRlKHsgc2VydmVyTWV0YWRhdGE6IG1ldGFkYXRhIH0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIHNldFNlbGVjdGVkVGVhbSh0ZWFtKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnVwZGF0ZSh7IHNlbGVjdGVkVGVhbUlkOiB0ZWFtPy5pZCA/PyBudWxsIH0pO1xuICAgICAgfSxcbiAgICAgIGdldENvbm5lY3RlZEFjY291bnQsXG4gICAgICB1c2VDb25uZWN0ZWRBY2NvdW50LFxuICAgICAgLy8gVEhJU19MSU5FX1BMQVRGT1JNIHJlYWN0LWxpa2VcbiAgICAgIHNlbGVjdGVkVGVhbTogY3J1ZC5zZWxlY3RlZF90ZWFtID8gYXBwLl9zZXJ2ZXJUZWFtRnJvbUNydWQoY3J1ZC5zZWxlY3RlZF90ZWFtKSA6IG51bGwsXG4gICAgICBhc3luYyBnZXRUZWFtKHRlYW1JZCkge1xuICAgICAgICBjb25zdCB0ZWFtcyA9IGF3YWl0IHRoaXMubGlzdFRlYW1zKCk7XG4gICAgICAgIHJldHVybiB0ZWFtcy5maW5kKCh0KSA9PiB0LmlkID09PSB0ZWFtSWQpID8/IG51bGw7XG4gICAgICB9LFxuICAgICAgdXNlVGVhbSh0ZWFtSWQpIHtcbiAgICAgICAgY29uc3QgdGVhbXMgPSB0aGlzLnVzZVRlYW1zKCk7XG4gICAgICAgIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGVhbXMuZmluZCgodCkgPT4gdC5pZCA9PT0gdGVhbUlkKSA/PyBudWxsO1xuICAgICAgICB9LCBbdGVhbXMsIHRlYW1JZF0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGxpc3RUZWFtcygpIHtcbiAgICAgICAgY29uc3QgdGVhbXMgPSBSZXN1bHQub3JUaHJvdyhhd2FpdCBhcHAuX3NlcnZlclRlYW1zQ2FjaGUuZ2V0T3JXYWl0KFtjcnVkLmlkXSwgXCJ3cml0ZS1vbmx5XCIpKTtcbiAgICAgICAgcmV0dXJuIHRlYW1zLm1hcCgodCkgPT4gYXBwLl9zZXJ2ZXJUZWFtRnJvbUNydWQodCkpO1xuICAgICAgfSxcbiAgICAgIHVzZVRlYW1zKCkge1xuICAgICAgICBjb25zdCB0ZWFtcyA9IHVzZUFzeW5jQ2FjaGUoYXBwLl9zZXJ2ZXJUZWFtc0NhY2hlLCBbY3J1ZC5pZF0sIFwidXNlci51c2VUZWFtcygpXCIpO1xuICAgICAgICByZXR1cm4gdXNlTWVtbygoKSA9PiB0ZWFtcy5tYXAoKHQpID0+IGFwcC5fc2VydmVyVGVhbUZyb21DcnVkKHQpKSwgW3RlYW1zXSk7XG4gICAgICB9LFxuICAgICAgY3JlYXRlVGVhbTogYXN5bmMgKGRhdGEpID0+IHtcbiAgICAgICAgY29uc3QgdGVhbSA9IGF3YWl0IGFwcC5faW50ZXJmYWNlLmNyZWF0ZVNlcnZlclRlYW0oc2VydmVyVGVhbUNyZWF0ZU9wdGlvbnNUb0NydWQoe1xuICAgICAgICAgIGNyZWF0b3JVc2VySWQ6IGNydWQuaWQsXG4gICAgICAgICAgLi4uZGF0YVxuICAgICAgICB9KSk7XG4gICAgICAgIGF3YWl0IGFwcC5fc2VydmVyVGVhbXNDYWNoZS5yZWZyZXNoKFt2b2lkIDBdKTtcbiAgICAgICAgYXdhaXQgYXBwLl91cGRhdGVTZXJ2ZXJVc2VyKGNydWQuaWQsIHsgc2VsZWN0ZWRUZWFtSWQ6IHRlYW0uaWQgfSk7XG4gICAgICAgIHJldHVybiBhcHAuX3NlcnZlclRlYW1Gcm9tQ3J1ZCh0ZWFtKTtcbiAgICAgIH0sXG4gICAgICBsZWF2ZVRlYW06IGFzeW5jICh0ZWFtKSA9PiB7XG4gICAgICAgIGF3YWl0IGFwcC5faW50ZXJmYWNlLmxlYXZlU2VydmVyVGVhbSh7IHRlYW1JZDogdGVhbS5pZCwgdXNlcklkOiBjcnVkLmlkIH0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGxpc3RQZXJtaXNzaW9ucyhzY29wZU9yT3B0aW9ucywgb3B0aW9ucykge1xuICAgICAgICBpZiAoc2NvcGVPck9wdGlvbnMgJiYgXCJpZFwiIGluIHNjb3BlT3JPcHRpb25zKSB7XG4gICAgICAgICAgY29uc3Qgc2NvcGUgPSBzY29wZU9yT3B0aW9ucztcbiAgICAgICAgICBjb25zdCByZWN1cnNpdmUgPSBvcHRpb25zPy5yZWN1cnNpdmUgPz8gdHJ1ZTtcbiAgICAgICAgICBjb25zdCBwZXJtaXNzaW9ucyA9IFJlc3VsdC5vclRocm93KGF3YWl0IGFwcC5fc2VydmVyVGVhbVVzZXJQZXJtaXNzaW9uc0NhY2hlLmdldE9yV2FpdChbc2NvcGUuaWQsIGNydWQuaWQsIHJlY3Vyc2l2ZV0sIFwid3JpdGUtb25seVwiKSk7XG4gICAgICAgICAgcmV0dXJuIHBlcm1pc3Npb25zLm1hcCgoY3J1ZDIpID0+IGFwcC5fc2VydmVyUGVybWlzc2lvbkZyb21DcnVkKGNydWQyKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc3Qgb3B0cyA9IHNjb3BlT3JPcHRpb25zO1xuICAgICAgICAgIGNvbnN0IHJlY3Vyc2l2ZSA9IG9wdHM/LnJlY3Vyc2l2ZSA/PyB0cnVlO1xuICAgICAgICAgIGNvbnN0IHBlcm1pc3Npb25zID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgYXBwLl9zZXJ2ZXJVc2VyUHJvamVjdFBlcm1pc3Npb25zQ2FjaGUuZ2V0T3JXYWl0KFtjcnVkLmlkLCByZWN1cnNpdmVdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgICAgIHJldHVybiBwZXJtaXNzaW9ucy5tYXAoKGNydWQyKSA9PiBhcHAuX3NlcnZlclBlcm1pc3Npb25Gcm9tQ3J1ZChjcnVkMikpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdXNlUGVybWlzc2lvbnMoc2NvcGVPck9wdGlvbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHNjb3BlT3JPcHRpb25zICYmIFwiaWRcIiBpbiBzY29wZU9yT3B0aW9ucykge1xuICAgICAgICAgIGNvbnN0IHNjb3BlID0gc2NvcGVPck9wdGlvbnM7XG4gICAgICAgICAgY29uc3QgcmVjdXJzaXZlID0gb3B0aW9ucz8ucmVjdXJzaXZlID8/IHRydWU7XG4gICAgICAgICAgY29uc3QgcGVybWlzc2lvbnMgPSB1c2VBc3luY0NhY2hlKGFwcC5fc2VydmVyVGVhbVVzZXJQZXJtaXNzaW9uc0NhY2hlLCBbc2NvcGUuaWQsIGNydWQuaWQsIHJlY3Vyc2l2ZV0sIFwidXNlci51c2VQZXJtaXNzaW9ucygpXCIpO1xuICAgICAgICAgIHJldHVybiB1c2VNZW1vKCgpID0+IHBlcm1pc3Npb25zLm1hcCgoY3J1ZDIpID0+IGFwcC5fc2VydmVyUGVybWlzc2lvbkZyb21DcnVkKGNydWQyKSksIFtwZXJtaXNzaW9uc10pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IG9wdHMgPSBzY29wZU9yT3B0aW9ucztcbiAgICAgICAgICBjb25zdCByZWN1cnNpdmUgPSBvcHRzPy5yZWN1cnNpdmUgPz8gdHJ1ZTtcbiAgICAgICAgICBjb25zdCBwZXJtaXNzaW9ucyA9IHVzZUFzeW5jQ2FjaGUoYXBwLl9zZXJ2ZXJVc2VyUHJvamVjdFBlcm1pc3Npb25zQ2FjaGUsIFtjcnVkLmlkLCByZWN1cnNpdmVdLCBcInVzZXIudXNlUGVybWlzc2lvbnMoKVwiKTtcbiAgICAgICAgICByZXR1cm4gdXNlTWVtbygoKSA9PiBwZXJtaXNzaW9ucy5tYXAoKGNydWQyKSA9PiBhcHAuX3NlcnZlclBlcm1pc3Npb25Gcm9tQ3J1ZChjcnVkMikpLCBbcGVybWlzc2lvbnNdKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGdldFBlcm1pc3Npb24oc2NvcGVPclBlcm1pc3Npb25JZCwgcGVybWlzc2lvbklkKSB7XG4gICAgICAgIGlmIChzY29wZU9yUGVybWlzc2lvbklkICYmIHR5cGVvZiBzY29wZU9yUGVybWlzc2lvbklkICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgY29uc3Qgc2NvcGUgPSBzY29wZU9yUGVybWlzc2lvbklkO1xuICAgICAgICAgIGNvbnN0IHBlcm1pc3Npb25zID0gYXdhaXQgdGhpcy5saXN0UGVybWlzc2lvbnMoc2NvcGUpO1xuICAgICAgICAgIHJldHVybiBwZXJtaXNzaW9ucy5maW5kKChwKSA9PiBwLmlkID09PSBwZXJtaXNzaW9uSWQpID8/IG51bGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc3QgcGlkID0gc2NvcGVPclBlcm1pc3Npb25JZDtcbiAgICAgICAgICBjb25zdCBwZXJtaXNzaW9ucyA9IGF3YWl0IHRoaXMubGlzdFBlcm1pc3Npb25zKCk7XG4gICAgICAgICAgcmV0dXJuIHBlcm1pc3Npb25zLmZpbmQoKHApID0+IHAuaWQgPT09IHBpZCkgPz8gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHVzZVBlcm1pc3Npb24oc2NvcGVPclBlcm1pc3Npb25JZCwgcGVybWlzc2lvbklkKSB7XG4gICAgICAgIGlmIChzY29wZU9yUGVybWlzc2lvbklkICYmIHR5cGVvZiBzY29wZU9yUGVybWlzc2lvbklkICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgY29uc3Qgc2NvcGUgPSBzY29wZU9yUGVybWlzc2lvbklkO1xuICAgICAgICAgIGNvbnN0IHBlcm1pc3Npb25zID0gdGhpcy51c2VQZXJtaXNzaW9ucyhzY29wZSk7XG4gICAgICAgICAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcGVybWlzc2lvbnMuZmluZCgocCkgPT4gcC5pZCA9PT0gcGVybWlzc2lvbklkKSA/PyBudWxsLCBbcGVybWlzc2lvbnMsIHBlcm1pc3Npb25JZF0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IHBpZCA9IHNjb3BlT3JQZXJtaXNzaW9uSWQ7XG4gICAgICAgICAgY29uc3QgcGVybWlzc2lvbnMgPSB0aGlzLnVzZVBlcm1pc3Npb25zKCk7XG4gICAgICAgICAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcGVybWlzc2lvbnMuZmluZCgocCkgPT4gcC5pZCA9PT0gcGlkKSA/PyBudWxsLCBbcGVybWlzc2lvbnMsIHBpZF0pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYXN5bmMgaGFzUGVybWlzc2lvbihzY29wZU9yUGVybWlzc2lvbklkLCBwZXJtaXNzaW9uSWQpIHtcbiAgICAgICAgaWYgKHNjb3BlT3JQZXJtaXNzaW9uSWQgJiYgdHlwZW9mIHNjb3BlT3JQZXJtaXNzaW9uSWQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICBjb25zdCBzY29wZSA9IHNjb3BlT3JQZXJtaXNzaW9uSWQ7XG4gICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0UGVybWlzc2lvbihzY29wZSwgcGVybWlzc2lvbklkKSAhPT0gbnVsbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBwaWQgPSBzY29wZU9yUGVybWlzc2lvbklkO1xuICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmdldFBlcm1pc3Npb24ocGlkKSAhPT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIHVwZGF0ZSh1cGRhdGUpIHtcbiAgICAgICAgYXdhaXQgYXBwLl91cGRhdGVTZXJ2ZXJVc2VyKGNydWQuaWQsIHVwZGF0ZSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgc2VuZFZlcmlmaWNhdGlvbkVtYWlsKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgYXBwLl9jaGVja0ZlYXR1cmVTdXBwb3J0KFwic2VuZFZlcmlmaWNhdGlvbkVtYWlsKCkgb24gU2VydmVyVXNlclwiLCB7fSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgdXBkYXRlUGFzc3dvcmQob3B0aW9ucykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhcHAuX2ludGVyZmFjZS51cGRhdGVQYXNzd29yZChvcHRpb25zKTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJVc2VyQ2FjaGUucmVmcmVzaChbY3J1ZC5pZF0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSxcbiAgICAgIGFzeW5jIHNldFBhc3N3b3JkKG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy51cGRhdGUob3B0aW9ucyk7XG4gICAgICAgIGF3YWl0IGFwcC5fc2VydmVyVXNlckNhY2hlLnJlZnJlc2goW2NydWQuaWRdKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0sXG4gICAgICBhc3luYyBnZXRUZWFtUHJvZmlsZSh0ZWFtKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFJlc3VsdC5vclRocm93KGF3YWl0IGFwcC5fc2VydmVyVXNlclRlYW1Qcm9maWxlQ2FjaGUuZ2V0T3JXYWl0KFt0ZWFtLmlkLCBjcnVkLmlkXSwgXCJ3cml0ZS1vbmx5XCIpKTtcbiAgICAgICAgcmV0dXJuIGFwcC5fc2VydmVyRWRpdGFibGVUZWFtUHJvZmlsZUZyb21DcnVkKHJlc3VsdCk7XG4gICAgICB9LFxuICAgICAgdXNlVGVhbVByb2ZpbGUodGVhbSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB1c2VBc3luY0NhY2hlKGFwcC5fc2VydmVyVXNlclRlYW1Qcm9maWxlQ2FjaGUsIFt0ZWFtLmlkLCBjcnVkLmlkXSwgXCJ1c2VyLnVzZVRlYW1Qcm9maWxlKClcIik7XG4gICAgICAgIHJldHVybiB1c2VNZW1vKCgpID0+IGFwcC5fc2VydmVyRWRpdGFibGVUZWFtUHJvZmlsZUZyb21DcnVkKHJlc3VsdCksIFtyZXN1bHRdKTtcbiAgICAgIH0sXG4gICAgICBhc3luYyBsaXN0Q29udGFjdENoYW5uZWxzKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBSZXN1bHQub3JUaHJvdyhhd2FpdCBhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsc0NhY2hlLmdldE9yV2FpdChbY3J1ZC5pZF0sIFwid3JpdGUtb25seVwiKSk7XG4gICAgICAgIHJldHVybiByZXN1bHQubWFwKChkYXRhKSA9PiBhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsRnJvbUNydWQoY3J1ZC5pZCwgZGF0YSkpO1xuICAgICAgfSxcbiAgICAgIHVzZUNvbnRhY3RDaGFubmVscygpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdXNlQXN5bmNDYWNoZShhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsc0NhY2hlLCBbY3J1ZC5pZF0sIFwidXNlci51c2VDb250YWN0Q2hhbm5lbHMoKVwiKTtcbiAgICAgICAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcmVzdWx0Lm1hcCgoZGF0YSkgPT4gYXBwLl9zZXJ2ZXJDb250YWN0Q2hhbm5lbEZyb21DcnVkKGNydWQuaWQsIGRhdGEpKSwgW3Jlc3VsdF0pO1xuICAgICAgfSxcbiAgICAgIGNyZWF0ZUNvbnRhY3RDaGFubmVsOiBhc3luYyAoZGF0YSkgPT4ge1xuICAgICAgICBjb25zdCBjb250YWN0Q2hhbm5lbCA9IGF3YWl0IGFwcC5faW50ZXJmYWNlLmNyZWF0ZVNlcnZlckNvbnRhY3RDaGFubmVsKHNlcnZlckNvbnRhY3RDaGFubmVsQ3JlYXRlT3B0aW9uc1RvQ3J1ZChjcnVkLmlkLCBkYXRhKSk7XG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICBhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsc0NhY2hlLnJlZnJlc2goW2NydWQuaWRdKSxcbiAgICAgICAgICBhcHAuX3NlcnZlclVzZXJDYWNoZS5yZWZyZXNoKFtjcnVkLmlkXSlcbiAgICAgICAgXSk7XG4gICAgICAgIHJldHVybiBhcHAuX3NlcnZlckNvbnRhY3RDaGFubmVsRnJvbUNydWQoY3J1ZC5pZCwgY29udGFjdENoYW5uZWwpO1xuICAgICAgfSxcbiAgICAgIHVzZUFwaUtleXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHVzZUFzeW5jQ2FjaGUoYXBwLl9zZXJ2ZXJVc2VyQXBpS2V5c0NhY2hlLCBbY3J1ZC5pZF0sIFwidXNlci51c2VBcGlLZXlzKClcIik7XG4gICAgICAgIHJldHVybiByZXN1bHQubWFwKChhcGlLZXkpID0+IGFwcC5fc2VydmVyQXBpS2V5RnJvbUNydWQoYXBpS2V5KSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgbGlzdEFwaUtleXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFJlc3VsdC5vclRocm93KGF3YWl0IGFwcC5fc2VydmVyVXNlckFwaUtleXNDYWNoZS5nZXRPcldhaXQoW2NydWQuaWRdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lm1hcCgoYXBpS2V5KSA9PiBhcHAuX3NlcnZlckFwaUtleUZyb21DcnVkKGFwaUtleSkpO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGNyZWF0ZUFwaUtleShvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFwcC5faW50ZXJmYWNlLmNyZWF0ZVByb2plY3RBcGlLZXkoXG4gICAgICAgICAgYXdhaXQgYXBpS2V5Q3JlYXRpb25PcHRpb25zVG9DcnVkKFwidXNlclwiLCBjcnVkLmlkLCBvcHRpb25zKSxcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIFwic2VydmVyXCJcbiAgICAgICAgKTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJVc2VyQXBpS2V5c0NhY2hlLnJlZnJlc2goW2NydWQuaWRdKTtcbiAgICAgICAgcmV0dXJuIGFwcC5fc2VydmVyQXBpS2V5RnJvbUNydWQocmVzdWx0KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIF9zZXJ2ZXJUZWFtVXNlckZyb21DcnVkKGNydWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4udGhpcy5fc2VydmVyVXNlckZyb21DcnVkKGNydWQudXNlciksXG4gICAgICB0ZWFtUHJvZmlsZToge1xuICAgICAgICBkaXNwbGF5TmFtZTogY3J1ZC5kaXNwbGF5X25hbWUsXG4gICAgICAgIHByb2ZpbGVJbWFnZVVybDogY3J1ZC5wcm9maWxlX2ltYWdlX3VybFxuICAgICAgfVxuICAgIH07XG4gIH1cbiAgX3NlcnZlclRlYW1JbnZpdGF0aW9uRnJvbUNydWQoY3J1ZCkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogY3J1ZC5pZCxcbiAgICAgIHJlY2lwaWVudEVtYWlsOiBjcnVkLnJlY2lwaWVudF9lbWFpbCxcbiAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoY3J1ZC5leHBpcmVzX2F0X21pbGxpcyksXG4gICAgICByZXZva2U6IGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgdGhpcy5faW50ZXJmYWNlLnJldm9rZVNlcnZlclRlYW1JbnZpdGF0aW9uKGNydWQuaWQsIGNydWQudGVhbV9pZCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBfY3VycmVudFVzZXJGcm9tQ3J1ZChjcnVkLCBzZXNzaW9uKSB7XG4gICAgY29uc3QgYXBwID0gdGhpcztcbiAgICBjb25zdCBjdXJyZW50VXNlciA9IHtcbiAgICAgIC4uLnRoaXMuX3NlcnZlclVzZXJGcm9tQ3J1ZChjcnVkKSxcbiAgICAgIC4uLnRoaXMuX2NyZWF0ZUF1dGgoc2Vzc2lvbiksXG4gICAgICAuLi50aGlzLl9pc0ludGVybmFsUHJvamVjdCgpID8gdGhpcy5fY3JlYXRlSW50ZXJuYWxVc2VyRXh0cmEoc2Vzc2lvbikgOiB7fVxuICAgIH07XG4gICAgT2JqZWN0LmZyZWV6ZShjdXJyZW50VXNlcik7XG4gICAgcmV0dXJuIGN1cnJlbnRVc2VyO1xuICB9XG4gIF9zZXJ2ZXJUZWFtRnJvbUNydWQoY3J1ZCkge1xuICAgIGNvbnN0IGFwcCA9IHRoaXM7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBjcnVkLmlkLFxuICAgICAgZGlzcGxheU5hbWU6IGNydWQuZGlzcGxheV9uYW1lLFxuICAgICAgcHJvZmlsZUltYWdlVXJsOiBjcnVkLnByb2ZpbGVfaW1hZ2VfdXJsLFxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShjcnVkLmNyZWF0ZWRfYXRfbWlsbGlzKSxcbiAgICAgIGNsaWVudE1ldGFkYXRhOiBjcnVkLmNsaWVudF9tZXRhZGF0YSxcbiAgICAgIGNsaWVudFJlYWRPbmx5TWV0YWRhdGE6IGNydWQuY2xpZW50X3JlYWRfb25seV9tZXRhZGF0YSxcbiAgICAgIHNlcnZlck1ldGFkYXRhOiBjcnVkLnNlcnZlcl9tZXRhZGF0YSxcbiAgICAgIGFzeW5jIHVwZGF0ZSh1cGRhdGUpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UudXBkYXRlU2VydmVyVGVhbShjcnVkLmlkLCBzZXJ2ZXJUZWFtVXBkYXRlT3B0aW9uc1RvQ3J1ZCh1cGRhdGUpKTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtc0NhY2hlLnJlZnJlc2goW3ZvaWQgMF0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGRlbGV0ZSgpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UuZGVsZXRlU2VydmVyVGVhbShjcnVkLmlkKTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtc0NhY2hlLnJlZnJlc2goW3ZvaWQgMF0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGxpc3RVc2VycygpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtTWVtYmVyUHJvZmlsZXNDYWNoZS5nZXRPcldhaXQoW2NydWQuaWRdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lm1hcCgodSkgPT4gYXBwLl9zZXJ2ZXJUZWFtVXNlckZyb21DcnVkKHUpKTtcbiAgICAgIH0sXG4gICAgICB1c2VVc2VycygpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdXNlQXN5bmNDYWNoZShhcHAuX3NlcnZlclRlYW1NZW1iZXJQcm9maWxlc0NhY2hlLCBbY3J1ZC5pZF0sIFwidGVhbS51c2VVc2VycygpXCIpO1xuICAgICAgICByZXR1cm4gdXNlTWVtbygoKSA9PiByZXN1bHQubWFwKCh1KSA9PiBhcHAuX3NlcnZlclRlYW1Vc2VyRnJvbUNydWQodSkpLCBbcmVzdWx0XSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgYWRkVXNlcih1c2VySWQpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UuYWRkU2VydmVyVXNlclRvVGVhbSh7XG4gICAgICAgICAgdGVhbUlkOiBjcnVkLmlkLFxuICAgICAgICAgIHVzZXJJZFxuICAgICAgICB9KTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtTWVtYmVyUHJvZmlsZXNDYWNoZS5yZWZyZXNoKFtjcnVkLmlkXSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgcmVtb3ZlVXNlcih1c2VySWQpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2UucmVtb3ZlU2VydmVyVXNlckZyb21UZWFtKHtcbiAgICAgICAgICB0ZWFtSWQ6IGNydWQuaWQsXG4gICAgICAgICAgdXNlcklkXG4gICAgICAgIH0pO1xuICAgICAgICBhd2FpdCBhcHAuX3NlcnZlclRlYW1NZW1iZXJQcm9maWxlc0NhY2hlLnJlZnJlc2goW2NydWQuaWRdKTtcbiAgICAgIH0sXG4gICAgICBhc3luYyBpbnZpdGVVc2VyKG9wdGlvbnMpIHtcbiAgICAgICAgYXdhaXQgYXBwLl9pbnRlcmZhY2Uuc2VuZFNlcnZlclRlYW1JbnZpdGF0aW9uKHtcbiAgICAgICAgICB0ZWFtSWQ6IGNydWQuaWQsXG4gICAgICAgICAgZW1haWw6IG9wdGlvbnMuZW1haWwsXG4gICAgICAgICAgY2FsbGJhY2tVcmw6IG9wdGlvbnMuY2FsbGJhY2tVcmwgPz8gY29uc3RydWN0UmVkaXJlY3RVcmwoYXBwLnVybHMudGVhbUludml0YXRpb24sIFwiY2FsbGJhY2tVcmxcIilcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IGFwcC5fc2VydmVyVGVhbUludml0YXRpb25zQ2FjaGUucmVmcmVzaChbY3J1ZC5pZF0pO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGxpc3RJbnZpdGF0aW9ucygpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtSW52aXRhdGlvbnNDYWNoZS5nZXRPcldhaXQoW2NydWQuaWRdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lm1hcCgoY3J1ZDIpID0+IGFwcC5fc2VydmVyVGVhbUludml0YXRpb25Gcm9tQ3J1ZChjcnVkMikpO1xuICAgICAgfSxcbiAgICAgIHVzZUludml0YXRpb25zKCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB1c2VBc3luY0NhY2hlKGFwcC5fc2VydmVyVGVhbUludml0YXRpb25zQ2FjaGUsIFtjcnVkLmlkXSwgXCJ0ZWFtLnVzZUludml0YXRpb25zKClcIik7XG4gICAgICAgIHJldHVybiB1c2VNZW1vKCgpID0+IHJlc3VsdC5tYXAoKGNydWQyKSA9PiBhcHAuX3NlcnZlclRlYW1JbnZpdGF0aW9uRnJvbUNydWQoY3J1ZDIpKSwgW3Jlc3VsdF0pO1xuICAgICAgfSxcbiAgICAgIHVzZUFwaUtleXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHVzZUFzeW5jQ2FjaGUoYXBwLl9zZXJ2ZXJUZWFtQXBpS2V5c0NhY2hlLCBbY3J1ZC5pZF0sIFwidGVhbS51c2VBcGlLZXlzKClcIik7XG4gICAgICAgIHJldHVybiByZXN1bHQubWFwKChhcGlLZXkpID0+IGFwcC5fc2VydmVyQXBpS2V5RnJvbUNydWQoYXBpS2V5KSk7XG4gICAgICB9LFxuICAgICAgYXN5bmMgbGlzdEFwaUtleXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFJlc3VsdC5vclRocm93KGF3YWl0IGFwcC5fc2VydmVyVGVhbUFwaUtleXNDYWNoZS5nZXRPcldhaXQoW2NydWQuaWRdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lm1hcCgoYXBpS2V5KSA9PiBhcHAuX3NlcnZlckFwaUtleUZyb21DcnVkKGFwaUtleSkpO1xuICAgICAgfSxcbiAgICAgIGFzeW5jIGNyZWF0ZUFwaUtleShvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFwcC5faW50ZXJmYWNlLmNyZWF0ZVByb2plY3RBcGlLZXkoXG4gICAgICAgICAgYXdhaXQgYXBpS2V5Q3JlYXRpb25PcHRpb25zVG9DcnVkKFwidGVhbVwiLCBjcnVkLmlkLCBvcHRpb25zKSxcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIFwic2VydmVyXCJcbiAgICAgICAgKTtcbiAgICAgICAgYXdhaXQgYXBwLl9zZXJ2ZXJUZWFtQXBpS2V5c0NhY2hlLnJlZnJlc2goW2NydWQuaWRdKTtcbiAgICAgICAgcmV0dXJuIGFwcC5fc2VydmVyQXBpS2V5RnJvbUNydWQocmVzdWx0KTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGFzeW5jIF9nZXRVc2VyQXBpS2V5KG9wdGlvbnMpIHtcbiAgICBjb25zdCBjcnVkID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgdGhpcy5fc2VydmVyQ2hlY2tBcGlLZXlDYWNoZS5nZXRPcldhaXQoW1widXNlclwiLCBvcHRpb25zLmFwaUtleV0sIFwid3JpdGUtb25seVwiKSk7XG4gICAgcmV0dXJuIGNydWQgPyB0aGlzLl9zZXJ2ZXJBcGlLZXlGcm9tQ3J1ZChjcnVkKSA6IG51bGw7XG4gIH1cbiAgYXN5bmMgX2dldFRlYW1BcGlLZXkob3B0aW9ucykge1xuICAgIGNvbnN0IGNydWQgPSBSZXN1bHQub3JUaHJvdyhhd2FpdCB0aGlzLl9zZXJ2ZXJDaGVja0FwaUtleUNhY2hlLmdldE9yV2FpdChbXCJ0ZWFtXCIsIG9wdGlvbnMuYXBpS2V5XSwgXCJ3cml0ZS1vbmx5XCIpKTtcbiAgICByZXR1cm4gY3J1ZCA/IHRoaXMuX3NlcnZlckFwaUtleUZyb21DcnVkKGNydWQpIDogbnVsbDtcbiAgfVxuICBfdXNlVXNlckFwaUtleShvcHRpb25zKSB7XG4gICAgY29uc3QgY3J1ZCA9IHVzZUFzeW5jQ2FjaGUodGhpcy5fc2VydmVyQ2hlY2tBcGlLZXlDYWNoZSwgW1widXNlclwiLCBvcHRpb25zLmFwaUtleV0sIFwidXNlVXNlckFwaUtleSgpXCIpO1xuICAgIHJldHVybiB1c2VNZW1vKCgpID0+IGNydWQgPyB0aGlzLl9zZXJ2ZXJBcGlLZXlGcm9tQ3J1ZChjcnVkKSA6IG51bGwsIFtjcnVkXSk7XG4gIH1cbiAgX3VzZVRlYW1BcGlLZXkob3B0aW9ucykge1xuICAgIGNvbnN0IGNydWQgPSB1c2VBc3luY0NhY2hlKHRoaXMuX3NlcnZlckNoZWNrQXBpS2V5Q2FjaGUsIFtcInRlYW1cIiwgb3B0aW9ucy5hcGlLZXldLCBcInVzZVRlYW1BcGlLZXkoKVwiKTtcbiAgICByZXR1cm4gdXNlTWVtbygoKSA9PiBjcnVkID8gdGhpcy5fc2VydmVyQXBpS2V5RnJvbUNydWQoY3J1ZCkgOiBudWxsLCBbY3J1ZF0pO1xuICB9XG4gIGFzeW5jIF9nZXRVc2VyQnlBcGlLZXkoYXBpS2V5KSB7XG4gICAgY29uc3QgYXBpS2V5T2JqZWN0ID0gYXdhaXQgdGhpcy5fZ2V0VXNlckFwaUtleSh7IGFwaUtleSB9KTtcbiAgICBpZiAoYXBpS2V5T2JqZWN0ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0U2VydmVyVXNlckJ5SWQoYXBpS2V5T2JqZWN0LnVzZXJJZCk7XG4gIH1cbiAgX3VzZVVzZXJCeUFwaUtleShhcGlLZXkpIHtcbiAgICBjb25zdCBhcGlLZXlPYmplY3QgPSB0aGlzLl91c2VVc2VyQXBpS2V5KHsgYXBpS2V5IH0pO1xuICAgIGlmIChhcGlLZXlPYmplY3QgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy51c2VVc2VyQnlJZChhcGlLZXlPYmplY3QudXNlcklkKTtcbiAgfVxuICBhc3luYyBfZ2V0VGVhbUJ5QXBpS2V5KGFwaUtleSkge1xuICAgIGNvbnN0IGFwaUtleU9iamVjdCA9IGF3YWl0IHRoaXMuX2dldFRlYW1BcGlLZXkoeyBhcGlLZXkgfSk7XG4gICAgaWYgKGFwaUtleU9iamVjdCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldFRlYW0oYXBpS2V5T2JqZWN0LnRlYW1JZCk7XG4gIH1cbiAgX3VzZVRlYW1CeUFwaUtleShhcGlLZXkpIHtcbiAgICBjb25zdCBhcGlLZXlPYmplY3QgPSB0aGlzLl91c2VUZWFtQXBpS2V5KHsgYXBpS2V5IH0pO1xuICAgIGlmIChhcGlLZXlPYmplY3QgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy51c2VUZWFtKGFwaUtleU9iamVjdC50ZWFtSWQpO1xuICB9XG4gIGFzeW5jIGNyZWF0ZVVzZXIob3B0aW9ucykge1xuICAgIGNvbnN0IGNydWQgPSBhd2FpdCB0aGlzLl9pbnRlcmZhY2UuY3JlYXRlU2VydmVyVXNlcihzZXJ2ZXJVc2VyQ3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSk7XG4gICAgYXdhaXQgdGhpcy5fcmVmcmVzaFVzZXJzKCk7XG4gICAgcmV0dXJuIHRoaXMuX3NlcnZlclVzZXJGcm9tQ3J1ZChjcnVkKTtcbiAgfVxuICBhc3luYyBnZXRVc2VyKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLmdldFNlcnZlclVzZXJCeUlkKG9wdGlvbnMpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwib2JqZWN0XCIgJiYgXCJhcGlLZXlcIiBpbiBvcHRpb25zKSB7XG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5fZ2V0VXNlckJ5QXBpS2V5KG9wdGlvbnMuYXBpS2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZW5zdXJlUGVyc2lzdGVudFRva2VuU3RvcmUob3B0aW9ucz8udG9rZW5TdG9yZSk7XG4gICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgdGhpcy5fZ2V0U2Vzc2lvbihvcHRpb25zPy50b2tlblN0b3JlKTtcbiAgICAgIGxldCBjcnVkID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgdGhpcy5fY3VycmVudFNlcnZlclVzZXJDYWNoZS5nZXRPcldhaXQoW3Nlc3Npb25dLCBcIndyaXRlLW9ubHlcIikpO1xuICAgICAgaWYgKGNydWQ/LmlzX2Fub255bW91cyAmJiBvcHRpb25zPy5vciAhPT0gXCJhbm9ueW1vdXNcIiAmJiBvcHRpb25zPy5vciAhPT0gXCJhbm9ueW1vdXMtaWYtZXhpc3RzXCIpIHtcbiAgICAgICAgY3J1ZCA9IG51bGw7XG4gICAgICB9XG4gICAgICBpZiAoY3J1ZCA9PT0gbnVsbCkge1xuICAgICAgICBzd2l0Y2ggKG9wdGlvbnM/Lm9yKSB7XG4gICAgICAgICAgY2FzZSBcInJlZGlyZWN0XCI6IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucmVkaXJlY3RUb1NpZ25Jbih7IHJlcGxhY2U6IHRydWUgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSBcInRocm93XCI6IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVzZXIgaXMgbm90IHNpZ25lZCBpbiBidXQgZ2V0VXNlciB3YXMgY2FsbGVkIHdpdGggeyBvcjogJ3Rocm93JyB9XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXNlIFwiYW5vbnltb3VzXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHRva2VucyA9IGF3YWl0IHRoaXMuX3NpZ25VcEFub255bW91c2x5KCk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRVc2VyKHsgdG9rZW5TdG9yZTogdG9rZW5zLCBvcjogXCJhbm9ueW1vdXMtaWYtZXhpc3RzXCIgfSkgPz8gdGhyb3dFcnIoXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aGlsZSBzaWduaW5nIHVwIGFub255bW91c2x5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgICBjYXNlIFwiYW5vbnltb3VzLWlmLWV4aXN0c1wiOlxuICAgICAgICAgIGNhc2UgXCJyZXR1cm4tbnVsbFwiOiB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBjcnVkICYmIHRoaXMuX2N1cnJlbnRVc2VyRnJvbUNydWQoY3J1ZCwgc2Vzc2lvbik7XG4gICAgfVxuICB9XG4gIGFzeW5jIGdldFNlcnZlclVzZXIoKSB7XG4gICAgY29uc29sZS53YXJuKFwic3RhY2tTZXJ2ZXJBcHAuZ2V0U2VydmVyVXNlciBpcyBkZXByZWNhdGVkOyB1c2Ugc3RhY2tTZXJ2ZXJBcHAuZ2V0VXNlciBpbnN0ZWFkXCIpO1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldFVzZXIoKTtcbiAgfVxuICBhc3luYyBnZXRTZXJ2ZXJVc2VyQnlJZCh1c2VySWQpIHtcbiAgICBjb25zdCBjcnVkID0gUmVzdWx0Lm9yVGhyb3coYXdhaXQgdGhpcy5fc2VydmVyVXNlckNhY2hlLmdldE9yV2FpdChbdXNlcklkXSwgXCJ3cml0ZS1vbmx5XCIpKTtcbiAgICByZXR1cm4gY3J1ZCAmJiB0aGlzLl9zZXJ2ZXJVc2VyRnJvbUNydWQoY3J1ZCk7XG4gIH1cbiAgdXNlVXNlcihvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gdGhpcy51c2VVc2VyQnlJZChvcHRpb25zKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcIm9iamVjdFwiICYmIFwiYXBpS2V5XCIgaW4gb3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMuX3VzZVVzZXJCeUFwaUtleShvcHRpb25zLmFwaUtleSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2Vuc3VyZVBlcnNpc3RlbnRUb2tlblN0b3JlKG9wdGlvbnM/LnRva2VuU3RvcmUpO1xuICAgICAgY29uc3Qgc2Vzc2lvbiA9IHRoaXMuX3VzZVNlc3Npb24ob3B0aW9ucz8udG9rZW5TdG9yZSk7XG4gICAgICBsZXQgY3J1ZCA9IHVzZUFzeW5jQ2FjaGUodGhpcy5fY3VycmVudFNlcnZlclVzZXJDYWNoZSwgW3Nlc3Npb25dLCBcInVzZVVzZXIoKVwiKTtcbiAgICAgIGlmIChjcnVkPy5pc19hbm9ueW1vdXMgJiYgb3B0aW9ucz8ub3IgIT09IFwiYW5vbnltb3VzXCIgJiYgb3B0aW9ucz8ub3IgIT09IFwiYW5vbnltb3VzLWlmLWV4aXN0c1wiKSB7XG4gICAgICAgIGNydWQgPSBudWxsO1xuICAgICAgfVxuICAgICAgaWYgKGNydWQgPT09IG51bGwpIHtcbiAgICAgICAgc3dpdGNoIChvcHRpb25zPy5vcikge1xuICAgICAgICAgIGNhc2UgXCJyZWRpcmVjdFwiOiB7XG4gICAgICAgICAgICBydW5Bc3luY2hyb25vdXNseSh0aGlzLnJlZGlyZWN0VG9TaWduSW4oeyByZXBsYWNlOiB0cnVlIH0pKTtcbiAgICAgICAgICAgIHN1c3BlbmQoKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwic3VzcGVuZCBzaG91bGQgbmV2ZXIgcmV0dXJuXCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjYXNlIFwidGhyb3dcIjoge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlciBpcyBub3Qgc2lnbmVkIGluIGJ1dCB1c2VVc2VyIHdhcyBjYWxsZWQgd2l0aCB7IG9yOiAndGhyb3cnIH1cIik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhc2UgXCJhbm9ueW1vdXNcIjoge1xuICAgICAgICAgICAgcnVuQXN5bmNocm9ub3VzbHkoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICBhd2FpdCB0aGlzLl9zaWduVXBBbm9ueW1vdXNseSgpO1xuICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzdXNwZW5kKCk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcInN1c3BlbmQgc2hvdWxkIG5ldmVyIHJldHVyblwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICAgICAgY2FzZSBcImFub255bW91cy1pZi1leGlzdHNcIjpcbiAgICAgICAgICBjYXNlIFwicmV0dXJuLW51bGxcIjoge1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gY3J1ZCAmJiB0aGlzLl9jdXJyZW50VXNlckZyb21DcnVkKGNydWQsIHNlc3Npb24pO1xuICAgICAgfSwgW2NydWQsIHNlc3Npb24sIG9wdGlvbnM/Lm9yXSk7XG4gICAgfVxuICB9XG4gIHVzZVVzZXJCeUlkKHVzZXJJZCkge1xuICAgIGNvbnN0IGNydWQgPSB1c2VBc3luY0NhY2hlKHRoaXMuX3NlcnZlclVzZXJDYWNoZSwgW3VzZXJJZF0sIFwidXNlVXNlckJ5SWQoKVwiKTtcbiAgICByZXR1cm4gdXNlTWVtbygoKSA9PiB7XG4gICAgICByZXR1cm4gY3J1ZCAmJiB0aGlzLl9zZXJ2ZXJVc2VyRnJvbUNydWQoY3J1ZCk7XG4gICAgfSwgW2NydWRdKTtcbiAgfVxuICBhc3luYyBsaXN0VXNlcnMob3B0aW9ucykge1xuICAgIGNvbnN0IGNydWQgPSBSZXN1bHQub3JUaHJvdyhhd2FpdCB0aGlzLl9zZXJ2ZXJVc2Vyc0NhY2hlLmdldE9yV2FpdChbb3B0aW9ucz8uY3Vyc29yLCBvcHRpb25zPy5saW1pdCwgb3B0aW9ucz8ub3JkZXJCeSwgb3B0aW9ucz8uZGVzYywgb3B0aW9ucz8ucXVlcnldLCBcIndyaXRlLW9ubHlcIikpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGNydWQuaXRlbXMubWFwKChqKSA9PiB0aGlzLl9zZXJ2ZXJVc2VyRnJvbUNydWQoaikpO1xuICAgIHJlc3VsdC5uZXh0Q3Vyc29yID0gY3J1ZC5wYWdpbmF0aW9uPy5uZXh0X2N1cnNvciA/PyBudWxsO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgdXNlVXNlcnMob3B0aW9ucykge1xuICAgIGNvbnN0IGNydWQgPSB1c2VBc3luY0NhY2hlKHRoaXMuX3NlcnZlclVzZXJzQ2FjaGUsIFtvcHRpb25zPy5jdXJzb3IsIG9wdGlvbnM/LmxpbWl0LCBvcHRpb25zPy5vcmRlckJ5LCBvcHRpb25zPy5kZXNjLCBvcHRpb25zPy5xdWVyeV0sIFwidXNlU2VydmVyVXNlcnMoKVwiKTtcbiAgICBjb25zdCByZXN1bHQgPSBjcnVkLml0ZW1zLm1hcCgoaikgPT4gdGhpcy5fc2VydmVyVXNlckZyb21DcnVkKGopKTtcbiAgICByZXN1bHQubmV4dEN1cnNvciA9IGNydWQucGFnaW5hdGlvbj8ubmV4dF9jdXJzb3IgPz8gbnVsbDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIF9zZXJ2ZXJQZXJtaXNzaW9uRnJvbUNydWQoY3J1ZCkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogY3J1ZC5pZFxuICAgIH07XG4gIH1cbiAgX3NlcnZlclRlYW1QZXJtaXNzaW9uRGVmaW5pdGlvbkZyb21DcnVkKGNydWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IGNydWQuaWQsXG4gICAgICBkZXNjcmlwdGlvbjogY3J1ZC5kZXNjcmlwdGlvbixcbiAgICAgIGNvbnRhaW5lZFBlcm1pc3Npb25JZHM6IGNydWQuY29udGFpbmVkX3Blcm1pc3Npb25faWRzXG4gICAgfTtcbiAgfVxuICBfc2VydmVyUHJvamVjdFBlcm1pc3Npb25EZWZpbml0aW9uRnJvbUNydWQoY3J1ZCkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogY3J1ZC5pZCxcbiAgICAgIGRlc2NyaXB0aW9uOiBjcnVkLmRlc2NyaXB0aW9uLFxuICAgICAgY29udGFpbmVkUGVybWlzc2lvbklkczogY3J1ZC5jb250YWluZWRfcGVybWlzc2lvbl9pZHNcbiAgICB9O1xuICB9XG4gIGFzeW5jIGxpc3RUZWFtcygpIHtcbiAgICBjb25zdCB0ZWFtcyA9IFJlc3VsdC5vclRocm93KGF3YWl0IHRoaXMuX3NlcnZlclRlYW1zQ2FjaGUuZ2V0T3JXYWl0KFt2b2lkIDBdLCBcIndyaXRlLW9ubHlcIikpO1xuICAgIHJldHVybiB0ZWFtcy5tYXAoKHQpID0+IHRoaXMuX3NlcnZlclRlYW1Gcm9tQ3J1ZCh0KSk7XG4gIH1cbiAgYXN5bmMgY3JlYXRlVGVhbShkYXRhKSB7XG4gICAgY29uc3QgdGVhbSA9IGF3YWl0IHRoaXMuX2ludGVyZmFjZS5jcmVhdGVTZXJ2ZXJUZWFtKHNlcnZlclRlYW1DcmVhdGVPcHRpb25zVG9DcnVkKGRhdGEpKTtcbiAgICBhd2FpdCB0aGlzLl9zZXJ2ZXJUZWFtc0NhY2hlLnJlZnJlc2goW3ZvaWQgMF0pO1xuICAgIHJldHVybiB0aGlzLl9zZXJ2ZXJUZWFtRnJvbUNydWQodGVhbSk7XG4gIH1cbiAgdXNlVGVhbXMoKSB7XG4gICAgY29uc3QgdGVhbXMgPSB1c2VBc3luY0NhY2hlKHRoaXMuX3NlcnZlclRlYW1zQ2FjaGUsIFt2b2lkIDBdLCBcInVzZVNlcnZlclRlYW1zKClcIik7XG4gICAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgICAgcmV0dXJuIHRlYW1zLm1hcCgodCkgPT4gdGhpcy5fc2VydmVyVGVhbUZyb21DcnVkKHQpKTtcbiAgICB9LCBbdGVhbXNdKTtcbiAgfVxuICBhc3luYyBnZXRUZWFtKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwib2JqZWN0XCIgJiYgXCJhcGlLZXlcIiBpbiBvcHRpb25zKSB7XG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5fZ2V0VGVhbUJ5QXBpS2V5KG9wdGlvbnMuYXBpS2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdGVhbUlkID0gb3B0aW9ucztcbiAgICAgIGNvbnN0IHRlYW1zID0gYXdhaXQgdGhpcy5saXN0VGVhbXMoKTtcbiAgICAgIHJldHVybiB0ZWFtcy5maW5kKCh0KSA9PiB0LmlkID09PSB0ZWFtSWQpID8/IG51bGw7XG4gICAgfVxuICB9XG4gIHVzZVRlYW0ob3B0aW9ucykge1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJvYmplY3RcIiAmJiBcImFwaUtleVwiIGluIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLl91c2VUZWFtQnlBcGlLZXkob3B0aW9ucy5hcGlLZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB0ZWFtSWQgPSBvcHRpb25zO1xuICAgICAgY29uc3QgdGVhbXMgPSB0aGlzLnVzZVRlYW1zKCk7XG4gICAgICByZXR1cm4gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIHJldHVybiB0ZWFtcy5maW5kKCh0KSA9PiB0LmlkID09PSB0ZWFtSWQpID8/IG51bGw7XG4gICAgICB9LCBbdGVhbXMsIHRlYW1JZF0pO1xuICAgIH1cbiAgfVxuICBhc3luYyBfcmVmcmVzaFNlc3Npb24oc2Vzc2lvbikge1xuICAgIGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIHN1cGVyLl9yZWZyZXNoVXNlcihzZXNzaW9uKSxcbiAgICAgIHRoaXMuX2N1cnJlbnRTZXJ2ZXJVc2VyQ2FjaGUucmVmcmVzaChbc2Vzc2lvbl0pXG4gICAgXSk7XG4gIH1cbiAgYXN5bmMgX3JlZnJlc2hVc2VycygpIHtcbiAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBzdXBlci5fcmVmcmVzaFVzZXJzKCksXG4gICAgICB0aGlzLl9zZXJ2ZXJVc2VyQ2FjaGUucmVmcmVzaFdoZXJlKCgpID0+IHRydWUpLFxuICAgICAgdGhpcy5fc2VydmVyVXNlcnNDYWNoZS5yZWZyZXNoV2hlcmUoKCkgPT4gdHJ1ZSksXG4gICAgICB0aGlzLl9zZXJ2ZXJDb250YWN0Q2hhbm5lbHNDYWNoZS5yZWZyZXNoV2hlcmUoKCkgPT4gdHJ1ZSlcbiAgICBdKTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIF9TdGFja1NlcnZlckFwcEltcGxJbmNvbXBsZXRlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VydmVyLWFwcC1pbXBsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackClientApp: () => (/* binding */ StackClientApp)\n/* harmony export */ });\n/* harmony import */ var _implementations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../implementations */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js\");\n// src/lib/stack-app/apps/interfaces/client-app.ts\n\nvar StackClientApp = _implementations__WEBPACK_IMPORTED_MODULE_0__._StackClientAppImpl;\n\n//# sourceMappingURL=client-app.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW50ZXJmYWNlcy9jbGllbnQtYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDeUQ7QUFDekQscUJBQXFCLGlFQUFtQjtBQUd0QztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcHBzXFxpbnRlcmZhY2VzXFxjbGllbnQtYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL2FwcHMvaW50ZXJmYWNlcy9jbGllbnQtYXBwLnRzXG5pbXBvcnQgeyBfU3RhY2tDbGllbnRBcHBJbXBsIH0gZnJvbSBcIi4uL2ltcGxlbWVudGF0aW9uc1wiO1xudmFyIFN0YWNrQ2xpZW50QXBwID0gX1N0YWNrQ2xpZW50QXBwSW1wbDtcbmV4cG9ydCB7XG4gIFN0YWNrQ2xpZW50QXBwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LWFwcC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stackAppInternalsSymbol: () => (/* binding */ stackAppInternalsSymbol)\n/* harmony export */ });\n// src/lib/stack-app/common.ts\nvar stackAppInternalsSymbol = Symbol.for(\"StackAuth--DO-NOT-USE-OR-YOU-WILL-BE-FIRED--StackAppInternals\");\n\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGNvbW1vbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9jb21tb24udHNcbnZhciBzdGFja0FwcEludGVybmFsc1N5bWJvbCA9IFN5bWJvbC5mb3IoXCJTdGFja0F1dGgtLURPLU5PVC1VU0UtT1ItWU9VLVdJTEwtQkUtRklSRUQtLVN0YWNrQXBwSW50ZXJuYWxzXCIpO1xuZXhwb3J0IHtcbiAgc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2xcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contactChannelCreateOptionsToCrud: () => (/* binding */ contactChannelCreateOptionsToCrud),\n/* harmony export */   contactChannelUpdateOptionsToCrud: () => (/* binding */ contactChannelUpdateOptionsToCrud),\n/* harmony export */   serverContactChannelCreateOptionsToCrud: () => (/* binding */ serverContactChannelCreateOptionsToCrud),\n/* harmony export */   serverContactChannelUpdateOptionsToCrud: () => (/* binding */ serverContactChannelUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/contact-channels/index.ts\nfunction contactChannelCreateOptionsToCrud(userId, options) {\n  return {\n    value: options.value,\n    type: options.type,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary,\n    user_id: userId\n  };\n}\nfunction contactChannelUpdateOptionsToCrud(options) {\n  return {\n    value: options.value,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\nfunction serverContactChannelUpdateOptionsToCrud(options) {\n  return {\n    value: options.value,\n    is_verified: options.isVerified,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\nfunction serverContactChannelCreateOptionsToCrud(userId, options) {\n  return {\n    type: options.type,\n    value: options.value,\n    is_verified: options.isVerified,\n    user_id: userId,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2NvbnRhY3QtY2hhbm5lbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxjb250YWN0LWNoYW5uZWxzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9jb250YWN0LWNoYW5uZWxzL2luZGV4LnRzXG5mdW5jdGlvbiBjb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQodXNlcklkLCBvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IG9wdGlvbnMudmFsdWUsXG4gICAgdHlwZTogb3B0aW9ucy50eXBlLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnksXG4gICAgdXNlcl9pZDogdXNlcklkXG4gIH07XG59XG5mdW5jdGlvbiBjb250YWN0Q2hhbm5lbFVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIHZhbHVlOiBvcHRpb25zLnZhbHVlLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnlcbiAgfTtcbn1cbmZ1bmN0aW9uIHNlcnZlckNvbnRhY3RDaGFubmVsVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IG9wdGlvbnMudmFsdWUsXG4gICAgaXNfdmVyaWZpZWQ6IG9wdGlvbnMuaXNWZXJpZmllZCxcbiAgICB1c2VkX2Zvcl9hdXRoOiBvcHRpb25zLnVzZWRGb3JBdXRoLFxuICAgIGlzX3ByaW1hcnk6IG9wdGlvbnMuaXNQcmltYXJ5XG4gIH07XG59XG5mdW5jdGlvbiBzZXJ2ZXJDb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQodXNlcklkLCBvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogb3B0aW9ucy50eXBlLFxuICAgIHZhbHVlOiBvcHRpb25zLnZhbHVlLFxuICAgIGlzX3ZlcmlmaWVkOiBvcHRpb25zLmlzVmVyaWZpZWQsXG4gICAgdXNlcl9pZDogdXNlcklkLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnlcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGNvbnRhY3RDaGFubmVsQ3JlYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgY29udGFjdENoYW5uZWxVcGRhdGVPcHRpb25zVG9DcnVkLFxuICBzZXJ2ZXJDb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIHNlcnZlckNvbnRhY3RDaGFubmVsVXBkYXRlT3B0aW9uc1RvQ3J1ZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/email-templates/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/email-templates/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminEmailTemplateUpdateOptionsToCrud: () => (/* binding */ adminEmailTemplateUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/email-templates/index.ts\nfunction adminEmailTemplateUpdateOptionsToCrud(options) {\n  return {\n    subject: options.subject,\n    content: options.content\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2VtYWlsLXRlbXBsYXRlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxlbWFpbC10ZW1wbGF0ZXNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL2VtYWlsLXRlbXBsYXRlcy9pbmRleC50c1xuZnVuY3Rpb24gYWRtaW5FbWFpbFRlbXBsYXRlVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgc3ViamVjdDogb3B0aW9ucy5zdWJqZWN0LFxuICAgIGNvbnRlbnQ6IG9wdGlvbnMuY29udGVudFxuICB9O1xufVxuZXhwb3J0IHtcbiAgYWRtaW5FbWFpbFRlbXBsYXRlVXBkYXRlT3B0aW9uc1RvQ3J1ZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/email-templates/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   internalApiKeyCreateOptionsToCrud: () => (/* binding */ internalApiKeyCreateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/internal-api-keys/index.ts\nfunction internalApiKeyCreateOptionsToCrud(options) {\n  return {\n    description: options.description,\n    expires_at_millis: options.expiresAt.getTime(),\n    has_publishable_client_key: options.hasPublishableClientKey,\n    has_secret_server_key: options.hasSecretServerKey,\n    has_super_secret_admin_key: options.hasSuperSecretAdminKey\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2ludGVybmFsLWFwaS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGludGVybmFsLWFwaS1rZXlzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9pbnRlcm5hbC1hcGkta2V5cy9pbmRleC50c1xuZnVuY3Rpb24gaW50ZXJuYWxBcGlLZXlDcmVhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkZXNjcmlwdGlvbjogb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICBleHBpcmVzX2F0X21pbGxpczogb3B0aW9ucy5leHBpcmVzQXQuZ2V0VGltZSgpLFxuICAgIGhhc19wdWJsaXNoYWJsZV9jbGllbnRfa2V5OiBvcHRpb25zLmhhc1B1Ymxpc2hhYmxlQ2xpZW50S2V5LFxuICAgIGhhc19zZWNyZXRfc2VydmVyX2tleTogb3B0aW9ucy5oYXNTZWNyZXRTZXJ2ZXJLZXksXG4gICAgaGFzX3N1cGVyX3NlY3JldF9hZG1pbl9rZXk6IG9wdGlvbnMuaGFzU3VwZXJTZWNyZXRBZG1pbktleVxuICB9O1xufVxuZXhwb3J0IHtcbiAgaW50ZXJuYWxBcGlLZXlDcmVhdGVPcHRpb25zVG9DcnVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminProjectPermissionDefinitionCreateOptionsToCrud: () => (/* binding */ adminProjectPermissionDefinitionCreateOptionsToCrud),\n/* harmony export */   adminProjectPermissionDefinitionUpdateOptionsToCrud: () => (/* binding */ adminProjectPermissionDefinitionUpdateOptionsToCrud),\n/* harmony export */   adminTeamPermissionDefinitionCreateOptionsToCrud: () => (/* binding */ adminTeamPermissionDefinitionCreateOptionsToCrud),\n/* harmony export */   adminTeamPermissionDefinitionUpdateOptionsToCrud: () => (/* binding */ adminTeamPermissionDefinitionUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/permissions/index.ts\nfunction adminTeamPermissionDefinitionCreateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminTeamPermissionDefinitionUpdateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminProjectPermissionDefinitionCreateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminProjectPermissionDefinitionUpdateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3Blcm1pc3Npb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxccGVybWlzc2lvbnNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL3Blcm1pc3Npb25zL2luZGV4LnRzXG5mdW5jdGlvbiBhZG1pblRlYW1QZXJtaXNzaW9uRGVmaW5pdGlvbkNyZWF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBvcHRpb25zLmlkLFxuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGNvbnRhaW5lZF9wZXJtaXNzaW9uX2lkczogb3B0aW9ucy5jb250YWluZWRQZXJtaXNzaW9uSWRzXG4gIH07XG59XG5mdW5jdGlvbiBhZG1pblRlYW1QZXJtaXNzaW9uRGVmaW5pdGlvblVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBvcHRpb25zLmlkLFxuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGNvbnRhaW5lZF9wZXJtaXNzaW9uX2lkczogb3B0aW9ucy5jb250YWluZWRQZXJtaXNzaW9uSWRzXG4gIH07XG59XG5mdW5jdGlvbiBhZG1pblByb2plY3RQZXJtaXNzaW9uRGVmaW5pdGlvbkNyZWF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBvcHRpb25zLmlkLFxuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGNvbnRhaW5lZF9wZXJtaXNzaW9uX2lkczogb3B0aW9ucy5jb250YWluZWRQZXJtaXNzaW9uSWRzXG4gIH07XG59XG5mdW5jdGlvbiBhZG1pblByb2plY3RQZXJtaXNzaW9uRGVmaW5pdGlvblVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBvcHRpb25zLmlkLFxuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGNvbnRhaW5lZF9wZXJtaXNzaW9uX2lkczogb3B0aW9ucy5jb250YWluZWRQZXJtaXNzaW9uSWRzXG4gIH07XG59XG5leHBvcnQge1xuICBhZG1pblByb2plY3RQZXJtaXNzaW9uRGVmaW5pdGlvbkNyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIGFkbWluUHJvamVjdFBlcm1pc3Npb25EZWZpbml0aW9uVXBkYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgYWRtaW5UZWFtUGVybWlzc2lvbkRlZmluaXRpb25DcmVhdGVPcHRpb25zVG9DcnVkLFxuICBhZG1pblRlYW1QZXJtaXNzaW9uRGVmaW5pdGlvblVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminProjectCreateOptionsToCrud: () => (/* binding */ adminProjectCreateOptionsToCrud),\n/* harmony export */   adminProjectUpdateOptionsToCrud: () => (/* binding */ adminProjectUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/projects/index.ts\nfunction adminProjectUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    description: options.description,\n    is_production_mode: options.isProductionMode,\n    config: {\n      domains: options.config?.domains?.map((d) => ({\n        domain: d.domain,\n        handler_path: d.handlerPath\n      })),\n      oauth_providers: options.config?.oauthProviders?.map((p) => ({\n        id: p.id,\n        enabled: p.enabled,\n        type: p.type,\n        ...p.type === \"standard\" && {\n          client_id: p.clientId,\n          client_secret: p.clientSecret,\n          facebook_config_id: p.facebookConfigId,\n          microsoft_tenant_id: p.microsoftTenantId\n        }\n      })),\n      email_config: options.config?.emailConfig && (options.config.emailConfig.type === \"shared\" ? {\n        type: \"shared\"\n      } : {\n        type: \"standard\",\n        host: options.config.emailConfig.host,\n        port: options.config.emailConfig.port,\n        username: options.config.emailConfig.username,\n        password: options.config.emailConfig.password,\n        sender_name: options.config.emailConfig.senderName,\n        sender_email: options.config.emailConfig.senderEmail\n      }),\n      sign_up_enabled: options.config?.signUpEnabled,\n      credential_enabled: options.config?.credentialEnabled,\n      magic_link_enabled: options.config?.magicLinkEnabled,\n      passkey_enabled: options.config?.passkeyEnabled,\n      allow_localhost: options.config?.allowLocalhost,\n      create_team_on_sign_up: options.config?.createTeamOnSignUp,\n      client_team_creation_enabled: options.config?.clientTeamCreationEnabled,\n      client_user_deletion_enabled: options.config?.clientUserDeletionEnabled,\n      team_creator_default_permissions: options.config?.teamCreatorDefaultPermissions,\n      team_member_default_permissions: options.config?.teamMemberDefaultPermissions,\n      user_default_permissions: options.config?.userDefaultPermissions,\n      oauth_account_merge_strategy: options.config?.oauthAccountMergeStrategy,\n      allow_user_api_keys: options.config?.allowUserApiKeys,\n      allow_team_api_keys: options.config?.allowTeamApiKeys\n    }\n  };\n}\nfunction adminProjectCreateOptionsToCrud(options) {\n  return {\n    ...adminProjectUpdateOptionsToCrud(options),\n    display_name: options.displayName\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3Byb2plY3RzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxccHJvamVjdHNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL3Byb2plY3RzL2luZGV4LnRzXG5mdW5jdGlvbiBhZG1pblByb2plY3RVcGRhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgaXNfcHJvZHVjdGlvbl9tb2RlOiBvcHRpb25zLmlzUHJvZHVjdGlvbk1vZGUsXG4gICAgY29uZmlnOiB7XG4gICAgICBkb21haW5zOiBvcHRpb25zLmNvbmZpZz8uZG9tYWlucz8ubWFwKChkKSA9PiAoe1xuICAgICAgICBkb21haW46IGQuZG9tYWluLFxuICAgICAgICBoYW5kbGVyX3BhdGg6IGQuaGFuZGxlclBhdGhcbiAgICAgIH0pKSxcbiAgICAgIG9hdXRoX3Byb3ZpZGVyczogb3B0aW9ucy5jb25maWc/Lm9hdXRoUHJvdmlkZXJzPy5tYXAoKHApID0+ICh7XG4gICAgICAgIGlkOiBwLmlkLFxuICAgICAgICBlbmFibGVkOiBwLmVuYWJsZWQsXG4gICAgICAgIHR5cGU6IHAudHlwZSxcbiAgICAgICAgLi4ucC50eXBlID09PSBcInN0YW5kYXJkXCIgJiYge1xuICAgICAgICAgIGNsaWVudF9pZDogcC5jbGllbnRJZCxcbiAgICAgICAgICBjbGllbnRfc2VjcmV0OiBwLmNsaWVudFNlY3JldCxcbiAgICAgICAgICBmYWNlYm9va19jb25maWdfaWQ6IHAuZmFjZWJvb2tDb25maWdJZCxcbiAgICAgICAgICBtaWNyb3NvZnRfdGVuYW50X2lkOiBwLm1pY3Jvc29mdFRlbmFudElkXG4gICAgICAgIH1cbiAgICAgIH0pKSxcbiAgICAgIGVtYWlsX2NvbmZpZzogb3B0aW9ucy5jb25maWc/LmVtYWlsQ29uZmlnICYmIChvcHRpb25zLmNvbmZpZy5lbWFpbENvbmZpZy50eXBlID09PSBcInNoYXJlZFwiID8ge1xuICAgICAgICB0eXBlOiBcInNoYXJlZFwiXG4gICAgICB9IDoge1xuICAgICAgICB0eXBlOiBcInN0YW5kYXJkXCIsXG4gICAgICAgIGhvc3Q6IG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLmhvc3QsXG4gICAgICAgIHBvcnQ6IG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLnBvcnQsXG4gICAgICAgIHVzZXJuYW1lOiBvcHRpb25zLmNvbmZpZy5lbWFpbENvbmZpZy51c2VybmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLnBhc3N3b3JkLFxuICAgICAgICBzZW5kZXJfbmFtZTogb3B0aW9ucy5jb25maWcuZW1haWxDb25maWcuc2VuZGVyTmFtZSxcbiAgICAgICAgc2VuZGVyX2VtYWlsOiBvcHRpb25zLmNvbmZpZy5lbWFpbENvbmZpZy5zZW5kZXJFbWFpbFxuICAgICAgfSksXG4gICAgICBzaWduX3VwX2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5zaWduVXBFbmFibGVkLFxuICAgICAgY3JlZGVudGlhbF9lbmFibGVkOiBvcHRpb25zLmNvbmZpZz8uY3JlZGVudGlhbEVuYWJsZWQsXG4gICAgICBtYWdpY19saW5rX2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5tYWdpY0xpbmtFbmFibGVkLFxuICAgICAgcGFzc2tleV9lbmFibGVkOiBvcHRpb25zLmNvbmZpZz8ucGFzc2tleUVuYWJsZWQsXG4gICAgICBhbGxvd19sb2NhbGhvc3Q6IG9wdGlvbnMuY29uZmlnPy5hbGxvd0xvY2FsaG9zdCxcbiAgICAgIGNyZWF0ZV90ZWFtX29uX3NpZ25fdXA6IG9wdGlvbnMuY29uZmlnPy5jcmVhdGVUZWFtT25TaWduVXAsXG4gICAgICBjbGllbnRfdGVhbV9jcmVhdGlvbl9lbmFibGVkOiBvcHRpb25zLmNvbmZpZz8uY2xpZW50VGVhbUNyZWF0aW9uRW5hYmxlZCxcbiAgICAgIGNsaWVudF91c2VyX2RlbGV0aW9uX2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5jbGllbnRVc2VyRGVsZXRpb25FbmFibGVkLFxuICAgICAgdGVhbV9jcmVhdG9yX2RlZmF1bHRfcGVybWlzc2lvbnM6IG9wdGlvbnMuY29uZmlnPy50ZWFtQ3JlYXRvckRlZmF1bHRQZXJtaXNzaW9ucyxcbiAgICAgIHRlYW1fbWVtYmVyX2RlZmF1bHRfcGVybWlzc2lvbnM6IG9wdGlvbnMuY29uZmlnPy50ZWFtTWVtYmVyRGVmYXVsdFBlcm1pc3Npb25zLFxuICAgICAgdXNlcl9kZWZhdWx0X3Blcm1pc3Npb25zOiBvcHRpb25zLmNvbmZpZz8udXNlckRlZmF1bHRQZXJtaXNzaW9ucyxcbiAgICAgIG9hdXRoX2FjY291bnRfbWVyZ2Vfc3RyYXRlZ3k6IG9wdGlvbnMuY29uZmlnPy5vYXV0aEFjY291bnRNZXJnZVN0cmF0ZWd5LFxuICAgICAgYWxsb3dfdXNlcl9hcGlfa2V5czogb3B0aW9ucy5jb25maWc/LmFsbG93VXNlckFwaUtleXMsXG4gICAgICBhbGxvd190ZWFtX2FwaV9rZXlzOiBvcHRpb25zLmNvbmZpZz8uYWxsb3dUZWFtQXBpS2V5c1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGFkbWluUHJvamVjdENyZWF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIC4uLmFkbWluUHJvamVjdFVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucyksXG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lXG4gIH07XG59XG5leHBvcnQge1xuICBhZG1pblByb2plY3RDcmVhdGVPcHRpb25zVG9DcnVkLFxuICBhZG1pblByb2plY3RVcGRhdGVPcHRpb25zVG9DcnVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverTeamCreateOptionsToCrud: () => (/* binding */ serverTeamCreateOptionsToCrud),\n/* harmony export */   serverTeamUpdateOptionsToCrud: () => (/* binding */ serverTeamUpdateOptionsToCrud),\n/* harmony export */   teamCreateOptionsToCrud: () => (/* binding */ teamCreateOptionsToCrud),\n/* harmony export */   teamUpdateOptionsToCrud: () => (/* binding */ teamUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/teams/index.ts\nfunction teamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    client_metadata: options.clientMetadata\n  };\n}\nfunction teamCreateOptionsToCrud(options, creatorUserId) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    creator_user_id: creatorUserId\n  };\n}\nfunction serverTeamCreateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    creator_user_id: options.creatorUserId\n  };\n}\nfunction serverTeamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3RlYW1zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXHRlYW1zXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC90ZWFtcy9pbmRleC50c1xuZnVuY3Rpb24gdGVhbVVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGRpc3BsYXlfbmFtZTogb3B0aW9ucy5kaXNwbGF5TmFtZSxcbiAgICBwcm9maWxlX2ltYWdlX3VybDogb3B0aW9ucy5wcm9maWxlSW1hZ2VVcmwsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhXG4gIH07XG59XG5mdW5jdGlvbiB0ZWFtQ3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zLCBjcmVhdG9yVXNlcklkKSB7XG4gIHJldHVybiB7XG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBjcmVhdG9yX3VzZXJfaWQ6IGNyZWF0b3JVc2VySWRcbiAgfTtcbn1cbmZ1bmN0aW9uIHNlcnZlclRlYW1DcmVhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgcHJvZmlsZV9pbWFnZV91cmw6IG9wdGlvbnMucHJvZmlsZUltYWdlVXJsLFxuICAgIGNyZWF0b3JfdXNlcl9pZDogb3B0aW9ucy5jcmVhdG9yVXNlcklkXG4gIH07XG59XG5mdW5jdGlvbiBzZXJ2ZXJUZWFtVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBjbGllbnRfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50TWV0YWRhdGEsXG4gICAgY2xpZW50X3JlYWRfb25seV9tZXRhZGF0YTogb3B0aW9ucy5jbGllbnRSZWFkT25seU1ldGFkYXRhLFxuICAgIHNlcnZlcl9tZXRhZGF0YTogb3B0aW9ucy5zZXJ2ZXJNZXRhZGF0YVxuICB9O1xufVxuZXhwb3J0IHtcbiAgc2VydmVyVGVhbUNyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIHNlcnZlclRlYW1VcGRhdGVPcHRpb25zVG9DcnVkLFxuICB0ZWFtQ3JlYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgdGVhbVVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverUserCreateOptionsToCrud: () => (/* binding */ serverUserCreateOptionsToCrud),\n/* harmony export */   serverUserUpdateOptionsToCrud: () => (/* binding */ serverUserUpdateOptionsToCrud),\n/* harmony export */   userUpdateOptionsToCrud: () => (/* binding */ userUpdateOptionsToCrud)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/bytes */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\");\n// src/lib/stack-app/users/index.ts\n\nfunction userUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    client_metadata: options.clientMetadata,\n    selected_team_id: options.selectedTeamId,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret,\n    profile_image_url: options.profileImageUrl,\n    otp_auth_enabled: options.otpAuthEnabled,\n    passkey_auth_enabled: options.passkeyAuthEnabled\n  };\n}\nfunction serverUserUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    primary_email: options.primaryEmail,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata,\n    selected_team_id: options.selectedTeamId,\n    primary_email_auth_enabled: options.primaryEmailAuthEnabled,\n    primary_email_verified: options.primaryEmailVerified,\n    password: options.password,\n    profile_image_url: options.profileImageUrl,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret\n  };\n}\nfunction serverUserCreateOptionsToCrud(options) {\n  return {\n    primary_email: options.primaryEmail,\n    password: options.password,\n    otp_auth_enabled: options.otpAuthEnabled,\n    primary_email_auth_enabled: options.primaryEmailAuthEnabled,\n    display_name: options.displayName,\n    primary_email_verified: options.primaryEmailVerified,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3VzZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUN5RTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLHVGQUFZO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsdUZBQVk7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxcdXNlcnNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL3VzZXJzL2luZGV4LnRzXG5pbXBvcnQgeyBlbmNvZGVCYXNlNjQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvYnl0ZXNcIjtcbmZ1bmN0aW9uIHVzZXJVcGRhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhLFxuICAgIHNlbGVjdGVkX3RlYW1faWQ6IG9wdGlvbnMuc2VsZWN0ZWRUZWFtSWQsXG4gICAgdG90cF9zZWNyZXRfYmFzZTY0OiBvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldCAhPSBudWxsID8gZW5jb2RlQmFzZTY0KG9wdGlvbnMudG90cE11bHRpRmFjdG9yU2VjcmV0KSA6IG9wdGlvbnMudG90cE11bHRpRmFjdG9yU2VjcmV0LFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBvdHBfYXV0aF9lbmFibGVkOiBvcHRpb25zLm90cEF1dGhFbmFibGVkLFxuICAgIHBhc3NrZXlfYXV0aF9lbmFibGVkOiBvcHRpb25zLnBhc3NrZXlBdXRoRW5hYmxlZFxuICB9O1xufVxuZnVuY3Rpb24gc2VydmVyVXNlclVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGRpc3BsYXlfbmFtZTogb3B0aW9ucy5kaXNwbGF5TmFtZSxcbiAgICBwcmltYXJ5X2VtYWlsOiBvcHRpb25zLnByaW1hcnlFbWFpbCxcbiAgICBjbGllbnRfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50TWV0YWRhdGEsXG4gICAgY2xpZW50X3JlYWRfb25seV9tZXRhZGF0YTogb3B0aW9ucy5jbGllbnRSZWFkT25seU1ldGFkYXRhLFxuICAgIHNlcnZlcl9tZXRhZGF0YTogb3B0aW9ucy5zZXJ2ZXJNZXRhZGF0YSxcbiAgICBzZWxlY3RlZF90ZWFtX2lkOiBvcHRpb25zLnNlbGVjdGVkVGVhbUlkLFxuICAgIHByaW1hcnlfZW1haWxfYXV0aF9lbmFibGVkOiBvcHRpb25zLnByaW1hcnlFbWFpbEF1dGhFbmFibGVkLFxuICAgIHByaW1hcnlfZW1haWxfdmVyaWZpZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsVmVyaWZpZWQsXG4gICAgcGFzc3dvcmQ6IG9wdGlvbnMucGFzc3dvcmQsXG4gICAgcHJvZmlsZV9pbWFnZV91cmw6IG9wdGlvbnMucHJvZmlsZUltYWdlVXJsLFxuICAgIHRvdHBfc2VjcmV0X2Jhc2U2NDogb3B0aW9ucy50b3RwTXVsdGlGYWN0b3JTZWNyZXQgIT0gbnVsbCA/IGVuY29kZUJhc2U2NChvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldCkgOiBvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldFxuICB9O1xufVxuZnVuY3Rpb24gc2VydmVyVXNlckNyZWF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIHByaW1hcnlfZW1haWw6IG9wdGlvbnMucHJpbWFyeUVtYWlsLFxuICAgIHBhc3N3b3JkOiBvcHRpb25zLnBhc3N3b3JkLFxuICAgIG90cF9hdXRoX2VuYWJsZWQ6IG9wdGlvbnMub3RwQXV0aEVuYWJsZWQsXG4gICAgcHJpbWFyeV9lbWFpbF9hdXRoX2VuYWJsZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsQXV0aEVuYWJsZWQsXG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByaW1hcnlfZW1haWxfdmVyaWZpZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsVmVyaWZpZWQsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhLFxuICAgIGNsaWVudF9yZWFkX29ubHlfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50UmVhZE9ubHlNZXRhZGF0YSxcbiAgICBzZXJ2ZXJfbWV0YWRhdGE6IG9wdGlvbnMuc2VydmVyTWV0YWRhdGFcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIHNlcnZlclVzZXJDcmVhdGVPcHRpb25zVG9DcnVkLFxuICBzZXJ2ZXJVc2VyVXBkYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgdXNlclVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackContext: () => (/* binding */ StackContext),\n/* harmony export */   StackProviderClient: () => (/* binding */ StackProviderClient),\n/* harmony export */   UserSetter: () => (/* binding */ UserSetter)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/globals */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! .. */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\");\n/* harmony import */ var _lib_stack_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/stack-app */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js\");\n/* harmony import */ var _lib_stack_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/stack-app */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ StackContext,StackProviderClient,UserSetter auto */ var _s = $RefreshSig$();\n// src/providers/stack-provider-client.tsx\n\n\n\n\n\nvar StackContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext(null);\nfunction StackProviderClient(props) {\n    const app = props.serialized ? _lib_stack_app__WEBPACK_IMPORTED_MODULE_3__.StackClientApp[_lib_stack_app__WEBPACK_IMPORTED_MODULE_4__.stackAppInternalsSymbol].fromClientJson(props.app) : props.app;\n    _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.__STACK_AUTH__ = {\n        app\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StackContext.Provider, {\n        value: {\n            app\n        },\n        children: props.children\n    });\n}\n_c = StackProviderClient;\nfunction UserSetter(props) {\n    _s();\n    const app = (0,___WEBPACK_IMPORTED_MODULE_5__.useStackApp)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserSetter.useEffect\": ()=>{\n            const promise = ({\n                \"UserSetter.useEffect.promise\": async ()=>await props.userJsonPromise\n            })[\"UserSetter.useEffect.promise\"]();\n            app[_lib_stack_app__WEBPACK_IMPORTED_MODULE_4__.stackAppInternalsSymbol].setCurrentUser(promise);\n        }\n    }[\"UserSetter.useEffect\"], []);\n    return null;\n}\n_s(UserSetter, \"SvtpiKrHtw9ISKE2MIQgyXUhtRU=\", false, function() {\n    return [\n        ___WEBPACK_IMPORTED_MODULE_5__.useStackApp\n    ];\n});\n_c1 = UserSetter;\n //# sourceMappingURL=stack-provider-client.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"StackProviderClient\");\n$RefreshReg$(_c1, \"UserSetter\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9wcm92aWRlcnMvc3RhY2stcHJvdmlkZXItY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBUUEsU0FBUyxpQkFBaUI7QUFDTztBQUNMO0FBQ2lCO0FBa0J6QztBQWREO0FBRUksU0FBUyxrRkFJYjtBQUNELFFBQU0scUJBQVksSUFDZDtJQUdKLFVBQVUsaUJBQWlCLEVBQUUsNERBQUk7SUFFakMsa0ZBQ0Usa0JBQUM7UUFBQTtJQUFBO0lBSUw7UUFBQTtZQUFBO1FBQUE7UUFBQTtJQUFBO0FBRU87S0FiQyxLQUFNLE1BQU07QUFjbEIsUUFBTSxZQUFNLE1BQVk7O0lBQ3hCLFVBQVU7SUFDUixnREFBTTtnQ0FBQTtZQUNOLElBQUk7Z0RBQUEsVUFBdUIsTUFBRSxTQUFlLE9BQU87O1lBQ3JELENBQUcsQ0FBQyxDQUFDO1FBQ0w7K0JBQUEsSUFBTztJQUNUOztHQU5ROztRQUNJLDBDQUFNOzs7TUFEVixLQUFNIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxzcmNcXHByb3ZpZGVyc1xcc3RhY2stcHJvdmlkZXItY2xpZW50LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFRISVMgRklMRSBJUyBBVVRPLUdFTkVSQVRFRCBGUk9NIFRFTVBMQVRFLiBETyBOT1QgRURJVCBJVCBESVJFQ1RMWVxuLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmltcG9ydCB7IEN1cnJlbnRVc2VyQ3J1ZCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9pbnRlcmZhY2UvY3J1ZC9jdXJyZW50LXVzZXJcIjtcbmltcG9ydCB7IGdsb2JhbFZhciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9nbG9iYWxzXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VTdGFja0FwcCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgU3RhY2tDbGllbnRBcHAsIFN0YWNrQ2xpZW50QXBwSnNvbiwgc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2wgfSBmcm9tIFwiLi4vbGliL3N0YWNrLWFwcFwiO1xuXG5leHBvcnQgY29uc3QgU3RhY2tDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxudWxsIHwge1xuICBhcHA6IFN0YWNrQ2xpZW50QXBwPHRydWU+LFxufT4obnVsbCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBTdGFja1Byb3ZpZGVyQ2xpZW50KHByb3BzOiB7XG4gIGFwcDogU3RhY2tDbGllbnRBcHBKc29uPHRydWUsIHN0cmluZz4gfCBTdGFja0NsaWVudEFwcDx0cnVlPixcbiAgc2VyaWFsaXplZDogYm9vbGVhbixcbiAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGUsXG59KSB7XG4gIGNvbnN0IGFwcCA9IHByb3BzLnNlcmlhbGl6ZWRcbiAgICA/IFN0YWNrQ2xpZW50QXBwW3N0YWNrQXBwSW50ZXJuYWxzU3ltYm9sXS5mcm9tQ2xpZW50SnNvbihwcm9wcy5hcHAgYXMgU3RhY2tDbGllbnRBcHBKc29uPHRydWUsIHN0cmluZz4pXG4gICAgOiBwcm9wcy5hcHAgYXMgU3RhY2tDbGllbnRBcHA8dHJ1ZT47XG5cbiAgZ2xvYmFsVmFyLl9fU1RBQ0tfQVVUSF9fID0geyBhcHAgfTtcblxuICByZXR1cm4gKFxuICAgIDxTdGFja0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgYXBwIH19PlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDwvU3RhY2tDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVXNlclNldHRlcihwcm9wczogeyB1c2VySnNvblByb21pc2U6IFByb21pc2U8Q3VycmVudFVzZXJDcnVkWydDbGllbnQnXVsnUmVhZCddIHwgbnVsbD4gfSkge1xuICBjb25zdCBhcHAgPSB1c2VTdGFja0FwcCgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHByb21pc2UgPSAoYXN5bmMgKCkgPT4gYXdhaXQgcHJvcHMudXNlckpzb25Qcm9taXNlKSgpOyAgLy8gdGhlcmUgaXMgYSBOZXh0LmpzIGJ1ZyB3aGVyZSBQcm9taXNlcyBwYXNzZWQgYnkgc2VydmVyIGNvbXBvbmVudHMgcmV0dXJuIGB1bmRlZmluZWRgIGFzIHRoZWlyIGB0aGVuYCB2YWx1ZSwgc28gd3JhcCBpdCBpbiBhIG5vcm1hbCBwcm9taXNlXG4gICAgYXBwW3N0YWNrQXBwSW50ZXJuYWxzU3ltYm9sXS5zZXRDdXJyZW50VXNlcihwcm9taXNlKTtcbiAgfSwgW10pO1xuICByZXR1cm4gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/utils/url.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructRedirectUrl: () => (/* binding */ constructRedirectUrl)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n// src/utils/url.ts\n\nfunction constructRedirectUrl(redirectUrl, callbackUrlName) {\n  if (typeof window === \"undefined\" || !window.location) {\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`${callbackUrlName} option is required in a non-browser environment.`, { redirectUrl });\n  }\n  const retainedQueryParams = [\"after_auth_return_to\"];\n  const currentUrl = new URL(window.location.href);\n  const url = redirectUrl ? new URL(redirectUrl, window.location.href) : new URL(window.location.href);\n  for (const param of retainedQueryParams) {\n    if (currentUrl.searchParams.has(param)) {\n      url.searchParams.set(param, currentUrl.searchParams.get(param));\n    }\n  }\n  url.hash = \"\";\n  return url.toString();\n}\n\n//# sourceMappingURL=url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS91dGlscy91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNpRjtBQUNqRjtBQUNBO0FBQ0EsY0FBYywyRkFBbUIsSUFBSSxpQkFBaUIscURBQXFELGFBQWE7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFx1dGlsc1xcdXJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy91cmwudHNcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZXJyb3JzXCI7XG5mdW5jdGlvbiBjb25zdHJ1Y3RSZWRpcmVjdFVybChyZWRpcmVjdFVybCwgY2FsbGJhY2tVcmxOYW1lKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiIHx8ICF3aW5kb3cubG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihgJHtjYWxsYmFja1VybE5hbWV9IG9wdGlvbiBpcyByZXF1aXJlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50LmAsIHsgcmVkaXJlY3RVcmwgfSk7XG4gIH1cbiAgY29uc3QgcmV0YWluZWRRdWVyeVBhcmFtcyA9IFtcImFmdGVyX2F1dGhfcmV0dXJuX3RvXCJdO1xuICBjb25zdCBjdXJyZW50VXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGNvbnN0IHVybCA9IHJlZGlyZWN0VXJsID8gbmV3IFVSTChyZWRpcmVjdFVybCwgd2luZG93LmxvY2F0aW9uLmhyZWYpIDogbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGZvciAoY29uc3QgcGFyYW0gb2YgcmV0YWluZWRRdWVyeVBhcmFtcykge1xuICAgIGlmIChjdXJyZW50VXJsLnNlYXJjaFBhcmFtcy5oYXMocGFyYW0pKSB7XG4gICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChwYXJhbSwgY3VycmVudFVybC5zZWFyY2hQYXJhbXMuZ2V0KHBhcmFtKSk7XG4gICAgfVxuICB9XG4gIHVybC5oYXNoID0gXCJcIjtcbiAgcmV0dXJuIHVybC50b1N0cmluZygpO1xufVxuZXhwb3J0IHtcbiAgY29uc3RydWN0UmVkaXJlY3RVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/async-mutex/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/async-mutex/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E_ALREADY_LOCKED: () => (/* binding */ E_ALREADY_LOCKED),\n/* harmony export */   E_CANCELED: () => (/* binding */ E_CANCELED),\n/* harmony export */   E_TIMEOUT: () => (/* binding */ E_TIMEOUT),\n/* harmony export */   Mutex: () => (/* binding */ Mutex),\n/* harmony export */   Semaphore: () => (/* binding */ Semaphore),\n/* harmony export */   tryAcquire: () => (/* binding */ tryAcquire),\n/* harmony export */   withTimeout: () => (/* binding */ withTimeout)\n/* harmony export */ });\nconst E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/async-mutex/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWE7QUFDYixpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7O0FBRS9CO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdCQUFnQjtBQUM3QyxrQkFBa0I7QUFDbEI7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcY29va2llXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGNvb2tpZVxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgX190b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggZmllbGQtY29udGVudCBpbiBSRkMgNzIzMCBzZWMgMy4yXG4gKlxuICogZmllbGQtY29udGVudCA9IGZpZWxkLXZjaGFyIFsgMSooIFNQIC8gSFRBQiApIGZpZWxkLXZjaGFyIF1cbiAqIGZpZWxkLXZjaGFyICAgPSBWQ0hBUiAvIG9icy10ZXh0XG4gKiBvYnMtdGV4dCAgICAgID0gJXg4MC1GRlxuICovXG5cbnZhciBmaWVsZENvbnRlbnRSZWdFeHAgPSAvXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztcblxuLyoqXG4gKiBQYXJzZSBhIGNvb2tpZSBoZWFkZXIuXG4gKlxuICogUGFyc2UgdGhlIGdpdmVuIGNvb2tpZSBoZWFkZXIgc3RyaW5nIGludG8gYW4gb2JqZWN0XG4gKiBUaGUgb2JqZWN0IGhhcyB0aGUgdmFyaW91cyBjb29raWVzIGFzIGtleXMobmFtZXMpID0+IHZhbHVlc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZShzdHIsIG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgc3RyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIHZhciBvYmogPSB7fVxuICB2YXIgb3B0ID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIGRlYyA9IG9wdC5kZWNvZGUgfHwgZGVjb2RlO1xuXG4gIHZhciBpbmRleCA9IDBcbiAgd2hpbGUgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHZhciBlcUlkeCA9IHN0ci5pbmRleE9mKCc9JywgaW5kZXgpXG5cbiAgICAvLyBubyBtb3JlIGNvb2tpZSBwYWlyc1xuICAgIGlmIChlcUlkeCA9PT0gLTEpIHtcbiAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdmFyIGVuZElkeCA9IHN0ci5pbmRleE9mKCc7JywgaW5kZXgpXG5cbiAgICBpZiAoZW5kSWR4ID09PSAtMSkge1xuICAgICAgZW5kSWR4ID0gc3RyLmxlbmd0aFxuICAgIH0gZWxzZSBpZiAoZW5kSWR4IDwgZXFJZHgpIHtcbiAgICAgIC8vIGJhY2t0cmFjayBvbiBwcmlvciBzZW1pY29sb25cbiAgICAgIGluZGV4ID0gc3RyLmxhc3RJbmRleE9mKCc7JywgZXFJZHggLSAxKSArIDFcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIGtleSA9IHN0ci5zbGljZShpbmRleCwgZXFJZHgpLnRyaW0oKVxuXG4gICAgLy8gb25seSBhc3NpZ24gb25jZVxuICAgIGlmICh1bmRlZmluZWQgPT09IG9ialtrZXldKSB7XG4gICAgICB2YXIgdmFsID0gc3RyLnNsaWNlKGVxSWR4ICsgMSwgZW5kSWR4KS50cmltKClcblxuICAgICAgLy8gcXVvdGVkIHZhbHVlc1xuICAgICAgaWYgKHZhbC5jaGFyQ29kZUF0KDApID09PSAweDIyKSB7XG4gICAgICAgIHZhbCA9IHZhbC5zbGljZSgxLCAtMSlcbiAgICAgIH1cblxuICAgICAgb2JqW2tleV0gPSB0cnlEZWNvZGUodmFsLCBkZWMpO1xuICAgIH1cblxuICAgIGluZGV4ID0gZW5kSWR4ICsgMVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBTZXJpYWxpemUgZGF0YSBpbnRvIGEgY29va2llIGhlYWRlci5cbiAqXG4gKiBTZXJpYWxpemUgdGhlIGEgbmFtZSB2YWx1ZSBwYWlyIGludG8gYSBjb29raWUgc3RyaW5nIHN1aXRhYmxlIGZvclxuICogaHR0cCBoZWFkZXJzLiBBbiBvcHRpb25hbCBvcHRpb25zIG9iamVjdCBzcGVjaWZpZWQgY29va2llIHBhcmFtZXRlcnMuXG4gKlxuICogc2VyaWFsaXplKCdmb28nLCAnYmFyJywgeyBodHRwT25seTogdHJ1ZSB9KVxuICogICA9PiBcImZvbz1iYXI7IGh0dHBPbmx5XCJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7c3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZShuYW1lLCB2YWwsIG9wdGlvbnMpIHtcbiAgdmFyIG9wdCA9IG9wdGlvbnMgfHwge307XG4gIHZhciBlbmMgPSBvcHQuZW5jb2RlIHx8IGVuY29kZTtcblxuICBpZiAodHlwZW9mIGVuYyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBlbmNvZGUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChuYW1lKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IG5hbWUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZW5jKHZhbCk7XG5cbiAgaWYgKHZhbHVlICYmICFmaWVsZENvbnRlbnRSZWdFeHAudGVzdCh2YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCB2YWwgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHN0ciA9IG5hbWUgKyAnPScgKyB2YWx1ZTtcblxuICBpZiAobnVsbCAhPSBvcHQubWF4QWdlKSB7XG4gICAgdmFyIG1heEFnZSA9IG9wdC5tYXhBZ2UgLSAwO1xuXG4gICAgaWYgKGlzTmFOKG1heEFnZSkgfHwgIWlzRmluaXRlKG1heEFnZSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZCcpXG4gICAgfVxuXG4gICAgc3RyICs9ICc7IE1heC1BZ2U9JyArIE1hdGguZmxvb3IobWF4QWdlKTtcbiAgfVxuXG4gIGlmIChvcHQuZG9tYWluKSB7XG4gICAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChvcHQuZG9tYWluKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIGRvbWFpbiBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IERvbWFpbj0nICsgb3B0LmRvbWFpbjtcbiAgfVxuXG4gIGlmIChvcHQucGF0aCkge1xuICAgIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3Qob3B0LnBhdGgpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gcGF0aCBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IFBhdGg9JyArIG9wdC5wYXRoO1xuICB9XG5cbiAgaWYgKG9wdC5leHBpcmVzKSB7XG4gICAgdmFyIGV4cGlyZXMgPSBvcHQuZXhwaXJlc1xuXG4gICAgaWYgKCFpc0RhdGUoZXhwaXJlcykgfHwgaXNOYU4oZXhwaXJlcy52YWx1ZU9mKCkpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IEV4cGlyZXM9JyArIGV4cGlyZXMudG9VVENTdHJpbmcoKVxuICB9XG5cbiAgaWYgKG9wdC5odHRwT25seSkge1xuICAgIHN0ciArPSAnOyBIdHRwT25seSc7XG4gIH1cblxuICBpZiAob3B0LnNlY3VyZSkge1xuICAgIHN0ciArPSAnOyBTZWN1cmUnO1xuICB9XG5cbiAgaWYgKG9wdC5wYXJ0aXRpb25lZCkge1xuICAgIHN0ciArPSAnOyBQYXJ0aXRpb25lZCdcbiAgfVxuXG4gIGlmIChvcHQucHJpb3JpdHkpIHtcbiAgICB2YXIgcHJpb3JpdHkgPSB0eXBlb2Ygb3B0LnByaW9yaXR5ID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQucHJpb3JpdHkudG9Mb3dlckNhc2UoKVxuICAgICAgOiBvcHQucHJpb3JpdHlcblxuICAgIHN3aXRjaCAocHJpb3JpdHkpIHtcbiAgICAgIGNhc2UgJ2xvdyc6XG4gICAgICAgIHN0ciArPSAnOyBQcmlvcml0eT1Mb3cnXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgICBzdHIgKz0gJzsgUHJpb3JpdHk9TWVkaXVtJ1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnaGlnaCc6XG4gICAgICAgIHN0ciArPSAnOyBQcmlvcml0eT1IaWdoJ1xuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHByaW9yaXR5IGlzIGludmFsaWQnKVxuICAgIH1cbiAgfVxuXG4gIGlmIChvcHQuc2FtZVNpdGUpIHtcbiAgICB2YXIgc2FtZVNpdGUgPSB0eXBlb2Ygb3B0LnNhbWVTaXRlID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQuc2FtZVNpdGUudG9Mb3dlckNhc2UoKSA6IG9wdC5zYW1lU2l0ZTtcblxuICAgIHN3aXRjaCAoc2FtZVNpdGUpIHtcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaWN0JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1Ob25lJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHI7XG59XG5cbi8qKlxuICogVVJMLWRlY29kZSBzdHJpbmcgdmFsdWUuIE9wdGltaXplZCB0byBza2lwIG5hdGl2ZSBjYWxsIHdoZW4gbm8gJS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGRlY29kZSAoc3RyKSB7XG4gIHJldHVybiBzdHIuaW5kZXhPZignJScpICE9PSAtMVxuICAgID8gZGVjb2RlVVJJQ29tcG9uZW50KHN0cilcbiAgICA6IHN0clxufVxuXG4vKipcbiAqIFVSTC1lbmNvZGUgdmFsdWUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBlbmNvZGUgKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbClcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdmFsdWUgaXMgYSBEYXRlLlxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGlzRGF0ZSAodmFsKSB7XG4gIHJldHVybiBfX3RvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nIHx8XG4gICAgdmFsIGluc3RhbmNlb2YgRGF0ZVxufVxuXG4vKipcbiAqIFRyeSBkZWNvZGluZyBhIHN0cmluZyB1c2luZyBhIGRlY29kaW5nIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRlY29kZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB0cnlEZWNvZGUoc3RyLCBkZWNvZGUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlKHN0cik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cookie/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/buffer_utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   concatKdf: () => (/* binding */ concatKdf),\n/* harmony export */   decoder: () => (/* binding */ decoder),\n/* harmony export */   encoder: () => (/* binding */ encoder),\n/* harmony export */   lengthAndInput: () => (/* binding */ lengthAndInput),\n/* harmony export */   p2s: () => (/* binding */ p2s),\n/* harmony export */   uint32be: () => (/* binding */ uint32be),\n/* harmony export */   uint64be: () => (/* binding */ uint64be)\n/* harmony export */ });\n/* harmony import */ var _runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/digest.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js\");\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0,_runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvYnVmZmVyX3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEwQztBQUNuQztBQUNBO0FBQ1A7QUFDTztBQUNQLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGNBQWMsYUFBYSxNQUFNO0FBQzNGO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBTTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxqb3NlXFxkaXN0XFxicm93c2VyXFxsaWJcXGJ1ZmZlcl91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGlnZXN0IGZyb20gJy4uL3J1bnRpbWUvZGlnZXN0LmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5leHBvcnQgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuY29uc3QgTUFYX0lOVDMyID0gMiAqKiAzMjtcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoLi4uYnVmZmVycykge1xuICAgIGNvbnN0IHNpemUgPSBidWZmZXJzLnJlZHVjZSgoYWNjLCB7IGxlbmd0aCB9KSA9PiBhY2MgKyBsZW5ndGgsIDApO1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIGJ1Zi5zZXQoYnVmZmVyLCBpKTtcbiAgICAgICAgaSArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHAycyhhbGcsIHAyc0lucHV0KSB7XG4gICAgcmV0dXJuIGNvbmNhdChlbmNvZGVyLmVuY29kZShhbGcpLCBuZXcgVWludDhBcnJheShbMF0pLCBwMnNJbnB1dCk7XG59XG5mdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGJ1ZiwgdmFsdWUsIG9mZnNldCkge1xuICAgIGlmICh2YWx1ZSA8IDAgfHwgdmFsdWUgPj0gTUFYX0lOVDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGB2YWx1ZSBtdXN0IGJlID49IDAgYW5kIDw9ICR7TUFYX0lOVDMyIC0gMX0uIFJlY2VpdmVkICR7dmFsdWV9YCk7XG4gICAgfVxuICAgIGJ1Zi5zZXQoW3ZhbHVlID4+PiAyNCwgdmFsdWUgPj4+IDE2LCB2YWx1ZSA+Pj4gOCwgdmFsdWUgJiAweGZmXSwgb2Zmc2V0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1aW50NjRiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGhpZ2ggPSBNYXRoLmZsb29yKHZhbHVlIC8gTUFYX0lOVDMyKTtcbiAgICBjb25zdCBsb3cgPSB2YWx1ZSAlIE1BWF9JTlQzMjtcbiAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg4KTtcbiAgICB3cml0ZVVJbnQzMkJFKGJ1ZiwgaGlnaCwgMCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGxvdywgNCk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1aW50MzJiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhBbmRJbnB1dChpbnB1dCkge1xuICAgIHJldHVybiBjb25jYXQodWludDMyYmUoaW5wdXQubGVuZ3RoKSwgaW5wdXQpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbmNhdEtkZihzZWNyZXQsIGJpdHMsIHZhbHVlKSB7XG4gICAgY29uc3QgaXRlcmF0aW9ucyA9IE1hdGguY2VpbCgoYml0cyA+PiAzKSAvIDMyKTtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShpdGVyYXRpb25zICogMzIpO1xuICAgIGZvciAobGV0IGl0ZXIgPSAwOyBpdGVyIDwgaXRlcmF0aW9uczsgaXRlcisrKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQgKyBzZWNyZXQubGVuZ3RoICsgdmFsdWUubGVuZ3RoKTtcbiAgICAgICAgYnVmLnNldCh1aW50MzJiZShpdGVyICsgMSkpO1xuICAgICAgICBidWYuc2V0KHNlY3JldCwgNCk7XG4gICAgICAgIGJ1Zi5zZXQodmFsdWUsIDQgKyBzZWNyZXQubGVuZ3RoKTtcbiAgICAgICAgcmVzLnNldChhd2FpdCBkaWdlc3QoJ3NoYTI1NicsIGJ1ZiksIGl0ZXIgKiAzMik7XG4gICAgfVxuICAgIHJldHVybiByZXMuc2xpY2UoMCwgYml0cyA+PiAzKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/is_object.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvaXNfb2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXGpvc2VcXGRpc3RcXGJyb3dzZXJcXGxpYlxcaXNfb2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICBpZiAoIWlzT2JqZWN0TGlrZShpbnB1dCkgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IHByb3RvID0gaW5wdXQ7XG4gICAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gcHJvdG87XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/base64url.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n\nconst encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nconst encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nconst decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nconst decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2Jhc2U2NHVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUNuRDtBQUNQO0FBQ0E7QUFDQSxvQkFBb0IseURBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQkFBa0IseURBQU87QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcYmFzZTY0dXJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZXIsIGRlY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGVCYXNlNjQgPSAoaW5wdXQpID0+IHtcbiAgICBsZXQgdW5lbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKHR5cGVvZiB1bmVuY29kZWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHVuZW5jb2RlZCA9IGVuY29kZXIuZW5jb2RlKHVuZW5jb2RlZCk7XG4gICAgfVxuICAgIGNvbnN0IENIVU5LX1NJWkUgPSAweDgwMDA7XG4gICAgY29uc3QgYXJyID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1bmVuY29kZWQubGVuZ3RoOyBpICs9IENIVU5LX1NJWkUpIHtcbiAgICAgICAgYXJyLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCB1bmVuY29kZWQuc3ViYXJyYXkoaSwgaSArIENIVU5LX1NJWkUpKSk7XG4gICAgfVxuICAgIHJldHVybiBidG9hKGFyci5qb2luKCcnKSk7XG59O1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIHJldHVybiBlbmNvZGVCYXNlNjQoaW5wdXQpLnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufTtcbmV4cG9ydCBjb25zdCBkZWNvZGVCYXNlNjQgPSAoZW5jb2RlZCkgPT4ge1xuICAgIGNvbnN0IGJpbmFyeSA9IGF0b2IoZW5jb2RlZCk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShiaW5hcnkubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJpbmFyeS5sZW5ndGg7IGkrKykge1xuICAgICAgICBieXRlc1tpXSA9IGJpbmFyeS5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIGxldCBlbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKGVuY29kZWQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGVuY29kZWQgPSBkZWNvZGVyLmRlY29kZShlbmNvZGVkKTtcbiAgICB9XG4gICAgZW5jb2RlZCA9IGVuY29kZWQucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKS5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVCYXNlNjQoZW5jb2RlZCk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGlucHV0IHRvIGJlIGRlY29kZWQgaXMgbm90IGNvcnJlY3RseSBlbmNvZGVkLicpO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/digest.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.digest(subtleDigest, data));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (digest);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUNwQztBQUNBLGdDQUFnQyxvQkFBb0I7QUFDcEQsZ0NBQWdDLHFEQUFNO0FBQ3RDO0FBQ0EsaUVBQWUsTUFBTSxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcZGlnZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnLi93ZWJjcnlwdG8uanMnO1xuY29uc3QgZGlnZXN0ID0gYXN5bmMgKGFsZ29yaXRobSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IHN1YnRsZURpZ2VzdCA9IGBTSEEtJHthbGdvcml0aG0uc2xpY2UoLTMpfWA7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KHN1YnRsZURpZ2VzdCwgZGF0YSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IGRpZ2VzdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/webcrypto.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isCryptoKey: () => (/* binding */ isCryptoKey)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (crypto);\nconst isCryptoKey = (key) => key instanceof CryptoKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3dlYmNyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlFQUFlLE1BQU0sRUFBQztBQUNmIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcd2ViY3J5cHRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNyeXB0bztcbmV4cG9ydCBjb25zdCBpc0NyeXB0b0tleSA9IChrZXkpID0+IGtleSBpbnN0YW5jZW9mIENyeXB0b0tleTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/base64url.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n\nconst encode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode;\nconst decode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2Jhc2U2NHVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDOUMsZUFBZSx5REFBZ0I7QUFDL0IsZUFBZSx5REFBZ0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxqb3NlXFxkaXN0XFxicm93c2VyXFx1dGlsXFxiYXNlNjR1cmwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmFzZTY0dXJsIGZyb20gJy4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSBiYXNlNjR1cmwuZW5jb2RlO1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGJhc2U2NHVybC5kZWNvZGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/decode_jwt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt)\n/* harmony export */ });\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64url.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/is_object.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\n\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = (0,_base64url_js__WEBPACK_IMPORTED_MODULE_1__.decode)(payload);\n    }\n    catch {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__.decoder.decode(decoded));\n    }\n    catch {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2RlY29kZV9qd3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUQ7QUFDSjtBQUNOO0FBQ0Y7QUFDbEM7QUFDUDtBQUNBLGtCQUFrQixrREFBVTtBQUM1QixZQUFZLHFCQUFxQjtBQUNqQztBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLHFEQUFTO0FBQzNCO0FBQ0E7QUFDQSxrQkFBa0Isa0RBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHlEQUFPO0FBQ25DO0FBQ0E7QUFDQSxrQkFBa0Isa0RBQVU7QUFDNUI7QUFDQSxTQUFTLDZEQUFRO0FBQ2pCLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxcdXRpbFxcZGVjb2RlX2p3dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgZGVjb2RlciB9IGZyb20gJy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuaW1wb3J0IHsgSldUSW52YWxpZCB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVKd3Qoand0KSB7XG4gICAgaWYgKHR5cGVvZiBqd3QgIT09ICdzdHJpbmcnKVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnSldUcyBtdXN0IHVzZSBDb21wYWN0IEpXUyBzZXJpYWxpemF0aW9uLCBKV1QgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIGNvbnN0IHsgMTogcGF5bG9hZCwgbGVuZ3RoIH0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoID09PSA1KVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnT25seSBKV1RzIHVzaW5nIENvbXBhY3QgSldTIHNlcmlhbGl6YXRpb24gY2FuIGJlIGRlY29kZWQnKTtcbiAgICBpZiAobGVuZ3RoICE9PSAzKVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnSW52YWxpZCBKV1QnKTtcbiAgICBpZiAoIXBheWxvYWQpXG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdKV1RzIG11c3QgY29udGFpbiBhIHBheWxvYWQnKTtcbiAgICBsZXQgZGVjb2RlZDtcbiAgICB0cnkge1xuICAgICAgICBkZWNvZGVkID0gYmFzZTY0dXJsKHBheWxvYWQpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdGYWlsZWQgdG8gYmFzZTY0dXJsIGRlY29kZSB0aGUgcGF5bG9hZCcpO1xuICAgIH1cbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoZGVjb2Rlci5kZWNvZGUoZGVjb2RlZCkpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGRlY29kZWQgcGF5bG9hZCBhcyBKU09OJyk7XG4gICAgfVxuICAgIGlmICghaXNPYmplY3QocmVzdWx0KSlcbiAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0ludmFsaWQgSldUIENsYWltcyBTZXQnKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JOSEAlgNotAllowed: () => (/* binding */ JOSEAlgNotAllowed),\n/* harmony export */   JOSEError: () => (/* binding */ JOSEError),\n/* harmony export */   JOSENotSupported: () => (/* binding */ JOSENotSupported),\n/* harmony export */   JWEDecryptionFailed: () => (/* binding */ JWEDecryptionFailed),\n/* harmony export */   JWEInvalid: () => (/* binding */ JWEInvalid),\n/* harmony export */   JWKInvalid: () => (/* binding */ JWKInvalid),\n/* harmony export */   JWKSInvalid: () => (/* binding */ JWKSInvalid),\n/* harmony export */   JWKSMultipleMatchingKeys: () => (/* binding */ JWKSMultipleMatchingKeys),\n/* harmony export */   JWKSNoMatchingKey: () => (/* binding */ JWKSNoMatchingKey),\n/* harmony export */   JWKSTimeout: () => (/* binding */ JWKSTimeout),\n/* harmony export */   JWSInvalid: () => (/* binding */ JWSInvalid),\n/* harmony export */   JWSSignatureVerificationFailed: () => (/* binding */ JWSSignatureVerificationFailed),\n/* harmony export */   JWTClaimValidationFailed: () => (/* binding */ JWTClaimValidationFailed),\n/* harmony export */   JWTExpired: () => (/* binding */ JWTExpired),\n/* harmony export */   JWTInvalid: () => (/* binding */ JWTInvalid)\n/* harmony export */ });\nclass JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nclass JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nclass JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nclass JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nclass JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nclass JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nclass JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nclass JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nclass JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nclass JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nclass JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EseUJBQXlCLFNBQVMsMEJBQTBCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHlCQUF5QixTQUFTLDBCQUEwQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxcdXRpbFxcZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBKT1NFRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KT1NFX0dFTkVSSUMnO1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlPy4odGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gICAgfVxufVxuSk9TRUVycm9yLmNvZGUgPSAnRVJSX0pPU0VfR0VORVJJQyc7XG5leHBvcnQgY2xhc3MgSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBwYXlsb2FkLCBjbGFpbSA9ICd1bnNwZWNpZmllZCcsIHJlYXNvbiA9ICd1bnNwZWNpZmllZCcpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgeyBjYXVzZTogeyBjbGFpbSwgcmVhc29uLCBwYXlsb2FkIH0gfSk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldUX0NMQUlNX1ZBTElEQVRJT05fRkFJTEVEJztcbiAgICAgICAgdGhpcy5jbGFpbSA9IGNsYWltO1xuICAgICAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG59XG5KV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQuY29kZSA9ICdFUlJfSldUX0NMQUlNX1ZBTElEQVRJT05fRkFJTEVEJztcbmV4cG9ydCBjbGFzcyBKV1RFeHBpcmVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBwYXlsb2FkLCBjbGFpbSA9ICd1bnNwZWNpZmllZCcsIHJlYXNvbiA9ICd1bnNwZWNpZmllZCcpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgeyBjYXVzZTogeyBjbGFpbSwgcmVhc29uLCBwYXlsb2FkIH0gfSk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldUX0VYUElSRUQnO1xuICAgICAgICB0aGlzLmNsYWltID0gY2xhaW07XG4gICAgICAgIHRoaXMucmVhc29uID0gcmVhc29uO1xuICAgICAgICB0aGlzLnBheWxvYWQgPSBwYXlsb2FkO1xuICAgIH1cbn1cbkpXVEV4cGlyZWQuY29kZSA9ICdFUlJfSldUX0VYUElSRUQnO1xuZXhwb3J0IGNsYXNzIEpPU0VBbGdOb3RBbGxvd2VkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KT1NFX0FMR19OT1RfQUxMT1dFRCc7XG4gICAgfVxufVxuSk9TRUFsZ05vdEFsbG93ZWQuY29kZSA9ICdFUlJfSk9TRV9BTEdfTk9UX0FMTE9XRUQnO1xuZXhwb3J0IGNsYXNzIEpPU0VOb3RTdXBwb3J0ZWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pPU0VfTk9UX1NVUFBPUlRFRCc7XG4gICAgfVxufVxuSk9TRU5vdFN1cHBvcnRlZC5jb2RlID0gJ0VSUl9KT1NFX05PVF9TVVBQT1JURUQnO1xuZXhwb3J0IGNsYXNzIEpXRURlY3J5cHRpb25GYWlsZWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnZGVjcnlwdGlvbiBvcGVyYXRpb24gZmFpbGVkJywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0VfREVDUllQVElPTl9GQUlMRUQnO1xuICAgIH1cbn1cbkpXRURlY3J5cHRpb25GYWlsZWQuY29kZSA9ICdFUlJfSldFX0RFQ1JZUFRJT05fRkFJTEVEJztcbmV4cG9ydCBjbGFzcyBKV0VJbnZhbGlkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0VfSU5WQUxJRCc7XG4gICAgfVxufVxuSldFSW52YWxpZC5jb2RlID0gJ0VSUl9KV0VfSU5WQUxJRCc7XG5leHBvcnQgY2xhc3MgSldTSW52YWxpZCBleHRlbmRzIEpPU0VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldTX0lOVkFMSUQnO1xuICAgIH1cbn1cbkpXU0ludmFsaWQuY29kZSA9ICdFUlJfSldTX0lOVkFMSUQnO1xuZXhwb3J0IGNsYXNzIEpXVEludmFsaWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pXVF9JTlZBTElEJztcbiAgICB9XG59XG5KV1RJbnZhbGlkLmNvZGUgPSAnRVJSX0pXVF9JTlZBTElEJztcbmV4cG9ydCBjbGFzcyBKV0tJbnZhbGlkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0tfSU5WQUxJRCc7XG4gICAgfVxufVxuSldLSW52YWxpZC5jb2RlID0gJ0VSUl9KV0tfSU5WQUxJRCc7XG5leHBvcnQgY2xhc3MgSldLU0ludmFsaWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pXS1NfSU5WQUxJRCc7XG4gICAgfVxufVxuSldLU0ludmFsaWQuY29kZSA9ICdFUlJfSldLU19JTlZBTElEJztcbmV4cG9ydCBjbGFzcyBKV0tTTm9NYXRjaGluZ0tleSBleHRlbmRzIEpPU0VFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSA9ICdubyBhcHBsaWNhYmxlIGtleSBmb3VuZCBpbiB0aGUgSlNPTiBXZWIgS2V5IFNldCcsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldLU19OT19NQVRDSElOR19LRVknO1xuICAgIH1cbn1cbkpXS1NOb01hdGNoaW5nS2V5LmNvZGUgPSAnRVJSX0pXS1NfTk9fTUFUQ0hJTkdfS0VZJztcbmV4cG9ydCBjbGFzcyBKV0tTTXVsdGlwbGVNYXRjaGluZ0tleXMgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnbXVsdGlwbGUgbWF0Y2hpbmcga2V5cyBmb3VuZCBpbiB0aGUgSlNPTiBXZWIgS2V5IFNldCcsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldLU19NVUxUSVBMRV9NQVRDSElOR19LRVlTJztcbiAgICB9XG59XG5TeW1ib2wuYXN5bmNJdGVyYXRvcjtcbkpXS1NNdWx0aXBsZU1hdGNoaW5nS2V5cy5jb2RlID0gJ0VSUl9KV0tTX01VTFRJUExFX01BVENISU5HX0tFWVMnO1xuZXhwb3J0IGNsYXNzIEpXS1NUaW1lb3V0IGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ3JlcXVlc3QgdGltZWQgb3V0Jywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0tTX1RJTUVPVVQnO1xuICAgIH1cbn1cbkpXS1NUaW1lb3V0LmNvZGUgPSAnRVJSX0pXS1NfVElNRU9VVCc7XG5leHBvcnQgY2xhc3MgSldTU2lnbmF0dXJlVmVyaWZpY2F0aW9uRmFpbGVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ3NpZ25hdHVyZSB2ZXJpZmljYXRpb24gZmFpbGVkJywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV1NfU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9GQUlMRUQnO1xuICAgIH1cbn1cbkpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZC5jb2RlID0gJ0VSUl9KV1NfU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9GQUlMRUQnO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs":
/*!***************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qcy1jb29raWUvZGlzdC9qcy5jb29raWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEVBQUU7QUFDdEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSx1RUFBdUU7QUFDdkU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSw2Q0FBNkM7QUFDN0MsT0FBTztBQUNQO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHlDQUF5QztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxXQUFXO0FBQzlDOztBQUUwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXGpzLWNvb2tpZVxcZGlzdFxcanMuY29va2llLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEganMtY29va2llIHYzLjAuNSB8IE1JVCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG5mdW5jdGlvbiBhc3NpZ24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldFxufVxuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG52YXIgZGVmYXVsdENvbnZlcnRlciA9IHtcbiAgcmVhZDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlWzBdID09PSAnXCInKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoLyglW1xcZEEtRl17Mn0pKy9naSwgZGVjb2RlVVJJQ29tcG9uZW50KVxuICB9LFxuICB3cml0ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkucmVwbGFjZShcbiAgICAgIC8lKDJbMzQ2QkZdfDNbQUMtRl18NDB8NVtCREVdfDYwfDdbQkNEXSkvZyxcbiAgICAgIGRlY29kZVVSSUNvbXBvbmVudFxuICAgIClcbiAgfVxufTtcbi8qIGVzbGludC1lbmFibGUgbm8tdmFyICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xuXG5mdW5jdGlvbiBpbml0IChjb252ZXJ0ZXIsIGRlZmF1bHRBdHRyaWJ1dGVzKSB7XG4gIGZ1bmN0aW9uIHNldCAobmFtZSwgdmFsdWUsIGF0dHJpYnV0ZXMpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgYXR0cmlidXRlcyA9IGFzc2lnbih7fSwgZGVmYXVsdEF0dHJpYnV0ZXMsIGF0dHJpYnV0ZXMpO1xuXG4gICAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLmV4cGlyZXMgPT09ICdudW1iZXInKSB7XG4gICAgICBhdHRyaWJ1dGVzLmV4cGlyZXMgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgYXR0cmlidXRlcy5leHBpcmVzICogODY0ZTUpO1xuICAgIH1cbiAgICBpZiAoYXR0cmlidXRlcy5leHBpcmVzKSB7XG4gICAgICBhdHRyaWJ1dGVzLmV4cGlyZXMgPSBhdHRyaWJ1dGVzLmV4cGlyZXMudG9VVENTdHJpbmcoKTtcbiAgICB9XG5cbiAgICBuYW1lID0gZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpXG4gICAgICAucmVwbGFjZSgvJSgyWzM0NkJdfDVFfDYwfDdDKS9nLCBkZWNvZGVVUklDb21wb25lbnQpXG4gICAgICAucmVwbGFjZSgvWygpXS9nLCBlc2NhcGUpO1xuXG4gICAgdmFyIHN0cmluZ2lmaWVkQXR0cmlidXRlcyA9ICcnO1xuICAgIGZvciAodmFyIGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgICAgaWYgKCFhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnOyAnICsgYXR0cmlidXRlTmFtZTtcblxuICAgICAgaWYgKGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPT09IHRydWUpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gQ29uc2lkZXJzIFJGQyA2MjY1IHNlY3Rpb24gNS4yOlxuICAgICAgLy8gLi4uXG4gICAgICAvLyAzLiAgSWYgdGhlIHJlbWFpbmluZyB1bnBhcnNlZC1hdHRyaWJ1dGVzIGNvbnRhaW5zIGEgJXgzQiAoXCI7XCIpXG4gICAgICAvLyAgICAgY2hhcmFjdGVyOlxuICAgICAgLy8gQ29uc3VtZSB0aGUgY2hhcmFjdGVycyBvZiB0aGUgdW5wYXJzZWQtYXR0cmlidXRlcyB1cCB0byxcbiAgICAgIC8vIG5vdCBpbmNsdWRpbmcsIHRoZSBmaXJzdCAleDNCIChcIjtcIikgY2hhcmFjdGVyLlxuICAgICAgLy8gLi4uXG4gICAgICBzdHJpbmdpZmllZEF0dHJpYnV0ZXMgKz0gJz0nICsgYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXS5zcGxpdCgnOycpWzBdO1xuICAgIH1cblxuICAgIHJldHVybiAoZG9jdW1lbnQuY29va2llID1cbiAgICAgIG5hbWUgKyAnPScgKyBjb252ZXJ0ZXIud3JpdGUodmFsdWUsIG5hbWUpICsgc3RyaW5naWZpZWRBdHRyaWJ1dGVzKVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0IChuYW1lKSB7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcgfHwgKGFyZ3VtZW50cy5sZW5ndGggJiYgIW5hbWUpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBUbyBwcmV2ZW50IHRoZSBmb3IgbG9vcCBpbiB0aGUgZmlyc3QgcGxhY2UgYXNzaWduIGFuIGVtcHR5IGFycmF5XG4gICAgLy8gaW4gY2FzZSB0aGVyZSBhcmUgbm8gY29va2llcyBhdCBhbGwuXG4gICAgdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUgPyBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJykgOiBbXTtcbiAgICB2YXIgamFyID0ge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29raWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7XG4gICAgICB2YXIgdmFsdWUgPSBwYXJ0cy5zbGljZSgxKS5qb2luKCc9Jyk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBmb3VuZCA9IGRlY29kZVVSSUNvbXBvbmVudChwYXJ0c1swXSk7XG4gICAgICAgIGphcltmb3VuZF0gPSBjb252ZXJ0ZXIucmVhZCh2YWx1ZSwgZm91bmQpO1xuXG4gICAgICAgIGlmIChuYW1lID09PSBmb3VuZCkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hbWUgPyBqYXJbbmFtZV0gOiBqYXJcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuY3JlYXRlKFxuICAgIHtcbiAgICAgIHNldCxcbiAgICAgIGdldCxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gKG5hbWUsIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgc2V0KFxuICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgJycsXG4gICAgICAgICAgYXNzaWduKHt9LCBhdHRyaWJ1dGVzLCB7XG4gICAgICAgICAgICBleHBpcmVzOiAtMVxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICB9LFxuICAgICAgd2l0aEF0dHJpYnV0ZXM6IGZ1bmN0aW9uIChhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHJldHVybiBpbml0KHRoaXMuY29udmVydGVyLCBhc3NpZ24oe30sIHRoaXMuYXR0cmlidXRlcywgYXR0cmlidXRlcykpXG4gICAgICB9LFxuICAgICAgd2l0aENvbnZlcnRlcjogZnVuY3Rpb24gKGNvbnZlcnRlcikge1xuICAgICAgICByZXR1cm4gaW5pdChhc3NpZ24oe30sIHRoaXMuY29udmVydGVyLCBjb252ZXJ0ZXIpLCB0aGlzLmF0dHJpYnV0ZXMpXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBhdHRyaWJ1dGVzOiB7IHZhbHVlOiBPYmplY3QuZnJlZXplKGRlZmF1bHRBdHRyaWJ1dGVzKSB9LFxuICAgICAgY29udmVydGVyOiB7IHZhbHVlOiBPYmplY3QuZnJlZXplKGNvbnZlcnRlcikgfVxuICAgIH1cbiAgKVxufVxuXG52YXIgYXBpID0gaW5pdChkZWZhdWx0Q29udmVydGVyLCB7IHBhdGg6ICcvJyB9KTtcbi8qIGVzbGludC1lbmFibGUgbm8tdmFyICovXG5cbmV4cG9ydCB7IGFwaSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/headers.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/api/headers.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __esModule: () => (/* reexport safe */ _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__.__esModule),\n/* harmony export */   cookies: () => (/* reexport safe */ _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__.cookies),\n/* harmony export */   draftMode: () => (/* reexport safe */ _server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__.draftMode),\n/* harmony export */   headers: () => (/* reexport safe */ _server_request_headers__WEBPACK_IMPORTED_MODULE_1__.headers)\n/* harmony export */ });\n/* harmony import */ var _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/request/cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js\");\n/* harmony import */ var _server_request_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/request/headers */ \"(app-pages-browser)/./node_modules/next/dist/server/request/headers.js\");\n/* harmony import */ var _server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/request/draft-mode */ \"(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js\");\n\n\n\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwQztBQUNBO0FBQ0c7O0FBRTdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcYXBpXFxoZWFkZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4uL3NlcnZlci9yZXF1ZXN0L2Nvb2tpZXMnO1xuZXhwb3J0ICogZnJvbSAnLi4vc2VydmVyL3JlcXVlc3QvaGVhZGVycyc7XG5leHBvcnQgKiBmcm9tICcuLi9zZXJ2ZXIvcmVxdWVzdC9kcmFmdC1tb2RlJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGFwaVxcbmF2aWdhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuLi9jbGllbnQvY29tcG9uZW50cy9uYXZpZ2F0aW9uJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Capgau%5C%5COneDrive%5C%5CDesktop%5C%5Ceducation-website%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Capgau%5C%5COneDrive%5C%5CDesktop%5C%5Ceducation-website%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(app-pages-browser)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDYXBnYXUlNUMlNUNPbmVEcml2ZSU1QyU1Q0Rlc2t0b3AlNUMlNUNlZHVjYXRpb24td2Vic2l0ZSU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsOEpBQStHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcGdhdVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGVkdWNhdGlvbi13ZWJzaXRlXFxcXHNyY1xcXFxhcHBcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Capgau%5C%5COneDrive%5C%5CDesktop%5C%5Ceducation-website%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/app-dir/link.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    /**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */ default: function() {\n        return LinkComponent;\n    },\n    useLinkStatus: function() {\n        return useLinkStatus;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/next/node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _formaturl = __webpack_require__(/*! ../../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js\");\nconst _routerreducertypes = __webpack_require__(/*! ../components/router-reducer/router-reducer-types */ \"(app-pages-browser)/./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst _usemergedref = __webpack_require__(/*! ../use-merged-ref */ \"(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\");\nconst _utils = __webpack_require__(/*! ../../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _addbasepath = __webpack_require__(/*! ../add-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/add-base-path.js\");\nconst _warnonce = __webpack_require__(/*! ../../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _links = __webpack_require__(/*! ../components/links */ \"(app-pages-browser)/./node_modules/next/dist/client/components/links.js\");\nconst _islocalurl = __webpack_require__(/*! ../../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _approuterinstance = __webpack_require__(/*! ../components/app-router-instance */ \"(app-pages-browser)/./node_modules/next/dist/client/components/app-router-instance.js\");\nconst _erroronce = __webpack_require__(/*! ../../shared/lib/utils/error-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\");\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    if (!(0, _islocalurl.isLocalURL)(href)) {\n        if (replace) {\n            // browser default behavior does not replace the history state\n            // so we need to do it manually\n            e.preventDefault();\n            location.replace(href);\n        }\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        if (onNavigate) {\n            let isDefaultPrevented = false;\n            onNavigate({\n                preventDefault: ()=>{\n                    isDefaultPrevented = true;\n                }\n            });\n            if (isDefaultPrevented) {\n                return;\n            }\n        }\n        (0, _approuterinstance.dispatchNavigateAction)(as || href, replace ? 'replace' : 'push', scroll != null ? scroll : true, linkInstanceRef.current);\n    };\n    _react.default.startTransition(navigate);\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === 'string') {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\nfunction LinkComponent(props) {\n    _s();\n    const [linkStatus, setOptimisticLinkStatus] = (0, _react.useOptimistic)(_links.IDLE_LINK_STATUS);\n    let children;\n    const linkInstanceRef = (0, _react.useRef)(null);\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, onNavigate, ref: forwardedRef, unstable_dynamicOnHover, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const router = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    if (true) {\n        function createPropError(args) {\n            return Object.defineProperty(new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                value: \"E319\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            unstable_dynamicOnHover: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true,\n            onNavigate: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {\n                if (props[key] && valType !== 'function') {\n                    throw createPropError({\n                        key,\n                        expected: '`function`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior' || key === 'unstable_dynamicOnHover') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n    }\n    if (true) {\n        if (props.locale) {\n            (0, _warnonce.warnOnce)('The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization');\n        }\n        if (!asProp) {\n            let href;\n            if (typeof hrefProp === 'string') {\n                href = hrefProp;\n            } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split('/').some((segment)=>segment.startsWith('[') && segment.endsWith(']'));\n                if (hasDynamicSegment) {\n                    throw Object.defineProperty(new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E267\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n        }\n    }\n    const { href, as } = _react.default.useMemo({\n        \"LinkComponent.useMemo\": ()=>{\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n    }[\"LinkComponent.useMemo\"], [\n        hrefProp,\n        asProp\n    ]);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw Object.defineProperty(new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E320\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                throw Object.defineProperty(new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                    value: \"E266\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === 'a') {\n                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E209\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n    // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n    // mount. In the future we will also use this to keep track of all the\n    // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n    // a revalidation or refresh.\n    const observeLinkVisibilityOnMount = _react.default.useCallback({\n        \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": (element)=>{\n            if (router !== null) {\n                linkInstanceRef.current = (0, _links.mountLinkInstance)(element, href, router, appPrefetchKind, prefetchEnabled, setOptimisticLinkStatus);\n            }\n            return ({\n                \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": ()=>{\n                    if (linkInstanceRef.current) {\n                        (0, _links.unmountLinkForCurrentNavigation)(linkInstanceRef.current);\n                        linkInstanceRef.current = null;\n                    }\n                    (0, _links.unmountPrefetchableInstance)(element);\n                }\n            })[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"];\n        }\n    }[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"], [\n        prefetchEnabled,\n        href,\n        router,\n        appPrefetchKind,\n        setOptimisticLinkStatus\n    ]);\n    const mergedRef = (0, _usemergedref.useMergedRef)(observeLinkVisibilityOnMount, childRef);\n    const childProps = {\n        ref: mergedRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E312\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n            if (!legacyBehavior && typeof onClick === 'function') {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled || \"development\" === 'development') {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        },\n        onTouchStart:  false ? 0 : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled) {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the basePath.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n        childProps.href = (0, _addbasepath.addBasePath)(as);\n    }\n    let link;\n    if (legacyBehavior) {\n        if (true) {\n            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\\n\\n' + 'npx @next/codemod@latest new-link .\\n\\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');\n        }\n        link = /*#__PURE__*/ _react.default.cloneElement(child, childProps);\n    } else {\n        link = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            ...restProps,\n            ...childProps,\n            children: children\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(LinkStatusContext.Provider, {\n        value: linkStatus,\n        children: link\n    });\n}\n_s(LinkComponent, \"MNV6IdWv8Lu3MKc7Fm4v59uGRY0=\");\n_c = LinkComponent;\nconst LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)(_links.IDLE_LINK_STATUS);\nconst useLinkStatus = ()=>{\n    return (0, _react.useContext)(LinkStatusContext);\n};\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c;\n$RefreshReg$(_c, \"LinkComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/hooks-server-context.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DynamicServerError: function() {\n        return DynamicServerError;\n    },\n    isDynamicServerError: function() {\n        return isDynamicServerError;\n    }\n});\nconst DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE';\nclass DynamicServerError extends Error {\n    constructor(description){\n        super(\"Dynamic server usage: \" + description), this.description = description, this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nfunction isDynamicServerError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err) || typeof err.digest !== 'string') {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=hooks-server-context.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBRWFBLGtCQUFrQjtlQUFsQkE7O0lBUUdDLG9CQUFvQjtlQUFwQkE7OztBQVZoQixNQUFNQyxxQkFBcUI7QUFFcEIsTUFBTUYsMkJBQTJCRztJQUd0Q0MsWUFBNEJDLFdBQW1CLENBQUU7UUFDL0MsS0FBSyxDQUFFLDJCQUF3QkEsY0FBQUEsSUFBQUEsQ0FETEEsV0FBQUEsR0FBQUEsYUFBQUEsSUFBQUEsQ0FGNUJDLE1BQUFBLEdBQW9DSjtJQUlwQztBQUNGO0FBRU8sU0FBU0QscUJBQXFCTSxHQUFZO0lBQy9DLElBQ0UsT0FBT0EsUUFBUSxZQUNmQSxRQUFRLFFBQ1IsQ0FBRSxhQUFZQSxHQUFBQSxDQUFFLElBQ2hCLE9BQU9BLElBQUlELE1BQU0sS0FBSyxVQUN0QjtRQUNBLE9BQU87SUFDVDtJQUVBLE9BQU9DLElBQUlELE1BQU0sS0FBS0o7QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXHNyY1xcY2xpZW50XFxjb21wb25lbnRzXFxob29rcy1zZXJ2ZXItY29udGV4dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEWU5BTUlDX0VSUk9SX0NPREUgPSAnRFlOQU1JQ19TRVJWRVJfVVNBR0UnXG5cbmV4cG9ydCBjbGFzcyBEeW5hbWljU2VydmVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGRpZ2VzdDogdHlwZW9mIERZTkFNSUNfRVJST1JfQ09ERSA9IERZTkFNSUNfRVJST1JfQ09ERVxuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBkZXNjcmlwdGlvbjogc3RyaW5nKSB7XG4gICAgc3VwZXIoYER5bmFtaWMgc2VydmVyIHVzYWdlOiAke2Rlc2NyaXB0aW9ufWApXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRHluYW1pY1NlcnZlckVycm9yKGVycjogdW5rbm93bik6IGVyciBpcyBEeW5hbWljU2VydmVyRXJyb3Ige1xuICBpZiAoXG4gICAgdHlwZW9mIGVyciAhPT0gJ29iamVjdCcgfHxcbiAgICBlcnIgPT09IG51bGwgfHxcbiAgICAhKCdkaWdlc3QnIGluIGVycikgfHxcbiAgICB0eXBlb2YgZXJyLmRpZ2VzdCAhPT0gJ3N0cmluZydcbiAgKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXJyLmRpZ2VzdCA9PT0gRFlOQU1JQ19FUlJPUl9DT0RFXG59XG4iXSwibmFtZXMiOlsiRHluYW1pY1NlcnZlckVycm9yIiwiaXNEeW5hbWljU2VydmVyRXJyb3IiLCJEWU5BTUlDX0VSUk9SX0NPREUiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiZGVzY3JpcHRpb24iLCJkaWdlc3QiLCJlcnIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-bailout.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    StaticGenBailoutError: function() {\n        return StaticGenBailoutError;\n    },\n    isStaticGenBailoutError: function() {\n        return isStaticGenBailoutError;\n    }\n});\nconst NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT';\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args), this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nfunction isStaticGenBailoutError(error) {\n    if (typeof error !== 'object' || error === null || !('code' in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-bailout.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFFYUEscUJBQXFCO2VBQXJCQTs7SUFJR0MsdUJBQXVCO2VBQXZCQTs7O0FBTmhCLE1BQU1DLDBCQUEwQjtBQUV6QixNQUFNRiw4QkFBOEJHOztRQUFwQyxxQkFDV0MsSUFBQUEsR0FBT0Y7O0FBQ3pCO0FBRU8sU0FBU0Qsd0JBQ2RJLEtBQWM7SUFFZCxJQUFJLE9BQU9BLFVBQVUsWUFBWUEsVUFBVSxRQUFRLENBQUUsV0FBVUEsS0FBQUEsQ0FBSSxFQUFJO1FBQ3JFLE9BQU87SUFDVDtJQUVBLE9BQU9BLE1BQU1ELElBQUksS0FBS0Y7QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXHNyY1xcY2xpZW50XFxjb21wb25lbnRzXFxzdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE5FWFRfU1RBVElDX0dFTl9CQUlMT1VUID0gJ05FWFRfU1RBVElDX0dFTl9CQUlMT1VUJ1xuXG5leHBvcnQgY2xhc3MgU3RhdGljR2VuQmFpbG91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwdWJsaWMgcmVhZG9ubHkgY29kZSA9IE5FWFRfU1RBVElDX0dFTl9CQUlMT1VUXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N0YXRpY0dlbkJhaWxvdXRFcnJvcihcbiAgZXJyb3I6IHVua25vd25cbik6IGVycm9yIGlzIFN0YXRpY0dlbkJhaWxvdXRFcnJvciB7XG4gIGlmICh0eXBlb2YgZXJyb3IgIT09ICdvYmplY3QnIHx8IGVycm9yID09PSBudWxsIHx8ICEoJ2NvZGUnIGluIGVycm9yKSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgcmV0dXJuIGVycm9yLmNvZGUgPT09IE5FWFRfU1RBVElDX0dFTl9CQUlMT1VUXG59XG4iXSwibmFtZXMiOlsiU3RhdGljR2VuQmFpbG91dEVycm9yIiwiaXNTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJORVhUX1NUQVRJQ19HRU5fQkFJTE9VVCIsIkVycm9yIiwiY29kZSIsImVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/client/use-merged-ref.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useMergedRef\", ({\n    enumerable: true,\n    get: function() {\n        return useMergedRef;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nfunction useMergedRef(refA, refB) {\n    const cleanupA = (0, _react.useRef)(null);\n    const cleanupB = (0, _react.useRef)(null);\n    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n    // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n    // (because it hasn't been updated for React 19)\n    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n    return (0, _react.useCallback)((current)=>{\n        if (current === null) {\n            const cleanupFnA = cleanupA.current;\n            if (cleanupFnA) {\n                cleanupA.current = null;\n                cleanupFnA();\n            }\n            const cleanupFnB = cleanupB.current;\n            if (cleanupFnB) {\n                cleanupB.current = null;\n                cleanupFnB();\n            }\n        } else {\n            if (refA) {\n                cleanupA.current = applyRef(refA, current);\n            }\n            if (refB) {\n                cleanupB.current = applyRef(refB, current);\n            }\n        }\n    }, [\n        refA,\n        refB\n    ]);\n}\nfunction applyRef(refA, current) {\n    if (typeof refA === 'function') {\n        const cleanup = refA(current);\n        if (typeof cleanup === 'function') {\n            return cleanup;\n        } else {\n            return ()=>refA(null);\n        }\n    } else {\n        refA.current = current;\n        return ()=>{\n            refA.current = null;\n        };\n    }\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-merged-ref.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3VzZS1tZXJnZWQtcmVmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Z0RBU2dCQTs7O2VBQUFBOzs7bUNBVDhCO0FBU3ZDLFNBQVNBLGFBQ2RDLElBQW1CLEVBQ25CQyxJQUFtQjtJQUVuQixNQUFNQyxXQUFXQyxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUM3QyxNQUFNQyxXQUFXRCxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUU3QyxtRkFBbUY7SUFDbkYseUVBQXlFO0lBQ3pFLGlHQUFpRztJQUNqRyw4RkFBOEY7SUFDOUYsZ0RBQWdEO0lBQ2hELG1HQUFtRztJQUNuRyx3RkFBd0Y7SUFDeEYsT0FBT0UsQ0FBQUEsR0FBQUEsT0FBQUEsV0FBQUEsRUFDTCxDQUFDQztRQUNDLElBQUlBLFlBQVksTUFBTTtZQUNwQixNQUFNQyxhQUFhTCxTQUFTSSxPQUFPO1lBQ25DLElBQUlDLFlBQVk7Z0JBQ2RMLFNBQVNJLE9BQU8sR0FBRztnQkFDbkJDO1lBQ0Y7WUFDQSxNQUFNQyxhQUFhSixTQUFTRSxPQUFPO1lBQ25DLElBQUlFLFlBQVk7Z0JBQ2RKLFNBQVNFLE9BQU8sR0FBRztnQkFDbkJFO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsSUFBSVIsTUFBTTtnQkFDUkUsU0FBU0ksT0FBTyxHQUFHRyxTQUFTVCxNQUFNTTtZQUNwQztZQUNBLElBQUlMLE1BQU07Z0JBQ1JHLFNBQVNFLE9BQU8sR0FBR0csU0FBU1IsTUFBTUs7WUFDcEM7UUFDRjtJQUNGLEdBQ0E7UUFBQ047UUFBTUM7S0FBSztBQUVoQjtBQUVBLFNBQVNRLFNBQ1BULElBQWdDLEVBQ2hDTSxPQUFpQjtJQUVqQixJQUFJLE9BQU9OLFNBQVMsWUFBWTtRQUM5QixNQUFNVSxVQUFVVixLQUFLTTtRQUNyQixJQUFJLE9BQU9JLFlBQVksWUFBWTtZQUNqQyxPQUFPQTtRQUNULE9BQU87WUFDTCxPQUFPLElBQU1WLEtBQUs7UUFDcEI7SUFDRixPQUFPO1FBQ0xBLEtBQUtNLE9BQU8sR0FBR0E7UUFDZixPQUFPO1lBQ0xOLEtBQUtNLE9BQU8sR0FBRztRQUNqQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxzcmNcXGNsaWVudFxcdXNlLW1lcmdlZC1yZWYudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdHlwZSBSZWYgfSBmcm9tICdyZWFjdCdcblxuLy8gVGhpcyBpcyBhIGNvbXBhdGliaWxpdHkgaG9vayB0byBzdXBwb3J0IFJlYWN0IDE4IGFuZCAxOSByZWZzLlxuLy8gSW4gMTksIGEgY2xlYW51cCBmdW5jdGlvbiBmcm9tIHJlZnMgbWF5IGJlIHJldHVybmVkLlxuLy8gSW4gMTgsIHJldHVybmluZyBhIGNsZWFudXAgZnVuY3Rpb24gY3JlYXRlcyBhIHdhcm5pbmcuXG4vLyBTaW5jZSB3ZSB0YWtlIHVzZXJzcGFjZSByZWZzLCB3ZSBkb24ndCBrbm93IGFoZWFkIG9mIHRpbWUgaWYgYSBjbGVhbnVwIGZ1bmN0aW9uIHdpbGwgYmUgcmV0dXJuZWQuXG4vLyBUaGlzIGltcGxlbWVudHMgY2xlYW51cCBmdW5jdGlvbnMgd2l0aCB0aGUgb2xkIGJlaGF2aW9yIGluIDE4LlxuLy8gV2Uga25vdyByZWZzIGFyZSBhbHdheXMgY2FsbGVkIGFsdGVybmF0aW5nIHdpdGggYG51bGxgIGFuZCB0aGVuIGBUYC5cbi8vIFNvIGEgY2FsbCB3aXRoIGBudWxsYCBtZWFucyB3ZSBuZWVkIHRvIGNhbGwgdGhlIHByZXZpb3VzIGNsZWFudXAgZnVuY3Rpb25zLlxuZXhwb3J0IGZ1bmN0aW9uIHVzZU1lcmdlZFJlZjxURWxlbWVudD4oXG4gIHJlZkE6IFJlZjxURWxlbWVudD4sXG4gIHJlZkI6IFJlZjxURWxlbWVudD5cbik6IFJlZjxURWxlbWVudD4ge1xuICBjb25zdCBjbGVhbnVwQSA9IHVzZVJlZjwoKCkgPT4gdm9pZCkgfCBudWxsPihudWxsKVxuICBjb25zdCBjbGVhbnVwQiA9IHVzZVJlZjwoKCkgPT4gdm9pZCkgfCBudWxsPihudWxsKVxuXG4gIC8vIE5PVEU6IEluIHRoZW9yeSwgd2UgY291bGQgc2tpcCB0aGUgd3JhcHBpbmcgaWYgb25seSBvbmUgb2YgdGhlIHJlZnMgaXMgbm9uLW51bGwuXG4gIC8vICh0aGlzIGhhcHBlbnMgb2Z0ZW4gaWYgdGhlIHVzZXIgZG9lc24ndCBwYXNzIGEgcmVmIHRvIExpbmsvRm9ybS9JbWFnZSlcbiAgLy8gQnV0IHRoaXMgY2FuIGNhdXNlIHVzIHRvIGxlYWsgYSBjbGVhbnVwLXJlZiBpbnRvIHVzZXIgY29kZSAoZS5nLiB2aWEgYDxMaW5rIGxlZ2FjeUJlaGF2aW9yPmApLFxuICAvLyBhbmQgdGhlIHVzZXIgbWlnaHQgcGFzcyB0aGF0IHJlZiBpbnRvIHJlZi1tZXJnaW5nIGxpYnJhcnkgdGhhdCBkb2Vzbid0IHN1cHBvcnQgY2xlYW51cCByZWZzXG4gIC8vIChiZWNhdXNlIGl0IGhhc24ndCBiZWVuIHVwZGF0ZWQgZm9yIFJlYWN0IDE5KVxuICAvLyB3aGljaCBjYW4gdGhlbiBjYXVzZSB0aGluZ3MgdG8gYmxvdyB1cCwgYmVjYXVzZSBhIGNsZWFudXAtcmV0dXJuaW5nIHJlZiBnZXRzIGNhbGxlZCB3aXRoIGBudWxsYC5cbiAgLy8gU28gaW4gcHJhY3RpY2UsIGl0J3Mgc2FmZXIgdG8gYmUgZGVmZW5zaXZlIGFuZCBhbHdheXMgd3JhcCB0aGUgcmVmLCBldmVuIG9uIFJlYWN0IDE5LlxuICByZXR1cm4gdXNlQ2FsbGJhY2soXG4gICAgKGN1cnJlbnQ6IFRFbGVtZW50IHwgbnVsbCk6IHZvaWQgPT4ge1xuICAgICAgaWYgKGN1cnJlbnQgPT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgY2xlYW51cEZuQSA9IGNsZWFudXBBLmN1cnJlbnRcbiAgICAgICAgaWYgKGNsZWFudXBGbkEpIHtcbiAgICAgICAgICBjbGVhbnVwQS5jdXJyZW50ID0gbnVsbFxuICAgICAgICAgIGNsZWFudXBGbkEoKVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNsZWFudXBGbkIgPSBjbGVhbnVwQi5jdXJyZW50XG4gICAgICAgIGlmIChjbGVhbnVwRm5CKSB7XG4gICAgICAgICAgY2xlYW51cEIuY3VycmVudCA9IG51bGxcbiAgICAgICAgICBjbGVhbnVwRm5CKClcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHJlZkEpIHtcbiAgICAgICAgICBjbGVhbnVwQS5jdXJyZW50ID0gYXBwbHlSZWYocmVmQSwgY3VycmVudClcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVmQikge1xuICAgICAgICAgIGNsZWFudXBCLmN1cnJlbnQgPSBhcHBseVJlZihyZWZCLCBjdXJyZW50KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBbcmVmQSwgcmVmQl1cbiAgKVxufVxuXG5mdW5jdGlvbiBhcHBseVJlZjxURWxlbWVudD4oXG4gIHJlZkE6IE5vbk51bGxhYmxlPFJlZjxURWxlbWVudD4+LFxuICBjdXJyZW50OiBURWxlbWVudFxuKSB7XG4gIGlmICh0eXBlb2YgcmVmQSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnN0IGNsZWFudXAgPSByZWZBKGN1cnJlbnQpXG4gICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gY2xlYW51cFxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKCkgPT4gcmVmQShudWxsKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZWZBLmN1cnJlbnQgPSBjdXJyZW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJlZkEuY3VycmVudCA9IG51bGxcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJ1c2VNZXJnZWRSZWYiLCJyZWZBIiwicmVmQiIsImNsZWFudXBBIiwidXNlUmVmIiwiY2xlYW51cEIiLCJ1c2VDYWxsYmFjayIsImN1cnJlbnQiLCJjbGVhbnVwRm5BIiwiY2xlYW51cEZuQiIsImFwcGx5UmVmIiwiY2xlYW51cCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={529:(e,r,t)=>{var n=t(191);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},191:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(529);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGNvbXBpbGVkXFxtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxcaG1yXFxob3RNb2R1bGVSZXBsYWNlbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17NTI5OihlLHIsdCk9Pnt2YXIgbj10KDE5MSk7dmFyIGk9T2JqZWN0LmNyZWF0ZShudWxsKTt2YXIgYT10eXBlb2YgZG9jdW1lbnQ9PT1cInVuZGVmaW5lZFwiO3ZhciBvPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoO2Z1bmN0aW9uIGRlYm91bmNlKGUscil7dmFyIHQ9MDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj10aGlzO3ZhciBpPWFyZ3VtZW50czt2YXIgYT1mdW5jdGlvbiBmdW5jdGlvbkNhbGwoKXtyZXR1cm4gZS5hcHBseShuLGkpfTtjbGVhclRpbWVvdXQodCk7dD1zZXRUaW1lb3V0KGEscil9fWZ1bmN0aW9uIG5vb3AoKXt9ZnVuY3Rpb24gZ2V0Q3VycmVudFNjcmlwdFVybChlKXt2YXIgcj1pW2VdO2lmKCFyKXtpZihkb2N1bWVudC5jdXJyZW50U2NyaXB0KXtyPWRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjfWVsc2V7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7dmFyIGE9dFt0Lmxlbmd0aC0xXTtpZihhKXtyPWEuc3JjfX1pW2VdPXJ9cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKCFyKXtyZXR1cm4gbnVsbH12YXIgdD1yLnNwbGl0KC8oW15cXFxcL10rKVxcLmpzJC8pO3ZhciBpPXQmJnRbMV07aWYoIWkpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfWlmKCFlKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1yZXR1cm4gZS5zcGxpdChcIixcIikubWFwKChmdW5jdGlvbihlKXt2YXIgdD1uZXcgUmVnRXhwKFwiXCIuY29uY2F0KGksXCJcXFxcLmpzJFwiKSxcImdcIik7cmV0dXJuIG4oci5yZXBsYWNlKHQsXCJcIi5jb25jYXQoZS5yZXBsYWNlKC97ZmlsZU5hbWV9L2csaSksXCIuY3NzXCIpKSl9KSl9fWZ1bmN0aW9uIHVwZGF0ZUNzcyhlLHIpe2lmKCFyKXtpZighZS5ocmVmKXtyZXR1cm59cj1lLmhyZWYuc3BsaXQoXCI/XCIpWzBdfWlmKCFpc1VybFJlcXVlc3Qocikpe3JldHVybn1pZihlLmlzTG9hZGVkPT09ZmFsc2Upe3JldHVybn1pZighcnx8IShyLmluZGV4T2YoXCIuY3NzXCIpPi0xKSl7cmV0dXJufWUudmlzaXRlZD10cnVlO3ZhciB0PWUuY2xvbmVOb2RlKCk7dC5pc0xvYWRlZD1mYWxzZTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmhyZWY9XCJcIi5jb25jYXQocixcIj9cIikuY29uY2F0KERhdGUubm93KCkpO2lmKGUubmV4dFNpYmxpbmcpe2UucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodCxlLm5leHRTaWJsaW5nKX1lbHNle2UucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0KX19ZnVuY3Rpb24gZ2V0UmVsb2FkVXJsKGUscil7dmFyIHQ7ZT1uKGUse3N0cmlwV1dXOmZhbHNlfSk7ci5zb21lKChmdW5jdGlvbihuKXtpZihlLmluZGV4T2Yocik+LTEpe3Q9bn19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkU3R5bGUoZSl7aWYoIWUpe3JldHVybiBmYWxzZX12YXIgcj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTt2YXIgdD1mYWxzZTtvLmNhbGwociwoZnVuY3Rpb24ocil7aWYoIXIuaHJlZil7cmV0dXJufXZhciBuPWdldFJlbG9hZFVybChyLmhyZWYsZSk7aWYoIWlzVXJsUmVxdWVzdChuKSl7cmV0dXJufWlmKHIudmlzaXRlZD09PXRydWUpe3JldHVybn1pZihuKXt1cGRhdGVDc3MocixuKTt0PXRydWV9fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZEFsbCgpe3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO28uY2FsbChlLChmdW5jdGlvbihlKXtpZihlLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59dXBkYXRlQ3NzKGUpfSkpfWZ1bmN0aW9uIGlzVXJsUmVxdWVzdChlKXtpZighL15bYS16QS1aXVthLXpBLVpcXGQrXFwtLl0qOi8udGVzdChlKSl7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfWUuZXhwb3J0cz1mdW5jdGlvbihlLHIpe2lmKGEpe2NvbnNvbGUubG9nKFwibm8gd2luZG93LmRvY3VtZW50IGZvdW5kLCB3aWxsIG5vdCBITVIgQ1NTXCIpO3JldHVybiBub29wfXZhciB0PWdldEN1cnJlbnRTY3JpcHRVcmwoZSk7ZnVuY3Rpb24gdXBkYXRlKCl7dmFyIGU9dChyLmZpbGVuYW1lKTt2YXIgbj1yZWxvYWRTdHlsZShlKTtpZihyLmxvY2Fscyl7Y29uc29sZS5sb2coXCJbSE1SXSBEZXRlY3RlZCBsb2NhbCBjc3MgbW9kdWxlcy4gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCk7cmV0dXJufWlmKG4pe2NvbnNvbGUubG9nKFwiW0hNUl0gY3NzIHJlbG9hZCAlc1wiLGUuam9pbihcIiBcIikpfWVsc2V7Y29uc29sZS5sb2coXCJbSE1SXSBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKX19cmV0dXJuIGRlYm91bmNlKHVwZGF0ZSw1MCl9fSwxOTE6ZT0+e2Z1bmN0aW9uIG5vcm1hbGl6ZVVybChlKXtyZXR1cm4gZS5yZWR1Y2UoKGZ1bmN0aW9uKGUscil7c3dpdGNoKHIpe2Nhc2VcIi4uXCI6ZS5wb3AoKTticmVhaztjYXNlXCIuXCI6YnJlYWs7ZGVmYXVsdDplLnB1c2gocil9cmV0dXJuIGV9KSxbXSkuam9pbihcIi9cIil9ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2U9ZS50cmltKCk7aWYoL15kYXRhOi9pLnRlc3QoZSkpe3JldHVybiBlfXZhciByPWUuaW5kZXhPZihcIi8vXCIpIT09LTE/ZS5zcGxpdChcIi8vXCIpWzBdK1wiLy9cIjpcIlwiO3ZhciB0PWUucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJpXCIpLFwiXCIpLnNwbGl0KFwiL1wiKTt2YXIgbj10WzBdLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXFwuJC8sXCJcIik7dFswXT1cIlwiO3ZhciBpPW5vcm1hbGl6ZVVybCh0KTtyZXR1cm4gcituK2l9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyh0KXt2YXIgbj1yW3RdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9clt0XT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVt0XShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgclt0XX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgdD1fX25jY3dwY2tfcmVxdWlyZV9fKDUyOSk7bW9kdWxlLmV4cG9ydHM9dH0pKCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3RcXGpzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/lib/metadata/metadata-constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    METADATA_BOUNDARY_NAME: function() {\n        return METADATA_BOUNDARY_NAME;\n    },\n    OUTLET_BOUNDARY_NAME: function() {\n        return OUTLET_BOUNDARY_NAME;\n    },\n    VIEWPORT_BOUNDARY_NAME: function() {\n        return VIEWPORT_BOUNDARY_NAME;\n    }\n});\nconst METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nconst VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nconst OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL21ldGFkYXRhLWNvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FJTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGxpYlxcbWV0YWRhdGFcXG1ldGFkYXRhLWNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIE1FVEFEQVRBX0JPVU5EQVJZX05BTUU6IG51bGwsXG4gICAgT1VUTEVUX0JPVU5EQVJZX05BTUU6IG51bGwsXG4gICAgVklFV1BPUlRfQk9VTkRBUllfTkFNRTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBNRVRBREFUQV9CT1VOREFSWV9OQU1FOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE1FVEFEQVRBX0JPVU5EQVJZX05BTUU7XG4gICAgfSxcbiAgICBPVVRMRVRfQk9VTkRBUllfTkFNRTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBPVVRMRVRfQk9VTkRBUllfTkFNRTtcbiAgICB9LFxuICAgIFZJRVdQT1JUX0JPVU5EQVJZX05BTUU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gVklFV1BPUlRfQk9VTkRBUllfTkFNRTtcbiAgICB9XG59KTtcbmNvbnN0IE1FVEFEQVRBX0JPVU5EQVJZX05BTUUgPSAnX19uZXh0X21ldGFkYXRhX2JvdW5kYXJ5X18nO1xuY29uc3QgVklFV1BPUlRfQk9VTkRBUllfTkFNRSA9ICdfX25leHRfdmlld3BvcnRfYm91bmRhcnlfXyc7XG5jb25zdCBPVVRMRVRfQk9VTkRBUllfTkFNRSA9ICdfX25leHRfb3V0bGV0X2JvdW5kYXJ5X18nO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/lib/scheduler.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    atLeastOneTask: function() {\n        return atLeastOneTask;\n    },\n    scheduleImmediate: function() {\n        return scheduleImmediate;\n    },\n    scheduleOnNextTick: function() {\n        return scheduleOnNextTick;\n    },\n    waitAtLeastOneReactRenderTask: function() {\n        return waitAtLeastOneReactRenderTask;\n    }\n});\nconst scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (false) {} else {\n            process.nextTick(cb);\n        }\n    });\n};\nconst scheduleImmediate = (cb)=>{\n    if (false) {} else {\n        setImmediate(cb);\n    }\n};\nfunction atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\nfunction waitAtLeastOneReactRenderTask() {\n    if (false) {} else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL3NjaGVkdWxlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBS0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLEtBQW1DLEVBQUUsRUFFeEMsQ0FBQztBQUNWLFlBQVksT0FBTztBQUNuQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsUUFBUSxLQUFtQyxFQUFFLEVBRXhDLENBQUM7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsS0FBbUMsRUFBRSxFQUV4QyxDQUFDO0FBQ047QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcbGliXFxzY2hlZHVsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBhdExlYXN0T25lVGFzazogbnVsbCxcbiAgICBzY2hlZHVsZUltbWVkaWF0ZTogbnVsbCxcbiAgICBzY2hlZHVsZU9uTmV4dFRpY2s6IG51bGwsXG4gICAgd2FpdEF0TGVhc3RPbmVSZWFjdFJlbmRlclRhc2s6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgYXRMZWFzdE9uZVRhc2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXRMZWFzdE9uZVRhc2s7XG4gICAgfSxcbiAgICBzY2hlZHVsZUltbWVkaWF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzY2hlZHVsZUltbWVkaWF0ZTtcbiAgICB9LFxuICAgIHNjaGVkdWxlT25OZXh0VGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzY2hlZHVsZU9uTmV4dFRpY2s7XG4gICAgfSxcbiAgICB3YWl0QXRMZWFzdE9uZVJlYWN0UmVuZGVyVGFzazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3YWl0QXRMZWFzdE9uZVJlYWN0UmVuZGVyVGFzaztcbiAgICB9XG59KTtcbmNvbnN0IHNjaGVkdWxlT25OZXh0VGljayA9IChjYik9PntcbiAgICAvLyBXZSB1c2UgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigpIGhlcmUgc28gdGhhdCB0aGUgb3BlcmF0aW9uIGlzIHNjaGVkdWxlZCBhdFxuICAgIC8vIHRoZSBlbmQgb2YgdGhlIHByb21pc2Ugam9iIHF1ZXVlLCB3ZSB0aGVuIGFkZCBpdCB0byB0aGUgbmV4dCBwcm9jZXNzIHRpY2tcbiAgICAvLyB0byBlbnN1cmUgaXQncyBldmFsdWF0ZWQgYWZ0ZXJ3YXJkcy5cbiAgICAvL1xuICAgIC8vIFRoaXMgd2FzIGluc3BpcmVkIGJ5IHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgRGF0YUxvYWRlciBpbnRlcmZhY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2RhdGFsb2FkZXIvYmxvYi9kMzM2YmQxNTI4MjY2NGUwYmU0YjRhNjU3Y2I3OTZmMDliYWZiYzZiL3NyYy9pbmRleC5qcyNMMjEzLUwyNTVcbiAgICAvL1xuICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCk9PntcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSA9PT0gJ2VkZ2UnKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGNiLCAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb2Nlc3MubmV4dFRpY2soY2IpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuY29uc3Qgc2NoZWR1bGVJbW1lZGlhdGUgPSAoY2IpPT57XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSA9PT0gJ2VkZ2UnKSB7XG4gICAgICAgIHNldFRpbWVvdXQoY2IsIDApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHNldEltbWVkaWF0ZShjYik7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGF0TGVhc3RPbmVUYXNrKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSk9PnNjaGVkdWxlSW1tZWRpYXRlKHJlc29sdmUpKTtcbn1cbmZ1bmN0aW9uIHdhaXRBdExlYXN0T25lUmVhY3RSZW5kZXJUYXNrKCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgPT09ICdlZGdlJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHIpPT5zZXRUaW1lb3V0KHIsIDApKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHIpPT5zZXRJbW1lZGlhdGUocikpO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZWR1bGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"afterTaskAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return afterTaskAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst afterTaskAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUVBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkJBQTJCLG1CQUFPLENBQUMsb0hBQXVCO0FBQzFEOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxhcHAtcmVuZGVyXFxhZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhZnRlclRhc2tBc3luY1N0b3JhZ2VJbnN0YW5jZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3QgYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2UgPSAoMCwgX2FzeW5jbG9jYWxzdG9yYWdlLmNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/after-task-async-storage.external.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"afterTaskAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return _aftertaskasyncstorageinstance.afterTaskAsyncStorageInstance;\n    }\n}));\nconst _aftertaskasyncstorageinstance = __webpack_require__(/*! ./after-task-async-storage-instance */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js\");\n\n//# sourceMappingURL=after-task-async-storage.external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YseURBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsdUNBQXVDLG1CQUFPLENBQUMsZ0pBQXFDOztBQUVwRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfYWZ0ZXJ0YXNrYXN5bmNzdG9yYWdlaW5zdGFuY2UuYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYWZ0ZXJ0YXNrYXN5bmNzdG9yYWdlaW5zdGFuY2UgPSByZXF1aXJlKFwiLi9hZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2VcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFmdGVyLXRhc2stYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FJTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGJpbmRTbmFwc2hvdDogbnVsbCxcbiAgICBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZTogbnVsbCxcbiAgICBjcmVhdGVTbmFwc2hvdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBiaW5kU25hcHNob3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYmluZFNuYXBzaG90O1xuICAgIH0sXG4gICAgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U7XG4gICAgfSxcbiAgICBjcmVhdGVTbmFwc2hvdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVTbmFwc2hvdDtcbiAgICB9XG59KTtcbmNvbnN0IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKCdJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZScpLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICB2YWx1ZTogXCJFNTA0XCIsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcbmNsYXNzIEZha2VBc3luY0xvY2FsU3RvcmFnZSB7XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZ2V0U3RvcmUoKSB7XG4gICAgICAgIC8vIFRoaXMgZmFrZSBpbXBsZW1lbnRhdGlvbiBvZiBBc3luY0xvY2FsU3RvcmFnZSBhbHdheXMgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBleGl0KCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBlbnRlcldpdGgoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIHN0YXRpYyBiaW5kKGZuKSB7XG4gICAgICAgIHJldHVybiBmbjtcbiAgICB9XG59XG5jb25zdCBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2U7XG5mdW5jdGlvbiBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbmV3IG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbn1cbmZ1bmN0aW9uIGJpbmRTbmFwc2hvdChmbikge1xuICAgIGlmIChtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlLmJpbmQoZm4pO1xuICAgIH1cbiAgICByZXR1cm4gRmFrZUFzeW5jTG9jYWxTdG9yYWdlLmJpbmQoZm4pO1xufVxuZnVuY3Rpb24gY3JlYXRlU25hcHNob3QoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2Uuc25hcHNob3QoKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGZuLCAuLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBmbiguLi5hcmdzKTtcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3luYy1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/dynamic-rendering.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    Postpone: function() {\n        return Postpone;\n    },\n    abortAndThrowOnSynchronousRequestDataAccess: function() {\n        return abortAndThrowOnSynchronousRequestDataAccess;\n    },\n    abortOnSynchronousPlatformIOAccess: function() {\n        return abortOnSynchronousPlatformIOAccess;\n    },\n    accessedDynamicData: function() {\n        return accessedDynamicData;\n    },\n    annotateDynamicAccess: function() {\n        return annotateDynamicAccess;\n    },\n    consumeDynamicAccess: function() {\n        return consumeDynamicAccess;\n    },\n    createDynamicTrackingState: function() {\n        return createDynamicTrackingState;\n    },\n    createDynamicValidationState: function() {\n        return createDynamicValidationState;\n    },\n    createHangingInputAbortSignal: function() {\n        return createHangingInputAbortSignal;\n    },\n    createPostponedAbortSignal: function() {\n        return createPostponedAbortSignal;\n    },\n    formatDynamicAPIAccesses: function() {\n        return formatDynamicAPIAccesses;\n    },\n    getFirstDynamicReason: function() {\n        return getFirstDynamicReason;\n    },\n    isDynamicPostpone: function() {\n        return isDynamicPostpone;\n    },\n    isPrerenderInterruptedError: function() {\n        return isPrerenderInterruptedError;\n    },\n    markCurrentScopeAsDynamic: function() {\n        return markCurrentScopeAsDynamic;\n    },\n    postponeWithTracking: function() {\n        return postponeWithTracking;\n    },\n    throwIfDisallowedDynamic: function() {\n        return throwIfDisallowedDynamic;\n    },\n    throwToInterruptStaticGeneration: function() {\n        return throwToInterruptStaticGeneration;\n    },\n    trackAllowedDynamicAccess: function() {\n        return trackAllowedDynamicAccess;\n    },\n    trackDynamicDataInDynamicRender: function() {\n        return trackDynamicDataInDynamicRender;\n    },\n    trackFallbackParamAccessed: function() {\n        return trackFallbackParamAccessed;\n    },\n    trackSynchronousPlatformIOAccessInDev: function() {\n        return trackSynchronousPlatformIOAccessInDev;\n    },\n    trackSynchronousRequestDataAccessInDev: function() {\n        return trackSynchronousRequestDataAccessInDev;\n    },\n    useDynamicRouteParams: function() {\n        return useDynamicRouteParams;\n    }\n});\nconst _react = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _hooksservercontext = __webpack_require__(/*! ../../client/components/hooks-server-context */ \"(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ./work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _metadataconstants = __webpack_require__(/*! ../../lib/metadata/metadata-constants */ \"(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst hasPostpone = typeof _react.default.unstable_postpone === 'function';\nfunction createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nfunction createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nfunction getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\nfunction markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if ( true && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\nfunction trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\nfunction throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\nfunction trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if ( true && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nfunction trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\nfunction abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicExpression = expression;\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n                if (prerenderStore.validating === true) {\n                    // We always log Request Access in dev at the point of calling the function\n                    // So we mark the dynamic validation as not requiring it to be printed\n                    dynamicTracking.syncDynamicLogged = true;\n                }\n            }\n        }\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\nconst trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nfunction Postpone({ reason, route }) {\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nfunction postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    _react.default.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nfunction isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nfunction isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nfunction accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nfunction consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nfunction formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nfunction createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        _react.default.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nfunction createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        (0, _scheduler.scheduleOnNextTick)(()=>controller.abort());\n    }\n    return controller.signal;\n}\nfunction annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction useDynamicRouteParams(expression) {\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                _react.default.use((0, _dynamicrenderingutils.makeHangingPromise)(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nfunction trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nfunction throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new _staticgenerationbailout.StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new _staticgenerationbailout.StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E608\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E534\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E573\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E590\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"createDedupedByCallsiteServerErrorLoggerDev\", ({\n    enumerable: true,\n    get: function() {\n        return createDedupedByCallsiteServerErrorLoggerDev;\n    }\n}));\nconst _react = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {\n        __proto__: null\n    };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof _react.cache === 'function' ? _react.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn =  false ? 0 : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\nfunction createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (true) {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {}\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2NyZWF0ZS1kZWR1cGVkLWJ5LWNhbGxzaXRlLXNlcnZlci1lcnJvci1sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwrRUFBOEU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRix1REFBdUQsbUJBQU8sQ0FBQyxtRkFBTztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsTUFBNkIsR0FBRyxDQUFhO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFlBQVksSUFBcUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxLQUFLLEVBRU47QUFDVDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxjcmVhdGUtZGVkdXBlZC1ieS1jYWxsc2l0ZS1zZXJ2ZXItZXJyb3ItbG9nZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlRGVkdXBlZEJ5Q2FsbHNpdGVTZXJ2ZXJFcnJvckxvZ2dlckRldlwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlRGVkdXBlZEJ5Q2FsbHNpdGVTZXJ2ZXJFcnJvckxvZ2dlckRldjtcbiAgICB9XG59KTtcbmNvbnN0IF9yZWFjdCA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24obm9kZUludGVyb3ApIHtcbiAgICAgICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICAgIH0pKG5vZGVJbnRlcm9wKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkge1xuICAgIGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG9ialxuICAgICAgICB9O1xuICAgIH1cbiAgICB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApO1xuICAgIGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkge1xuICAgICAgICByZXR1cm4gY2FjaGUuZ2V0KG9iaik7XG4gICAgfVxuICAgIHZhciBuZXdPYmogPSB7XG4gICAgICAgIF9fcHJvdG9fXzogbnVsbFxuICAgIH07XG4gICAgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAgIGZvcih2YXIga2V5IGluIG9iail7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5jb25zdCBlcnJvclJlZiA9IHtcbiAgICBjdXJyZW50OiBudWxsXG59O1xuLy8gUmVhY3QuY2FjaGUgaXMgY3VycmVudGx5IG9ubHkgYXZhaWxhYmxlIGluIGNhbmFyeS9leHBlcmltZW50YWwgUmVhY3QgY2hhbm5lbHMuXG5jb25zdCBjYWNoZSA9IHR5cGVvZiBfcmVhY3QuY2FjaGUgPT09ICdmdW5jdGlvbicgPyBfcmVhY3QuY2FjaGUgOiAoZm4pPT5mbjtcbi8vIFdoZW4gRHluYW1pYyBJTyBpcyBlbmFibGVkLCB3ZSByZWNvcmQgdGhlc2UgYXMgZXJyb3JzIHNvIHRoYXQgdGhleVxuLy8gYXJlIGNhcHR1cmVkIGJ5IHRoZSBkZXYgb3ZlcmxheSBhcyBpdCdzIG1vcmUgY3JpdGljYWwgdG8gZml4IHRoZXNlXG4vLyB3aGVuIGVuYWJsZWQuXG5jb25zdCBsb2dFcnJvck9yV2FybiA9IHByb2Nlc3MuZW52Ll9fTkVYVF9EWU5BTUlDX0lPID8gY29uc29sZS5lcnJvciA6IGNvbnNvbGUud2Fybjtcbi8vIFdlIGRvbid0IHdhbnQgdG8gZGVkdXBlIGFjcm9zcyByZXF1ZXN0cy5cbi8vIFRoZSBkZXZlbG9wZXIgbWlnaHQndmUganVzdCBhdHRlbXB0ZWQgdG8gZml4IHRoZSB3YXJuaW5nIHNvIHdlIHNob3VsZCB3YXJuIGFnYWluIGlmIGl0IHN0aWxsIGhhcHBlbnMuXG5jb25zdCBmbHVzaEN1cnJlbnRFcnJvcklmTmV3ID0gY2FjaGUoLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAtLSBjYWNoZSBrZXlcbihrZXkpPT57XG4gICAgdHJ5IHtcbiAgICAgICAgbG9nRXJyb3JPcldhcm4oZXJyb3JSZWYuY3VycmVudCk7XG4gICAgfSBmaW5hbGx5e1xuICAgICAgICBlcnJvclJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGNyZWF0ZURlZHVwZWRCeUNhbGxzaXRlU2VydmVyRXJyb3JMb2dnZXJEZXYoZ2V0TWVzc2FnZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBsb2dEZWR1cGVkRXJyb3IoLi4uYXJncykge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gZ2V0TWVzc2FnZSguLi5hcmdzKTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBfc3RhY2s7XG4gICAgICAgICAgICBjb25zdCBjYWxsU3RhY2tGcmFtZXMgPSAoX3N0YWNrID0gbmV3IEVycm9yKCkuc3RhY2spID09IG51bGwgPyB2b2lkIDAgOiBfc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgICAgICAgaWYgKGNhbGxTdGFja0ZyYW1lcyA9PT0gdW5kZWZpbmVkIHx8IGNhbGxTdGFja0ZyYW1lcy5sZW5ndGggPCA0KSB7XG4gICAgICAgICAgICAgICAgbG9nRXJyb3JPcldhcm4obWVzc2FnZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEVycm9yOlxuICAgICAgICAgICAgICAgIC8vICAgbG9nRGVkdXBlZEVycm9yXG4gICAgICAgICAgICAgICAgLy8gICBhc3luY0FwaUJlaW5nQWNjZXNzZWRTeW5jaHJvbm91c2x5XG4gICAgICAgICAgICAgICAgLy8gICA8dXNlcmxhbmQgY2FsbHNpdGU+XG4gICAgICAgICAgICAgICAgLy8gVE9ETzogVGhpcyBicmVha3MgaWYgc291cmNlbWFwcyB3aXRoIGlnbm9yZSBsaXN0cyBhcmUgZW5hYmxlZC5cbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBjYWxsU3RhY2tGcmFtZXNbNF07XG4gICAgICAgICAgICAgICAgZXJyb3JSZWYuY3VycmVudCA9IG1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgZmx1c2hDdXJyZW50RXJyb3JJZk5ldyhrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG9nRXJyb3JPcldhcm4obWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGUtZGVkdXBlZC1ieS1jYWxsc2l0ZS1zZXJ2ZXItZXJyb3ItbG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/server/dynamic-rendering-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isHangingPromiseRejectionError: function() {\n        return isHangingPromiseRejectionError;\n    },\n    makeHangingPromise: function() {\n        return makeHangingPromise;\n    }\n});\nfunction isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\nfunction makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2R5bmFtaWMtcmVuZGVyaW5nLXV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUdMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxZQUFZLHNHQUFzRyxZQUFZO0FBQ3BLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsc0JBQXNCO0FBQ3pEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcZHluYW1pYy1yZW5kZXJpbmctdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc0hhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3I6IG51bGwsXG4gICAgbWFrZUhhbmdpbmdQcm9taXNlOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGlzSGFuZ2luZ1Byb21pc2VSZWplY3Rpb25FcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpc0hhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3I7XG4gICAgfSxcbiAgICBtYWtlSGFuZ2luZ1Byb21pc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbWFrZUhhbmdpbmdQcm9taXNlO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gaXNIYW5naW5nUHJvbWlzZVJlamVjdGlvbkVycm9yKGVycikge1xuICAgIGlmICh0eXBlb2YgZXJyICE9PSAnb2JqZWN0JyB8fCBlcnIgPT09IG51bGwgfHwgISgnZGlnZXN0JyBpbiBlcnIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGVyci5kaWdlc3QgPT09IEhBTkdJTkdfUFJPTUlTRV9SRUpFQ1RJT047XG59XG5jb25zdCBIQU5HSU5HX1BST01JU0VfUkVKRUNUSU9OID0gJ0hBTkdJTkdfUFJPTUlTRV9SRUpFQ1RJT04nO1xuY2xhc3MgSGFuZ2luZ1Byb21pc2VSZWplY3Rpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihleHByZXNzaW9uKXtcbiAgICAgICAgc3VwZXIoYER1cmluZyBwcmVyZW5kZXJpbmcsICR7ZXhwcmVzc2lvbn0gcmVqZWN0cyB3aGVuIHRoZSBwcmVyZW5kZXIgaXMgY29tcGxldGUuIFR5cGljYWxseSB0aGVzZSBlcnJvcnMgYXJlIGhhbmRsZWQgYnkgUmVhY3QgYnV0IGlmIHlvdSBtb3ZlICR7ZXhwcmVzc2lvbn0gdG8gYSBkaWZmZXJlbnQgY29udGV4dCBieSB1c2luZyBcXGBzZXRUaW1lb3V0XFxgLCBcXGBhZnRlclxcYCwgb3Igc2ltaWxhciBmdW5jdGlvbnMgeW91IG1heSBvYnNlcnZlIHRoaXMgZXJyb3IgYW5kIHlvdSBzaG91bGQgaGFuZGxlIGl0IGluIHRoYXQgY29udGV4dC5gKSwgdGhpcy5leHByZXNzaW9uID0gZXhwcmVzc2lvbiwgdGhpcy5kaWdlc3QgPSBIQU5HSU5HX1BST01JU0VfUkVKRUNUSU9OO1xuICAgIH1cbn1cbmNvbnN0IGFib3J0TGlzdGVuZXJzQnlTaWduYWwgPSBuZXcgV2Vha01hcCgpO1xuZnVuY3Rpb24gbWFrZUhhbmdpbmdQcm9taXNlKHNpZ25hbCwgZXhwcmVzc2lvbikge1xuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEhhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3IoZXhwcmVzc2lvbikpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGhhbmdpbmdQcm9taXNlID0gbmV3IFByb21pc2UoKF8sIHJlamVjdCk9PntcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kUmVqZWN0aW9uID0gcmVqZWN0LmJpbmQobnVsbCwgbmV3IEhhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3IoZXhwcmVzc2lvbikpO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRMaXN0ZW5lcnMgPSBhYm9ydExpc3RlbmVyc0J5U2lnbmFsLmdldChzaWduYWwpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRMaXN0ZW5lcnMpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50TGlzdGVuZXJzLnB1c2goYm91bmRSZWplY3Rpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIGJvdW5kUmVqZWN0aW9uXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBhYm9ydExpc3RlbmVyc0J5U2lnbmFsLnNldChzaWduYWwsIGxpc3RlbmVycyk7XG4gICAgICAgICAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lcnNbaV0oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gV2UgYXJlIGZpbmUgaWYgbm8gb25lIGFjdHVhbGx5IGF3YWl0cyB0aGlzIHByb21pc2UuIFdlIHNob3VsZG4ndCBjb25zaWRlciB0aGlzIGFuIHVuaGFuZGxlZCByZWplY3Rpb24gc29cbiAgICAgICAgLy8gd2UgYXR0YWNoIGEgbm9vcCBjYXRjaCBoYW5kbGVyIGhlcmUgdG8gc3VwcHJlc3MgdGhpcyB3YXJuaW5nLiBJZiB5b3UgYWN0dWFsbHkgYXdhaXQgc29tZXdoZXJlIG9yIGNvbnN0cnVjdFxuICAgICAgICAvLyB5b3VyIG93biBwcm9taXNlIG91dCBvZiBpdCB5b3UnbGwgbmVlZCB0byBlbnN1cmUgeW91IGhhbmRsZSB0aGUgZXJyb3Igd2hlbiBpdCByZWplY3RzLlxuICAgICAgICBoYW5naW5nUHJvbWlzZS5jYXRjaChpZ25vcmVSZWplY3QpO1xuICAgICAgICByZXR1cm4gaGFuZ2luZ1Byb21pc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gaWdub3JlUmVqZWN0KCkge31cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHluYW1pYy1yZW5kZXJpbmctdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/request/cookies.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"cookies\", ({\n    enumerable: true,\n    get: function() {\n        return cookies;\n    }\n}));\nconst _requestcookies = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _cookies = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nconst _utils = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\");\nfunction cookies() {\n    const callingExpression = 'cookies';\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !(0, _utils.isRequestAPICallableInsideAfter)()) {\n            throw Object.defineProperty(new Error(// TODO(after): clarify that this only applies to pages?\n            `Route ${workStore.route} used \"cookies\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"cookies\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                value: \"E88\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // cookies object without tracking\n            const underlyingCookies = createEmptyCookies();\n            return makeUntrackedExoticCookies(underlyingCookies);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"cookies\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E398\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"cookies\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E157\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`cookies\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E549\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                // We don't track dynamic access here because access will be tracked when you access\n                // one of the properties of the cookies object.\n                return makeDynamicallyTrackedExoticCookies(workStore.route, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                // We are prerendering with PPR. We need track dynamic access here eagerly\n                // to keep continuity with how cookies has worked in PPR without dynamicIO.\n                (0, _dynamicrendering.postponeWithTracking)(workStore.route, callingExpression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // Legacy Prerender\n                // We track dynamic access here so we don't need to wrap the cookies in\n                // individual property access tracking.\n                (0, _dynamicrendering.throwToInterruptStaticGeneration)(callingExpression, workStore, workUnitStore);\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using cookies inside a cache context\n        (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workStore, workUnitStore);\n    }\n    // cookies is being called in a dynamic context\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)(callingExpression);\n    let underlyingCookies;\n    if ((0, _requestcookies.areCookiesMutableInCurrentPhase)(requestStore)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        underlyingCookies = requestStore.userspaceMutableCookies;\n    } else {\n        underlyingCookies = requestStore.cookies;\n    }\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        return makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticCookies(underlyingCookies);\n    }\n}\nfunction createEmptyCookies() {\n    return _requestcookies.RequestCookiesAdapter.seal(new _cookies.RequestCookies(new Headers({})));\n}\nconst CachedCookies = new WeakMap();\nfunction makeDynamicallyTrackedExoticCookies(route, prerenderStore) {\n    const cachedPromise = CachedCookies.get(prerenderStore);\n    if (cachedPromise) {\n        return cachedPromise;\n    }\n    const promise = (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, '`cookies()`');\n    CachedCookies.set(prerenderStore, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`cookies()[Symbol.iterator]()`';\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        size: {\n            get () {\n                const expression = '`cookies().size`';\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        get: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().get()`';\n                } else {\n                    expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        getAll: {\n            value: function getAll() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().getAll()`';\n                } else {\n                    expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        has: {\n            value: function has() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().has()`';\n                } else {\n                    expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        set: {\n            value: function set() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().set()`';\n                } else {\n                    const arg = arguments[0];\n                    if (arg) {\n                        expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``;\n                    } else {\n                        expression = '`cookies().set(...)`';\n                    }\n                }\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        delete: {\n            value: function() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().delete()`';\n                } else if (arguments.length === 1) {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``;\n                } else {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``;\n                }\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        clear: {\n            value: function clear() {\n                const expression = '`cookies().clear()`';\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        toString: {\n            value: function toString() {\n                const expression = '`cookies().toString()`';\n                const error = createCookiesAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticCookies(underlyingCookies) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = Promise.resolve(underlyingCookies);\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].bind(underlyingCookies) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesIterator.bind(underlyingCookies)\n        },\n        size: {\n            get () {\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: underlyingCookies.get.bind(underlyingCookies)\n        },\n        getAll: {\n            value: underlyingCookies.getAll.bind(underlyingCookies)\n        },\n        has: {\n            value: underlyingCookies.has.bind(underlyingCookies)\n        },\n        set: {\n            value: underlyingCookies.set.bind(underlyingCookies)\n        },\n        delete: {\n            value: underlyingCookies.delete.bind(underlyingCookies)\n        },\n        clear: {\n            value: // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n            typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.bind(underlyingCookies) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.bind(underlyingCookies, promise)\n        },\n        toString: {\n            value: underlyingCookies.toString.bind(underlyingCookies)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, route) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingCookies)));\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...cookies()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].apply(underlyingCookies, arguments) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n                // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesIterator.call(underlyingCookies);\n            },\n            writable: false\n        },\n        size: {\n            get () {\n                const expression = '`cookies().size`';\n                syncIODev(route, expression);\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().get()`';\n                } else {\n                    expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.get.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        getAll: {\n            value: function getAll() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().getAll()`';\n                } else {\n                    expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.getAll.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        has: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().has()`';\n                } else {\n                    expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.has.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        set: {\n            value: function set() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().set()`';\n                } else {\n                    const arg = arguments[0];\n                    if (arg) {\n                        expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``;\n                    } else {\n                        expression = '`cookies().set(...)`';\n                    }\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.set.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        delete: {\n            value: function() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().delete()`';\n                } else if (arguments.length === 1) {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``;\n                } else {\n                    expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``;\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.delete.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        clear: {\n            value: function clear() {\n                const expression = '`cookies().clear()`';\n                syncIODev(route, expression);\n                // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n                return typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.apply(underlyingCookies, arguments) : // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n                // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesClear.call(underlyingCookies, promise);\n            },\n            writable: false\n        },\n        toString: {\n            value: function toString() {\n                const expression = '`cookies().toString()` or implicit casting';\n                syncIODev(route, expression);\n                return underlyingCookies.toString.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        }\n    });\n    return promise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'object' && arg !== null && typeof arg.name === 'string' ? `'${arg.name}'` : typeof arg === 'string' ? `'${arg}'` : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createCookiesAccessError);\nfunction createCookiesAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`cookies()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E223\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction polyfilledResponseCookiesIterator() {\n    return this.getAll().map((c)=>[\n            c.name,\n            c\n        ]).values();\n}\nfunction polyfilledResponseCookiesClear(returnable) {\n    for (const cookie of this.getAll()){\n        this.delete(cookie.name);\n    }\n    return returnable;\n}\n\n//# sourceMappingURL=cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/server/request/draft-mode.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"draftMode\", ({\n    enumerable: true,\n    get: function() {\n        return draftMode;\n    }\n}));\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _hooksservercontext = __webpack_require__(/*! ../../client/components/hooks-server-context */ \"(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nfunction draftMode() {\n    const callingExpression = 'draftMode';\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!workStore || !workUnitStore) {\n        (0, _workunitasyncstorageexternal.throwForMissingRequestStore)(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return createOrGetCachedExoticDraftMode(workUnitStore.draftMode, workStore);\n        case 'cache':\n        case 'unstable-cache':\n            // Inside of `\"use cache\"` or `unstable_cache`, draft mode is available if\n            // the outmost work unit store is a request store, and if draft mode is\n            // enabled.\n            const draftModeProvider = (0, _workunitasyncstorageexternal.getDraftModeProviderForCacheScope)(workStore, workUnitStore);\n            if (draftModeProvider) {\n                return createOrGetCachedExoticDraftMode(draftModeProvider, workStore);\n            }\n        // Otherwise, we fall through to providing an empty draft mode.\n        // eslint-disable-next-line no-fallthrough\n        case 'prerender':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // Return empty draft mode\n            if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n                const route = workStore == null ? void 0 : workStore.route;\n                return createExoticDraftModeWithDevWarnings(null, route);\n            } else {\n                return createExoticDraftMode(null);\n            }\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nfunction createOrGetCachedExoticDraftMode(draftModeProvider, workStore) {\n    const cachedDraftMode = CachedDraftModes.get(draftMode);\n    if (cachedDraftMode) {\n        return cachedDraftMode;\n    }\n    let promise;\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        const route = workStore == null ? void 0 : workStore.route;\n        promise = createExoticDraftModeWithDevWarnings(draftModeProvider, route);\n    } else {\n        promise = createExoticDraftMode(draftModeProvider);\n    }\n    CachedDraftModes.set(draftModeProvider, promise);\n    return promise;\n}\nconst CachedDraftModes = new WeakMap();\nfunction createExoticDraftMode(underlyingProvider) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            return instance.isEnabled;\n        },\n        set (newValue) {\n            Object.defineProperty(promise, 'isEnabled', {\n                value: newValue,\n                writable: true,\n                enumerable: true\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    promise.enable = instance.enable.bind(instance);\n    promise.disable = instance.disable.bind(instance);\n    return promise;\n}\nfunction createExoticDraftModeWithDevWarnings(underlyingProvider, route) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            const expression = '`draftMode().isEnabled`';\n            syncIODev(route, expression);\n            return instance.isEnabled;\n        },\n        set (newValue) {\n            Object.defineProperty(promise, 'isEnabled', {\n                value: newValue,\n                writable: true,\n                enumerable: true\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(promise, 'enable', {\n        value: function get() {\n            const expression = '`draftMode().enable()`';\n            syncIODev(route, expression);\n            return instance.enable.apply(instance, arguments);\n        }\n    });\n    Object.defineProperty(promise, 'disable', {\n        value: function get() {\n            const expression = '`draftMode().disable()`';\n            syncIODev(route, expression);\n            return instance.disable.apply(instance, arguments);\n        }\n    });\n    return promise;\n}\nclass DraftMode {\n    constructor(provider){\n        this._provider = provider;\n    }\n    get isEnabled() {\n        if (this._provider !== null) {\n            return this._provider.isEnabled;\n        }\n        return false;\n    }\n    enable() {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        trackDynamicDraftMode('draftMode().enable()');\n        if (this._provider !== null) {\n            this._provider.enable();\n        }\n    }\n    disable() {\n        trackDynamicDraftMode('draftMode().disable()');\n        if (this._provider !== null) {\n            this._provider.disable();\n        }\n    }\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createDraftModeAccessError);\nfunction createDraftModeAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`draftMode()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E377\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction trackDynamicDraftMode(expression) {\n    const store = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (store) {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside \"use cache\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E246\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E259\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.phase === 'after') {\n                throw Object.defineProperty(new Error(`Route ${store.route} used \"${expression}\" inside \\`after\\`. The enabled status of draftMode can be read inside \\`after\\` but you cannot enable or disable draftMode. See more info here: https://nextjs.org/docs/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E348\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (store.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E553\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                const error = Object.defineProperty(new Error(`Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E126\",\n                    enumerable: false,\n                    configurable: true\n                });\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(store.route, expression, error, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender\n                (0, _dynamicrendering.postponeWithTracking)(store.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // legacy Prerender\n                workUnitStore.revalidate = 0;\n                const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E558\",\n                    enumerable: false,\n                    configurable: true\n                });\n                store.dynamicUsageDescription = expression;\n                store.dynamicUsageStack = err.stack;\n                throw err;\n            } else if ( true && workUnitStore && workUnitStore.type === 'request') {\n                workUnitStore.usedDynamic = true;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=draft-mode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/headers.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/request/headers.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"headers\", ({\n    enumerable: true,\n    get: function() {\n        return headers;\n    }\n}));\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nconst _utils = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\");\nfunction headers() {\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !(0, _utils.isRequestAPICallableInsideAfter)()) {\n            throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"headers\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after`), \"__NEXT_ERROR_CODE\", {\n                value: \"E367\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // headers object without tracking\n            const underlyingHeaders = _headers.HeadersAdapter.seal(new Headers({}));\n            return makeUntrackedExoticHeaders(underlyingHeaders);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E304\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(`Route ${workStore.route} used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E127\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`headers\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n                value: \"E525\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender') {\n                // dynamicIO Prerender\n                // We don't track dynamic access here because access will be tracked when you access\n                // one of the properties of the headers object.\n                return makeDynamicallyTrackedExoticHeaders(workStore.route, workUnitStore);\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                // We are prerendering with PPR. We need track dynamic access here eagerly\n                // to keep continuity with how headers has worked in PPR without dynamicIO.\n                // TODO consider switching the semantic to throw on property access instead\n                (0, _dynamicrendering.postponeWithTracking)(workStore.route, 'headers', workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                // Legacy Prerender\n                // We are in a legacy static generation mode while prerendering\n                // We track dynamic access here so we don't need to wrap the headers in\n                // individual property access tracking.\n                (0, _dynamicrendering.throwToInterruptStaticGeneration)('headers', workStore, workUnitStore);\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using headers inside a cache context\n        (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workStore, workUnitStore);\n    }\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)('headers');\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        return makeUntrackedExoticHeadersWithDevWarnings(requestStore.headers, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticHeaders(requestStore.headers);\n    }\n}\nconst CachedHeaders = new WeakMap();\nfunction makeDynamicallyTrackedExoticHeaders(route, prerenderStore) {\n    const cachedHeaders = CachedHeaders.get(prerenderStore);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, '`headers()`');\n    CachedHeaders.set(prerenderStore, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: function append() {\n                const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``;\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        delete: {\n            value: function _delete() {\n                const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        get: {\n            value: function get() {\n                const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        has: {\n            value: function has() {\n                const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``;\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        set: {\n            value: function set() {\n                const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``;\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        getSetCookie: {\n            value: function getSetCookie() {\n                const expression = '`headers().getSetCookie()`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        forEach: {\n            value: function forEach() {\n                const expression = '`headers().forEach(...)`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        keys: {\n            value: function keys() {\n                const expression = '`headers().keys()`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        values: {\n            value: function values() {\n                const expression = '`headers().values()`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        entries: {\n            value: function entries() {\n                const expression = '`headers().entries()`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        },\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`headers()[Symbol.iterator]()`';\n                const error = createHeadersAccessError(route, expression);\n                (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(route, expression, error, prerenderStore);\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticHeaders(underlyingHeaders) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = Promise.resolve(underlyingHeaders);\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: underlyingHeaders.append.bind(underlyingHeaders)\n        },\n        delete: {\n            value: underlyingHeaders.delete.bind(underlyingHeaders)\n        },\n        get: {\n            value: underlyingHeaders.get.bind(underlyingHeaders)\n        },\n        has: {\n            value: underlyingHeaders.has.bind(underlyingHeaders)\n        },\n        set: {\n            value: underlyingHeaders.set.bind(underlyingHeaders)\n        },\n        getSetCookie: {\n            value: underlyingHeaders.getSetCookie.bind(underlyingHeaders)\n        },\n        forEach: {\n            value: underlyingHeaders.forEach.bind(underlyingHeaders)\n        },\n        keys: {\n            value: underlyingHeaders.keys.bind(underlyingHeaders)\n        },\n        values: {\n            value: underlyingHeaders.values.bind(underlyingHeaders)\n        },\n        entries: {\n            value: underlyingHeaders.entries.bind(underlyingHeaders)\n        },\n        [Symbol.iterator]: {\n            value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticHeadersWithDevWarnings(underlyingHeaders, route) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingHeaders)));\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: function append() {\n                const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.append.apply(underlyingHeaders, arguments);\n            }\n        },\n        delete: {\n            value: function _delete() {\n                const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.delete.apply(underlyingHeaders, arguments);\n            }\n        },\n        get: {\n            value: function get() {\n                const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.get.apply(underlyingHeaders, arguments);\n            }\n        },\n        has: {\n            value: function has() {\n                const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.has.apply(underlyingHeaders, arguments);\n            }\n        },\n        set: {\n            value: function set() {\n                const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``;\n                syncIODev(route, expression);\n                return underlyingHeaders.set.apply(underlyingHeaders, arguments);\n            }\n        },\n        getSetCookie: {\n            value: function getSetCookie() {\n                const expression = '`headers().getSetCookie()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.getSetCookie.apply(underlyingHeaders, arguments);\n            }\n        },\n        forEach: {\n            value: function forEach() {\n                const expression = '`headers().forEach(...)`';\n                syncIODev(route, expression);\n                return underlyingHeaders.forEach.apply(underlyingHeaders, arguments);\n            }\n        },\n        keys: {\n            value: function keys() {\n                const expression = '`headers().keys()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.keys.apply(underlyingHeaders, arguments);\n            }\n        },\n        values: {\n            value: function values() {\n                const expression = '`headers().values()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.values.apply(underlyingHeaders, arguments);\n            }\n        },\n        entries: {\n            value: function entries() {\n                const expression = '`headers().entries()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.entries.apply(underlyingHeaders, arguments);\n            }\n        },\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...headers()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingHeaders[Symbol.iterator].apply(underlyingHeaders, arguments);\n            }\n        }\n    });\n    return promise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'string' ? `'${arg}'` : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createHeadersAccessError);\nfunction createHeadersAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`headers()\\` should be awaited before using its value. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E277\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/server/request/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isRequestAPICallableInsideAfter: function() {\n        return isRequestAPICallableInsideAfter;\n    },\n    throwForSearchParamsAccessInUseCache: function() {\n        return throwForSearchParamsAccessInUseCache;\n    },\n    throwWithStaticGenerationBailoutError: function() {\n        return throwWithStaticGenerationBailoutError;\n    },\n    throwWithStaticGenerationBailoutErrorWithDynamicError: function() {\n        return throwWithStaticGenerationBailoutErrorWithDynamicError;\n    }\n});\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _aftertaskasyncstorageexternal = __webpack_require__(/*! ../app-render/after-task-async-storage.external */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js\");\nfunction throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwForSearchParamsAccessInUseCache(workStore) {\n    const error = Object.defineProperty(new Error(`Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n    workStore.invalidUsageError ??= error;\n    throw error;\n}\nfunction isRequestAPICallableInsideAfter() {\n    const afterTaskStore = _aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBS0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGlDQUFpQyxtQkFBTyxDQUFDLHNKQUFtRDtBQUM1Rix1Q0FBdUMsbUJBQU8sQ0FBQyw0SkFBaUQ7QUFDaEc7QUFDQSw0RkFBNEYsT0FBTyxrREFBa0QsV0FBVztBQUNoSztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDRGQUE0RixPQUFPLDZFQUE2RSxXQUFXO0FBQzNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsMkRBQTJELGlCQUFpQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxzZXJ2ZXJcXHJlcXVlc3RcXHV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaXNSZXF1ZXN0QVBJQ2FsbGFibGVJbnNpZGVBZnRlcjogbnVsbCxcbiAgICB0aHJvd0ZvclNlYXJjaFBhcmFtc0FjY2Vzc0luVXNlQ2FjaGU6IG51bGwsXG4gICAgdGhyb3dXaXRoU3RhdGljR2VuZXJhdGlvbkJhaWxvdXRFcnJvcjogbnVsbCxcbiAgICB0aHJvd1dpdGhTdGF0aWNHZW5lcmF0aW9uQmFpbG91dEVycm9yV2l0aER5bmFtaWNFcnJvcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBpc1JlcXVlc3RBUElDYWxsYWJsZUluc2lkZUFmdGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGlzUmVxdWVzdEFQSUNhbGxhYmxlSW5zaWRlQWZ0ZXI7XG4gICAgfSxcbiAgICB0aHJvd0ZvclNlYXJjaFBhcmFtc0FjY2Vzc0luVXNlQ2FjaGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhyb3dGb3JTZWFyY2hQYXJhbXNBY2Nlc3NJblVzZUNhY2hlO1xuICAgIH0sXG4gICAgdGhyb3dXaXRoU3RhdGljR2VuZXJhdGlvbkJhaWxvdXRFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aHJvd1dpdGhTdGF0aWNHZW5lcmF0aW9uQmFpbG91dEVycm9yO1xuICAgIH0sXG4gICAgdGhyb3dXaXRoU3RhdGljR2VuZXJhdGlvbkJhaWxvdXRFcnJvcldpdGhEeW5hbWljRXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhyb3dXaXRoU3RhdGljR2VuZXJhdGlvbkJhaWxvdXRFcnJvcldpdGhEeW5hbWljRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBfc3RhdGljZ2VuZXJhdGlvbmJhaWxvdXQgPSByZXF1aXJlKFwiLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dFwiKTtcbmNvbnN0IF9hZnRlcnRhc2thc3luY3N0b3JhZ2VleHRlcm5hbCA9IHJlcXVpcmUoXCIuLi9hcHAtcmVuZGVyL2FmdGVyLXRhc2stYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiKTtcbmZ1bmN0aW9uIHRocm93V2l0aFN0YXRpY0dlbmVyYXRpb25CYWlsb3V0RXJyb3Iocm91dGUsIGV4cHJlc3Npb24pIHtcbiAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IF9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dC5TdGF0aWNHZW5CYWlsb3V0RXJyb3IoYFJvdXRlICR7cm91dGV9IGNvdWxkbid0IGJlIHJlbmRlcmVkIHN0YXRpY2FsbHkgYmVjYXVzZSBpdCB1c2VkICR7ZXhwcmVzc2lvbn0uIFNlZSBtb3JlIGluZm8gaGVyZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ2ApLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICAgICAgdmFsdWU6IFwiRTU3NlwiLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG59XG5mdW5jdGlvbiB0aHJvd1dpdGhTdGF0aWNHZW5lcmF0aW9uQmFpbG91dEVycm9yV2l0aER5bmFtaWNFcnJvcihyb3V0ZSwgZXhwcmVzc2lvbikge1xuICAgIHRocm93IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXcgX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0LlN0YXRpY0dlbkJhaWxvdXRFcnJvcihgUm91dGUgJHtyb3V0ZX0gd2l0aCBcXGBkeW5hbWljID0gXCJlcnJvclwiXFxgIGNvdWxkbid0IGJlIHJlbmRlcmVkIHN0YXRpY2FsbHkgYmVjYXVzZSBpdCB1c2VkICR7ZXhwcmVzc2lvbn0uIFNlZSBtb3JlIGluZm8gaGVyZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ2ApLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICAgICAgdmFsdWU6IFwiRTU0M1wiLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG59XG5mdW5jdGlvbiB0aHJvd0ZvclNlYXJjaFBhcmFtc0FjY2Vzc0luVXNlQ2FjaGUod29ya1N0b3JlKSB7XG4gICAgY29uc3QgZXJyb3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBSb3V0ZSAke3dvcmtTdG9yZS5yb3V0ZX0gdXNlZCBcInNlYXJjaFBhcmFtc1wiIGluc2lkZSBcInVzZSBjYWNoZVwiLiBBY2Nlc3NpbmcgRHluYW1pYyBkYXRhIHNvdXJjZXMgaW5zaWRlIGEgY2FjaGUgc2NvcGUgaXMgbm90IHN1cHBvcnRlZC4gSWYgeW91IG5lZWQgdGhpcyBkYXRhIGluc2lkZSBhIGNhY2hlZCBmdW5jdGlvbiB1c2UgXCJzZWFyY2hQYXJhbXNcIiBvdXRzaWRlIG9mIHRoZSBjYWNoZWQgZnVuY3Rpb24gYW5kIHBhc3MgdGhlIHJlcXVpcmVkIGR5bmFtaWMgZGF0YSBpbiBhcyBhbiBhcmd1bWVudC4gU2VlIG1vcmUgaW5mbyBoZXJlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LXJlcXVlc3QtaW4tdXNlLWNhY2hlYCksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICB2YWx1ZTogXCJFNjM0XCIsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICB3b3JrU3RvcmUuaW52YWxpZFVzYWdlRXJyb3IgPz89IGVycm9yO1xuICAgIHRocm93IGVycm9yO1xufVxuZnVuY3Rpb24gaXNSZXF1ZXN0QVBJQ2FsbGFibGVJbnNpZGVBZnRlcigpIHtcbiAgICBjb25zdCBhZnRlclRhc2tTdG9yZSA9IF9hZnRlcnRhc2thc3luY3N0b3JhZ2VleHRlcm5hbC5hZnRlclRhc2tBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICByZXR1cm4gKGFmdGVyVGFza1N0b3JlID09IG51bGwgPyB2b2lkIDAgOiBhZnRlclRhc2tTdG9yZS5yb290VGFza1NwYXduUGhhc2UpID09PSAnYWN0aW9uJztcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/headers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    HeadersAdapter: function() {\n        return HeadersAdapter;\n    },\n    ReadonlyHeadersError: function() {\n        return ReadonlyHeadersError;\n    }\n});\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return _reflect.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return _reflect.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return _reflect.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return _reflect.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return _reflect.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return _reflect.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ReflectAdapter\", ({\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n}));\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0RBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFx3ZWJcXHNwZWMtZXh0ZW5zaW9uXFxhZGFwdGVyc1xccmVmbGVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlZmxlY3RBZGFwdGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlcjtcbiAgICB9XG59KTtcbmNsYXNzIFJlZmxlY3RBZGFwdGVyIHtcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmJpbmQodGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHN0YXRpYyBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgc3RhdGljIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuaGFzKHRhcmdldCwgcHJvcCk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    MutableRequestCookiesAdapter: function() {\n        return MutableRequestCookiesAdapter;\n    },\n    ReadonlyRequestCookiesError: function() {\n        return ReadonlyRequestCookiesError;\n    },\n    RequestCookiesAdapter: function() {\n        return RequestCookiesAdapter;\n    },\n    appendMutableCookies: function() {\n        return appendMutableCookies;\n    },\n    areCookiesMutableInCurrentPhase: function() {\n        return areCookiesMutableInCurrentPhase;\n    },\n    getModifiedCookieValues: function() {\n        return getModifiedCookieValues;\n    },\n    responseCookiesToRequestCookies: function() {\n        return responseCookiesToRequestCookies;\n    },\n    wrapWithMutableAccessCheck: function() {\n        return wrapWithMutableAccessCheck;\n    }\n});\nconst _cookies = __webpack_require__(/*! ../cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../../../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../../../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nclass ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new _cookies.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nfunction wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nfunction areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nfunction responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new _cookies.RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RequestCookies: function() {\n        return _cookies.RequestCookies;\n    },\n    ResponseCookies: function() {\n        return _cookies.ResponseCookies;\n    },\n    stringifyCookie: function() {\n        return _cookies.stringifyCookie;\n    }\n});\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n\n//# sourceMappingURL=cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUlMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMsc0lBQTBDOztBQUVuRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcd2ViXFxzcGVjLWV4dGVuc2lvblxcY29va2llcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIFJlcXVlc3RDb29raWVzOiBudWxsLFxuICAgIFJlc3BvbnNlQ29va2llczogbnVsbCxcbiAgICBzdHJpbmdpZnlDb29raWU6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgUmVxdWVzdENvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXM7XG4gICAgfSxcbiAgICBSZXNwb25zZUNvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVzcG9uc2VDb29raWVzO1xuICAgIH0sXG4gICAgc3RyaW5naWZ5Q29va2llOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9jb29raWVzLnN0cmluZ2lmeUNvb2tpZTtcbiAgICB9XG59KTtcbmNvbnN0IF9jb29raWVzID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9AZWRnZS1ydW50aW1lL2Nvb2tpZXNcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-url.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatUrl: function() {\n        return formatUrl;\n    },\n    formatWithValidation: function() {\n        return formatWithValidation;\n    },\n    urlObjectKeys: function() {\n        return urlObjectKeys;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/next/node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _querystring = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n    let { auth, hostname } = urlObj;\n    let protocol = urlObj.protocol || '';\n    let pathname = urlObj.pathname || '';\n    let hash = urlObj.hash || '';\n    let query = urlObj.query || '';\n    let host = false;\n    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n    if (urlObj.host) {\n        host = auth + urlObj.host;\n    } else if (hostname) {\n        host = auth + (~hostname.indexOf(':') ? \"[\" + hostname + \"]\" : hostname);\n        if (urlObj.port) {\n            host += ':' + urlObj.port;\n        }\n    }\n    if (query && typeof query === 'object') {\n        query = String(_querystring.urlQueryToSearchParams(query));\n    }\n    let search = urlObj.search || query && \"?\" + query || '';\n    if (protocol && !protocol.endsWith(':')) protocol += ':';\n    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n        host = '//' + (host || '');\n        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n    } else if (!host) {\n        host = '';\n    }\n    if (hash && hash[0] !== '#') hash = '#' + hash;\n    if (search && search[0] !== '?') search = '?' + search;\n    pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n    search = search.replace('#', '%23');\n    return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes'\n];\nfunction formatWithValidation(url) {\n    if (true) {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach((key)=>{\n                if (!urlObjectKeys.includes(key)) {\n                    console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n                }\n            });\n        }\n    }\n    return formatUrl(url);\n} //# sourceMappingURL=format-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUM7QUFDdkMsc0RBQXNEO0FBQ3RELEVBQUU7QUFDRiwwRUFBMEU7QUFDMUUsZ0VBQWdFO0FBQ2hFLHNFQUFzRTtBQUN0RSxzRUFBc0U7QUFDdEUsNEVBQTRFO0FBQzVFLHFFQUFxRTtBQUNyRSx3QkFBd0I7QUFDeEIsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSx5REFBeUQ7QUFDekQsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSw2REFBNkQ7QUFDN0QsNEVBQTRFO0FBQzVFLDJFQUEyRTtBQUMzRSx3RUFBd0U7QUFDeEUsNEVBQTRFO0FBQzVFLHlDQUF5Qzs7Ozs7Ozs7Ozs7OztJQVF6QkEsU0FBUztlQUFUQTs7SUE2REFDLG9CQUFvQjtlQUFwQkE7O0lBZkhDLGFBQWE7ZUFBYkE7Ozs7bUZBbERnQjtBQUU3QixNQUFNQyxtQkFBbUI7QUFFbEIsU0FBU0gsVUFBVUksTUFBaUI7SUFDekMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRSxHQUFHRjtJQUN6QixJQUFJRyxXQUFXSCxPQUFPRyxRQUFRLElBQUk7SUFDbEMsSUFBSUMsV0FBV0osT0FBT0ksUUFBUSxJQUFJO0lBQ2xDLElBQUlDLE9BQU9MLE9BQU9LLElBQUksSUFBSTtJQUMxQixJQUFJQyxRQUFRTixPQUFPTSxLQUFLLElBQUk7SUFDNUIsSUFBSUMsT0FBdUI7SUFFM0JOLE9BQU9BLE9BQU9PLG1CQUFtQlAsTUFBTVEsT0FBTyxDQUFDLFFBQVEsT0FBTyxNQUFNO0lBRXBFLElBQUlULE9BQU9PLElBQUksRUFBRTtRQUNmQSxPQUFPTixPQUFPRCxPQUFPTyxJQUFJO0lBQzNCLE9BQU8sSUFBSUwsVUFBVTtRQUNuQkssT0FBT04sT0FBUSxFQUFDQyxTQUFTUSxPQUFPLENBQUMsT0FBUSxNQUFHUixXQUFTLE1BQUtBLFFBQUFBLENBQU87UUFDakUsSUFBSUYsT0FBT1csSUFBSSxFQUFFO1lBQ2ZKLFFBQVEsTUFBTVAsT0FBT1csSUFBSTtRQUMzQjtJQUNGO0lBRUEsSUFBSUwsU0FBUyxPQUFPQSxVQUFVLFVBQVU7UUFDdENBLFFBQVFNLE9BQU9DLGFBQVlDLHNCQUFzQixDQUFDUjtJQUNwRDtJQUVBLElBQUlTLFNBQVNmLE9BQU9lLE1BQU0sSUFBS1QsU0FBVSxNQUFHQSxTQUFZO0lBRXhELElBQUlILFlBQVksQ0FBQ0EsU0FBU2EsUUFBUSxDQUFDLE1BQU1iLFlBQVk7SUFFckQsSUFDRUgsT0FBT2lCLE9BQU8sSUFDWixFQUFDZCxZQUFZSixpQkFBaUJtQixJQUFJLENBQUNmLFNBQUFBLENBQVEsSUFBTUksU0FBUyxPQUM1RDtRQUNBQSxPQUFPLE9BQVFBLENBQUFBLFFBQVEsR0FBQztRQUN4QixJQUFJSCxZQUFZQSxRQUFRLENBQUMsRUFBRSxLQUFLLEtBQUtBLFdBQVcsTUFBTUE7SUFDeEQsT0FBTyxJQUFJLENBQUNHLE1BQU07UUFDaEJBLE9BQU87SUFDVDtJQUVBLElBQUlGLFFBQVFBLElBQUksQ0FBQyxFQUFFLEtBQUssS0FBS0EsT0FBTyxNQUFNQTtJQUMxQyxJQUFJVSxVQUFVQSxNQUFNLENBQUMsRUFBRSxLQUFLLEtBQUtBLFNBQVMsTUFBTUE7SUFFaERYLFdBQVdBLFNBQVNLLE9BQU8sQ0FBQyxTQUFTRDtJQUNyQ08sU0FBU0EsT0FBT04sT0FBTyxDQUFDLEtBQUs7SUFFN0IsT0FBUSxLQUFFTixXQUFXSSxPQUFPSCxXQUFXVyxTQUFTVjtBQUNsRDtBQUVPLE1BQU1QLGdCQUFnQjtJQUMzQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVNLFNBQVNELHFCQUFxQnNCLEdBQWM7SUFDakQsSUFBSUMsSUFBb0IsRUFBb0I7UUFDMUMsSUFBSUQsUUFBUSxRQUFRLE9BQU9BLFFBQVEsVUFBVTtZQUMzQ0ksT0FBT0MsSUFBSSxDQUFDTCxLQUFLTSxPQUFPLENBQUMsQ0FBQ0M7Z0JBQ3hCLElBQUksQ0FBQzVCLGNBQWM2QixRQUFRLENBQUNELE1BQU07b0JBQ2hDRSxRQUFRQyxJQUFJLENBQ1QsdURBQW9ESDtnQkFFekQ7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPOUIsVUFBVXVCO0FBQ25CIiwic291cmNlcyI6WyJDOlxcc3JjXFxzaGFyZWRcXGxpYlxccm91dGVyXFx1dGlsc1xcZm9ybWF0LXVybC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGb3JtYXQgZnVuY3Rpb24gbW9kaWZpZWQgZnJvbSBub2RlanNcbi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQgdHlwZSB7IFVybE9iamVjdCB9IGZyb20gJ3VybCdcbmltcG9ydCB0eXBlIHsgUGFyc2VkVXJsUXVlcnkgfSBmcm9tICdxdWVyeXN0cmluZydcbmltcG9ydCAqIGFzIHF1ZXJ5c3RyaW5nIGZyb20gJy4vcXVlcnlzdHJpbmcnXG5cbmNvbnN0IHNsYXNoZWRQcm90b2NvbHMgPSAvaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS9cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFVybCh1cmxPYmo6IFVybE9iamVjdCkge1xuICBsZXQgeyBhdXRoLCBob3N0bmFtZSB9ID0gdXJsT2JqXG4gIGxldCBwcm90b2NvbCA9IHVybE9iai5wcm90b2NvbCB8fCAnJ1xuICBsZXQgcGF0aG5hbWUgPSB1cmxPYmoucGF0aG5hbWUgfHwgJydcbiAgbGV0IGhhc2ggPSB1cmxPYmouaGFzaCB8fCAnJ1xuICBsZXQgcXVlcnkgPSB1cmxPYmoucXVlcnkgfHwgJydcbiAgbGV0IGhvc3Q6IHN0cmluZyB8IGZhbHNlID0gZmFsc2VcblxuICBhdXRoID0gYXV0aCA/IGVuY29kZVVSSUNvbXBvbmVudChhdXRoKS5yZXBsYWNlKC8lM0EvaSwgJzonKSArICdAJyA6ICcnXG5cbiAgaWYgKHVybE9iai5ob3N0KSB7XG4gICAgaG9zdCA9IGF1dGggKyB1cmxPYmouaG9zdFxuICB9IGVsc2UgaWYgKGhvc3RuYW1lKSB7XG4gICAgaG9zdCA9IGF1dGggKyAofmhvc3RuYW1lLmluZGV4T2YoJzonKSA/IGBbJHtob3N0bmFtZX1dYCA6IGhvc3RuYW1lKVxuICAgIGlmICh1cmxPYmoucG9ydCkge1xuICAgICAgaG9zdCArPSAnOicgKyB1cmxPYmoucG9ydFxuICAgIH1cbiAgfVxuXG4gIGlmIChxdWVyeSAmJiB0eXBlb2YgcXVlcnkgPT09ICdvYmplY3QnKSB7XG4gICAgcXVlcnkgPSBTdHJpbmcocXVlcnlzdHJpbmcudXJsUXVlcnlUb1NlYXJjaFBhcmFtcyhxdWVyeSBhcyBQYXJzZWRVcmxRdWVyeSkpXG4gIH1cblxuICBsZXQgc2VhcmNoID0gdXJsT2JqLnNlYXJjaCB8fCAocXVlcnkgJiYgYD8ke3F1ZXJ5fWApIHx8ICcnXG5cbiAgaWYgKHByb3RvY29sICYmICFwcm90b2NvbC5lbmRzV2l0aCgnOicpKSBwcm90b2NvbCArPSAnOidcblxuICBpZiAoXG4gICAgdXJsT2JqLnNsYXNoZXMgfHxcbiAgICAoKCFwcm90b2NvbCB8fCBzbGFzaGVkUHJvdG9jb2xzLnRlc3QocHJvdG9jb2wpKSAmJiBob3N0ICE9PSBmYWxzZSlcbiAgKSB7XG4gICAgaG9zdCA9ICcvLycgKyAoaG9zdCB8fCAnJylcbiAgICBpZiAocGF0aG5hbWUgJiYgcGF0aG5hbWVbMF0gIT09ICcvJykgcGF0aG5hbWUgPSAnLycgKyBwYXRobmFtZVxuICB9IGVsc2UgaWYgKCFob3N0KSB7XG4gICAgaG9zdCA9ICcnXG4gIH1cblxuICBpZiAoaGFzaCAmJiBoYXNoWzBdICE9PSAnIycpIGhhc2ggPSAnIycgKyBoYXNoXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoWzBdICE9PSAnPycpIHNlYXJjaCA9ICc/JyArIHNlYXJjaFxuXG4gIHBhdGhuYW1lID0gcGF0aG5hbWUucmVwbGFjZSgvWz8jXS9nLCBlbmNvZGVVUklDb21wb25lbnQpXG4gIHNlYXJjaCA9IHNlYXJjaC5yZXBsYWNlKCcjJywgJyUyMycpXG5cbiAgcmV0dXJuIGAke3Byb3RvY29sfSR7aG9zdH0ke3BhdGhuYW1lfSR7c2VhcmNofSR7aGFzaH1gXG59XG5cbmV4cG9ydCBjb25zdCB1cmxPYmplY3RLZXlzID0gW1xuICAnYXV0aCcsXG4gICdoYXNoJyxcbiAgJ2hvc3QnLFxuICAnaG9zdG5hbWUnLFxuICAnaHJlZicsXG4gICdwYXRoJyxcbiAgJ3BhdGhuYW1lJyxcbiAgJ3BvcnQnLFxuICAncHJvdG9jb2wnLFxuICAncXVlcnknLFxuICAnc2VhcmNoJyxcbiAgJ3NsYXNoZXMnLFxuXVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0V2l0aFZhbGlkYXRpb24odXJsOiBVcmxPYmplY3QpOiBzdHJpbmcge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICBpZiAodXJsICE9PSBudWxsICYmIHR5cGVvZiB1cmwgPT09ICdvYmplY3QnKSB7XG4gICAgICBPYmplY3Qua2V5cyh1cmwpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBpZiAoIXVybE9iamVjdEtleXMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgIGBVbmtub3duIGtleSBwYXNzZWQgdmlhIHVybE9iamVjdCBpbnRvIHVybC5mb3JtYXQ6ICR7a2V5fWBcbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZvcm1hdFVybCh1cmwpXG59XG4iXSwibmFtZXMiOlsiZm9ybWF0VXJsIiwiZm9ybWF0V2l0aFZhbGlkYXRpb24iLCJ1cmxPYmplY3RLZXlzIiwic2xhc2hlZFByb3RvY29scyIsInVybE9iaiIsImF1dGgiLCJob3N0bmFtZSIsInByb3RvY29sIiwicGF0aG5hbWUiLCJoYXNoIiwicXVlcnkiLCJob3N0IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsImluZGV4T2YiLCJwb3J0IiwiU3RyaW5nIiwicXVlcnlzdHJpbmciLCJ1cmxRdWVyeVRvU2VhcmNoUGFyYW1zIiwic2VhcmNoIiwiZW5kc1dpdGgiLCJzbGFzaGVzIiwidGVzdCIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiaW5jbHVkZXMiLCJjb25zb2xlIiwid2FybiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-local-url.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isLocalURL\", ({\n    enumerable: true,\n    get: function() {\n        return isLocalURL;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _hasbasepath = __webpack_require__(/*! ../../../../client/has-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/has-base-path.js\");\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils.getLocationOrigin)();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n} //# sourceMappingURL=is-local-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OENBTWdCQTs7O2VBQUFBOzs7bUNBTmlDO3lDQUNyQjtBQUtyQixTQUFTQSxXQUFXQyxHQUFXO0lBQ3BDLGdFQUFnRTtJQUNoRSxJQUFJLENBQUNDLENBQUFBLEdBQUFBLE9BQUFBLGFBQUFBLEVBQWNELE1BQU0sT0FBTztJQUNoQyxJQUFJO1FBQ0YsNERBQTREO1FBQzVELE1BQU1FLGlCQUFpQkMsQ0FBQUEsR0FBQUEsT0FBQUEsaUJBQUFBO1FBQ3ZCLE1BQU1DLFdBQVcsSUFBSUMsSUFBSUwsS0FBS0U7UUFDOUIsT0FBT0UsU0FBU0UsTUFBTSxLQUFLSixrQkFBa0JLLENBQUFBLEdBQUFBLGFBQUFBLFdBQUFBLEVBQVlILFNBQVNJLFFBQVE7SUFDNUUsRUFBRSxPQUFPQyxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxzcmNcXHNoYXJlZFxcbGliXFxyb3V0ZXJcXHV0aWxzXFxpcy1sb2NhbC11cmwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBYnNvbHV0ZVVybCwgZ2V0TG9jYXRpb25PcmlnaW4gfSBmcm9tICcuLi8uLi91dGlscydcbmltcG9ydCB7IGhhc0Jhc2VQYXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vY2xpZW50L2hhcy1iYXNlLXBhdGgnXG5cbi8qKlxuICogRGV0ZWN0cyB3aGV0aGVyIGEgZ2l2ZW4gdXJsIGlzIHJvdXRhYmxlIGJ5IHRoZSBOZXh0LmpzIHJvdXRlciAoYnJvd3NlciBvbmx5KS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYWxVUkwodXJsOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgLy8gcHJldmVudCBhIGh5ZHJhdGlvbiBtaXNtYXRjaCBvbiBocmVmIGZvciB1cmwgd2l0aCBhbmNob3IgcmVmc1xuICBpZiAoIWlzQWJzb2x1dGVVcmwodXJsKSkgcmV0dXJuIHRydWVcbiAgdHJ5IHtcbiAgICAvLyBhYnNvbHV0ZSB1cmxzIGNhbiBiZSBsb2NhbCBpZiB0aGV5IGFyZSBvbiB0aGUgc2FtZSBvcmlnaW5cbiAgICBjb25zdCBsb2NhdGlvbk9yaWdpbiA9IGdldExvY2F0aW9uT3JpZ2luKClcbiAgICBjb25zdCByZXNvbHZlZCA9IG5ldyBVUkwodXJsLCBsb2NhdGlvbk9yaWdpbilcbiAgICByZXR1cm4gcmVzb2x2ZWQub3JpZ2luID09PSBsb2NhdGlvbk9yaWdpbiAmJiBoYXNCYXNlUGF0aChyZXNvbHZlZC5wYXRobmFtZSlcbiAgfSBjYXRjaCAoXykge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG4iXSwibmFtZXMiOlsiaXNMb2NhbFVSTCIsInVybCIsImlzQWJzb2x1dGVVcmwiLCJsb2NhdGlvbk9yaWdpbiIsImdldExvY2F0aW9uT3JpZ2luIiwicmVzb2x2ZWQiLCJVUkwiLCJvcmlnaW4iLCJoYXNCYXNlUGF0aCIsInBhdGhuYW1lIiwiXyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/querystring.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    assign: function() {\n        return assign;\n    },\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    for (const [key, value] of searchParams.entries()){\n        const existing = query[key];\n        if (typeof existing === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            query[key] = [\n                existing,\n                value\n            ];\n        }\n    }\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string') {\n        return param;\n    }\n    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(query) {\n    const searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(query)){\n        if (Array.isArray(value)) {\n            for (const item of value){\n                searchParams.append(key, stringifyUrlQueryParam(item));\n            }\n        } else {\n            searchParams.set(key, stringifyUrlQueryParam(value));\n        }\n    }\n    return searchParams;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    for (const searchParams of searchParamsList){\n        for (const key of searchParams.keys()){\n            target.delete(key);\n        }\n        for (const [key, value] of searchParams.entries()){\n            target.append(key, value);\n        }\n    }\n    return target;\n} //# sourceMappingURL=querystring.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBZ0RnQkEsTUFBTTtlQUFOQTs7SUE5Q0FDLHNCQUFzQjtlQUF0QkE7O0lBZ0NBQyxzQkFBc0I7ZUFBdEJBOzs7QUFoQ1QsU0FBU0QsdUJBQ2RFLFlBQTZCO0lBRTdCLE1BQU1DLFFBQXdCLENBQUM7SUFDL0IsS0FBSyxNQUFNLENBQUNDLEtBQUtDLE1BQU0sSUFBSUgsYUFBYUksT0FBTyxHQUFJO1FBQ2pELE1BQU1DLFdBQVdKLEtBQUssQ0FBQ0MsSUFBSTtRQUMzQixJQUFJLE9BQU9HLGFBQWEsYUFBYTtZQUNuQ0osS0FBSyxDQUFDQyxJQUFJLEdBQUdDO1FBQ2YsT0FBTyxJQUFJRyxNQUFNQyxPQUFPLENBQUNGLFdBQVc7WUFDbENBLFNBQVNHLElBQUksQ0FBQ0w7UUFDaEIsT0FBTztZQUNMRixLQUFLLENBQUNDLElBQUksR0FBRztnQkFBQ0c7Z0JBQVVGO2FBQU07UUFDaEM7SUFDRjtJQUNBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTUSx1QkFBdUJDLEtBQWM7SUFDNUMsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBT0E7SUFDVDtJQUVBLElBQ0csT0FBT0EsVUFBVSxZQUFZLENBQUNDLE1BQU1ELFVBQ3JDLE9BQU9BLFVBQVUsV0FDakI7UUFDQSxPQUFPRSxPQUFPRjtJQUNoQixPQUFPO1FBQ0wsT0FBTztJQUNUO0FBQ0Y7QUFFTyxTQUFTWCx1QkFBdUJFLEtBQXFCO0lBQzFELE1BQU1ELGVBQWUsSUFBSWE7SUFDekIsS0FBSyxNQUFNLENBQUNYLEtBQUtDLE1BQU0sSUFBSVcsT0FBT1YsT0FBTyxDQUFDSCxPQUFRO1FBQ2hELElBQUlLLE1BQU1DLE9BQU8sQ0FBQ0osUUFBUTtZQUN4QixLQUFLLE1BQU1ZLFFBQVFaLE1BQU87Z0JBQ3hCSCxhQUFhZ0IsTUFBTSxDQUFDZCxLQUFLTyx1QkFBdUJNO1lBQ2xEO1FBQ0YsT0FBTztZQUNMZixhQUFhaUIsR0FBRyxDQUFDZixLQUFLTyx1QkFBdUJOO1FBQy9DO0lBQ0Y7SUFDQSxPQUFPSDtBQUNUO0FBRU8sU0FBU0gsT0FDZHFCLE1BQXVCO0lBQ3ZCLGlDQUFHQyxtQkFBSDtRQUFHQSxnQkFBQUEsQ0FBSCwyQkFBc0M7O0lBRXRDLEtBQUssTUFBTW5CLGdCQUFnQm1CLGlCQUFrQjtRQUMzQyxLQUFLLE1BQU1qQixPQUFPRixhQUFhb0IsSUFBSSxHQUFJO1lBQ3JDRixPQUFPRyxNQUFNLENBQUNuQjtRQUNoQjtRQUVBLEtBQUssTUFBTSxDQUFDQSxLQUFLQyxNQUFNLElBQUlILGFBQWFJLE9BQU8sR0FBSTtZQUNqRGMsT0FBT0YsTUFBTSxDQUFDZCxLQUFLQztRQUNyQjtJQUNGO0lBRUEsT0FBT2U7QUFDVCIsInNvdXJjZXMiOlsiQzpcXHNyY1xcc2hhcmVkXFxsaWJcXHJvdXRlclxcdXRpbHNcXHF1ZXJ5c3RyaW5nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUGFyc2VkVXJsUXVlcnkgfSBmcm9tICdxdWVyeXN0cmluZydcblxuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnkoXG4gIHNlYXJjaFBhcmFtczogVVJMU2VhcmNoUGFyYW1zXG4pOiBQYXJzZWRVcmxRdWVyeSB7XG4gIGNvbnN0IHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeSA9IHt9XG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNlYXJjaFBhcmFtcy5lbnRyaWVzKCkpIHtcbiAgICBjb25zdCBleGlzdGluZyA9IHF1ZXJ5W2tleV1cbiAgICBpZiAodHlwZW9mIGV4aXN0aW5nID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcXVlcnlba2V5XSA9IHZhbHVlXG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGV4aXN0aW5nKSkge1xuICAgICAgZXhpc3RpbmcucHVzaCh2YWx1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgcXVlcnlba2V5XSA9IFtleGlzdGluZywgdmFsdWVdXG4gICAgfVxuICB9XG4gIHJldHVybiBxdWVyeVxufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKHBhcmFtOiB1bmtub3duKTogc3RyaW5nIHtcbiAgaWYgKHR5cGVvZiBwYXJhbSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcGFyYW1cbiAgfVxuXG4gIGlmIChcbiAgICAodHlwZW9mIHBhcmFtID09PSAnbnVtYmVyJyAmJiAhaXNOYU4ocGFyYW0pKSB8fFxuICAgIHR5cGVvZiBwYXJhbSA9PT0gJ2Jvb2xlYW4nXG4gICkge1xuICAgIHJldHVybiBTdHJpbmcocGFyYW0pXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICcnXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMocXVlcnk6IFBhcnNlZFVybFF1ZXJ5KTogVVJMU2VhcmNoUGFyYW1zIHtcbiAgY29uc3Qgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpXG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHF1ZXJ5KSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKGl0ZW0pKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzZWFyY2hQYXJhbXMuc2V0KGtleSwgc3RyaW5naWZ5VXJsUXVlcnlQYXJhbSh2YWx1ZSkpXG4gICAgfVxuICB9XG4gIHJldHVybiBzZWFyY2hQYXJhbXNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbihcbiAgdGFyZ2V0OiBVUkxTZWFyY2hQYXJhbXMsXG4gIC4uLnNlYXJjaFBhcmFtc0xpc3Q6IFVSTFNlYXJjaFBhcmFtc1tdXG4pOiBVUkxTZWFyY2hQYXJhbXMge1xuICBmb3IgKGNvbnN0IHNlYXJjaFBhcmFtcyBvZiBzZWFyY2hQYXJhbXNMaXN0KSB7XG4gICAgZm9yIChjb25zdCBrZXkgb2Ygc2VhcmNoUGFyYW1zLmtleXMoKSkge1xuICAgICAgdGFyZ2V0LmRlbGV0ZShrZXkpXG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2Ygc2VhcmNoUGFyYW1zLmVudHJpZXMoKSkge1xuICAgICAgdGFyZ2V0LmFwcGVuZChrZXksIHZhbHVlKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRcbn1cbiJdLCJuYW1lcyI6WyJhc3NpZ24iLCJzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5IiwidXJsUXVlcnlUb1NlYXJjaFBhcmFtcyIsInNlYXJjaFBhcmFtcyIsInF1ZXJ5Iiwia2V5IiwidmFsdWUiLCJlbnRyaWVzIiwiZXhpc3RpbmciLCJBcnJheSIsImlzQXJyYXkiLCJwdXNoIiwic3RyaW5naWZ5VXJsUXVlcnlQYXJhbSIsInBhcmFtIiwiaXNOYU4iLCJTdHJpbmciLCJVUkxTZWFyY2hQYXJhbXMiLCJPYmplY3QiLCJpdGVtIiwiYXBwZW5kIiwic2V0IiwidGFyZ2V0Iiwic2VhcmNoUGFyYW1zTGlzdCIsImtleXMiLCJkZWxldGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DecodeError: function() {\n        return DecodeError;\n    },\n    MiddlewareNotFoundError: function() {\n        return MiddlewareNotFoundError;\n    },\n    MissingStaticPage: function() {\n        return MissingStaticPage;\n    },\n    NormalizeError: function() {\n        return NormalizeError;\n    },\n    PageNotFoundError: function() {\n        return PageNotFoundError;\n    },\n    SP: function() {\n        return SP;\n    },\n    ST: function() {\n        return ST;\n    },\n    WEB_VITALS: function() {\n        return WEB_VITALS;\n    },\n    execOnce: function() {\n        return execOnce;\n    },\n    getDisplayName: function() {\n        return getDisplayName;\n    },\n    getLocationOrigin: function() {\n        return getLocationOrigin;\n    },\n    getURL: function() {\n        return getURL;\n    },\n    isAbsoluteUrl: function() {\n        return isAbsoluteUrl;\n    },\n    isResSent: function() {\n        return isResSent;\n    },\n    loadGetInitialProps: function() {\n        return loadGetInitialProps;\n    },\n    normalizeRepeatedSlashes: function() {\n        return normalizeRepeatedSlashes;\n    },\n    stringifyError: function() {\n        return stringifyError;\n    }\n});\nconst WEB_VITALS = [\n    'CLS',\n    'FCP',\n    'FID',\n    'INP',\n    'LCP',\n    'TTFB'\n];\nfunction execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? ':' + port : '');\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split('?');\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, '/').replace(/\\/\\/+/g, '/') + (urlParts[1] ? \"?\" + urlParts.slice(1).join('?') : '');\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== 'undefined';\nconst ST = SP && [\n    'mark',\n    'measure',\n    'getEntriesByName'\n].every((method)=>typeof performance[method] === 'function');\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = 'ENOENT';\n        this.name = 'PageNotFoundError';\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = 'ENOENT';\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils/error-once.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"errorOnce\", ({\n    enumerable: true,\n    get: function() {\n        return errorOnce;\n    }\n}));\nlet errorOnce = (_)=>{};\nif (true) {\n    const errors = new Set();\n    errorOnce = (msg)=>{\n        if (!errors.has(msg)) {\n            console.error(msg);\n        }\n        errors.add(msg);\n    };\n} //# sourceMappingURL=error-once.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi91dGlscy9lcnJvci1vbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7NkNBV1NBOzs7ZUFBQUE7OztBQVhULElBQUlBLFlBQVksQ0FBQ0MsS0FBZTtBQUNoQyxJQUFJQyxJQUFvQixFQUFtQjtJQUN6QyxNQUFNRyxTQUFTLElBQUlDO0lBQ25CTixZQUFZLENBQUNPO1FBQ1gsSUFBSSxDQUFDRixPQUFPRyxHQUFHLENBQUNELE1BQU07WUFDcEJFLFFBQVFDLEtBQUssQ0FBQ0g7UUFDaEI7UUFDQUYsT0FBT00sR0FBRyxDQUFDSjtJQUNiO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc3JjXFxzaGFyZWRcXGxpYlxcdXRpbHNcXGVycm9yLW9uY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGVycm9yT25jZSA9IChfOiBzdHJpbmcpID0+IHt9XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0PHN0cmluZz4oKVxuICBlcnJvck9uY2UgPSAobXNnOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWVycm9ycy5oYXMobXNnKSkge1xuICAgICAgY29uc29sZS5lcnJvcihtc2cpXG4gICAgfVxuICAgIGVycm9ycy5hZGQobXNnKVxuICB9XG59XG5cbmV4cG9ydCB7IGVycm9yT25jZSB9XG4iXSwibmFtZXMiOlsiZXJyb3JPbmNlIiwiXyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImVycm9ycyIsIlNldCIsIm1zZyIsImhhcyIsImNvbnNvbGUiLCJlcnJvciIsImFkZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/oauth4webapi/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/oauth4webapi/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationProcessingError: () => (/* binding */ OperationProcessingError),\n/* harmony export */   UnsupportedOperationError: () => (/* binding */ UnsupportedOperationError),\n/* harmony export */   authorizationCodeGrantRequest: () => (/* binding */ authorizationCodeGrantRequest),\n/* harmony export */   calculatePKCECodeChallenge: () => (/* binding */ calculatePKCECodeChallenge),\n/* harmony export */   clientCredentialsGrantRequest: () => (/* binding */ clientCredentialsGrantRequest),\n/* harmony export */   clockSkew: () => (/* binding */ clockSkew),\n/* harmony export */   clockTolerance: () => (/* binding */ clockTolerance),\n/* harmony export */   customFetch: () => (/* binding */ customFetch),\n/* harmony export */   deviceAuthorizationRequest: () => (/* binding */ deviceAuthorizationRequest),\n/* harmony export */   deviceCodeGrantRequest: () => (/* binding */ deviceCodeGrantRequest),\n/* harmony export */   discoveryRequest: () => (/* binding */ discoveryRequest),\n/* harmony export */   expectNoNonce: () => (/* binding */ expectNoNonce),\n/* harmony export */   expectNoState: () => (/* binding */ expectNoState),\n/* harmony export */   experimentalCustomFetch: () => (/* binding */ experimentalCustomFetch),\n/* harmony export */   experimentalUseMtlsAlias: () => (/* binding */ experimentalUseMtlsAlias),\n/* harmony export */   experimental_customFetch: () => (/* binding */ experimental_customFetch),\n/* harmony export */   experimental_jwksCache: () => (/* binding */ experimental_jwksCache),\n/* harmony export */   experimental_useMtlsAlias: () => (/* binding */ experimental_useMtlsAlias),\n/* harmony export */   experimental_validateDetachedSignatureResponse: () => (/* binding */ experimental_validateDetachedSignatureResponse),\n/* harmony export */   experimental_validateJwtAccessToken: () => (/* binding */ experimental_validateJwtAccessToken),\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   generateRandomCodeVerifier: () => (/* binding */ generateRandomCodeVerifier),\n/* harmony export */   generateRandomNonce: () => (/* binding */ generateRandomNonce),\n/* harmony export */   generateRandomState: () => (/* binding */ generateRandomState),\n/* harmony export */   genericTokenEndpointRequest: () => (/* binding */ genericTokenEndpointRequest),\n/* harmony export */   getValidatedIdTokenClaims: () => (/* binding */ getValidatedIdTokenClaims),\n/* harmony export */   introspectionRequest: () => (/* binding */ introspectionRequest),\n/* harmony export */   isOAuth2Error: () => (/* binding */ isOAuth2Error),\n/* harmony export */   issueRequestObject: () => (/* binding */ issueRequestObject),\n/* harmony export */   jweDecrypt: () => (/* binding */ jweDecrypt),\n/* harmony export */   jwksCache: () => (/* binding */ jwksCache),\n/* harmony export */   modifyAssertion: () => (/* binding */ modifyAssertion),\n/* harmony export */   parseWwwAuthenticateChallenges: () => (/* binding */ parseWwwAuthenticateChallenges),\n/* harmony export */   processAuthorizationCodeOAuth2Response: () => (/* binding */ processAuthorizationCodeOAuth2Response),\n/* harmony export */   processAuthorizationCodeOpenIDResponse: () => (/* binding */ processAuthorizationCodeOpenIDResponse),\n/* harmony export */   processClientCredentialsResponse: () => (/* binding */ processClientCredentialsResponse),\n/* harmony export */   processDeviceAuthorizationResponse: () => (/* binding */ processDeviceAuthorizationResponse),\n/* harmony export */   processDeviceCodeResponse: () => (/* binding */ processDeviceCodeResponse),\n/* harmony export */   processDiscoveryResponse: () => (/* binding */ processDiscoveryResponse),\n/* harmony export */   processIntrospectionResponse: () => (/* binding */ processIntrospectionResponse),\n/* harmony export */   processPushedAuthorizationResponse: () => (/* binding */ processPushedAuthorizationResponse),\n/* harmony export */   processRefreshTokenResponse: () => (/* binding */ processRefreshTokenResponse),\n/* harmony export */   processRevocationResponse: () => (/* binding */ processRevocationResponse),\n/* harmony export */   processUserInfoResponse: () => (/* binding */ processUserInfoResponse),\n/* harmony export */   protectedResourceRequest: () => (/* binding */ protectedResourceRequest),\n/* harmony export */   pushedAuthorizationRequest: () => (/* binding */ pushedAuthorizationRequest),\n/* harmony export */   refreshTokenGrantRequest: () => (/* binding */ refreshTokenGrantRequest),\n/* harmony export */   revocationRequest: () => (/* binding */ revocationRequest),\n/* harmony export */   skipAuthTimeCheck: () => (/* binding */ skipAuthTimeCheck),\n/* harmony export */   skipStateCheck: () => (/* binding */ skipStateCheck),\n/* harmony export */   skipSubjectCheck: () => (/* binding */ skipSubjectCheck),\n/* harmony export */   useMtlsAlias: () => (/* binding */ useMtlsAlias),\n/* harmony export */   userInfoRequest: () => (/* binding */ userInfoRequest),\n/* harmony export */   validateAuthResponse: () => (/* binding */ validateAuthResponse),\n/* harmony export */   validateDetachedSignatureResponse: () => (/* binding */ validateDetachedSignatureResponse),\n/* harmony export */   validateIdTokenSignature: () => (/* binding */ validateIdTokenSignature),\n/* harmony export */   validateJwtAccessToken: () => (/* binding */ validateJwtAccessToken),\n/* harmony export */   validateJwtAuthResponse: () => (/* binding */ validateJwtAuthResponse),\n/* harmony export */   validateJwtIntrospectionSignature: () => (/* binding */ validateJwtIntrospectionSignature),\n/* harmony export */   validateJwtUserInfoSignature: () => (/* binding */ validateJwtUserInfoSignature),\n/* harmony export */   validateJwtUserinfoSignature: () => (/* binding */ validateJwtUserinfoSignature)\n/* harmony export */ });\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'oauth4webapi';\n    const VERSION = 'v2.17.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nfunction looseInstanceOf(input, expected) {\n    if (input == null) {\n        return false;\n    }\n    try {\n        return (input instanceof expected ||\n            Object.getPrototypeOf(input)[Symbol.toStringTag] === expected.prototype[Symbol.toStringTag]);\n    }\n    catch {\n        return false;\n    }\n}\nconst clockSkew = Symbol();\nconst clockTolerance = Symbol();\nconst customFetch = Symbol();\nconst modifyAssertion = Symbol();\nconst jweDecrypt = Symbol();\nconst jwksCache = Symbol();\nconst useMtlsAlias = Symbol();\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nfunction buf(input) {\n    if (typeof input === 'string') {\n        return encoder.encode(input);\n    }\n    return decoder.decode(input);\n}\nconst CHUNK_SIZE = 0x8000;\nfunction encodeBase64Url(input) {\n    if (input instanceof ArrayBuffer) {\n        input = new Uint8Array(input);\n    }\n    const arr = [];\n    for (let i = 0; i < input.byteLength; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join('')).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction decodeBase64Url(input) {\n    try {\n        const binary = atob(input.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, ''));\n        const bytes = new Uint8Array(binary.length);\n        for (let i = 0; i < binary.length; i++) {\n            bytes[i] = binary.charCodeAt(i);\n        }\n        return bytes;\n    }\n    catch (cause) {\n        throw new OPE('The input to be decoded is not correctly encoded.', { cause });\n    }\n}\nfunction b64u(input) {\n    if (typeof input === 'string') {\n        return decodeBase64Url(input);\n    }\n    return encodeBase64Url(input);\n}\nclass LRU {\n    constructor(maxSize) {\n        this.cache = new Map();\n        this._cache = new Map();\n        this.maxSize = maxSize;\n    }\n    get(key) {\n        let v = this.cache.get(key);\n        if (v) {\n            return v;\n        }\n        if ((v = this._cache.get(key))) {\n            this.update(key, v);\n            return v;\n        }\n        return undefined;\n    }\n    has(key) {\n        return this.cache.has(key) || this._cache.has(key);\n    }\n    set(key, value) {\n        if (this.cache.has(key)) {\n            this.cache.set(key, value);\n        }\n        else {\n            this.update(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.cache.has(key)) {\n            return this.cache.delete(key);\n        }\n        if (this._cache.has(key)) {\n            return this._cache.delete(key);\n        }\n        return false;\n    }\n    update(key, value) {\n        this.cache.set(key, value);\n        if (this.cache.size >= this.maxSize) {\n            this._cache = this.cache;\n            this.cache = new Map();\n        }\n    }\n}\nclass UnsupportedOperationError extends Error {\n    constructor(message) {\n        super(message ?? 'operation not supported');\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nclass OperationProcessingError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nconst OPE = OperationProcessingError;\nconst dpopNonces = new LRU(100);\nfunction isCryptoKey(key) {\n    return key instanceof CryptoKey;\n}\nfunction isPrivateKey(key) {\n    return isCryptoKey(key) && key.type === 'private';\n}\nfunction isPublicKey(key) {\n    return isCryptoKey(key) && key.type === 'public';\n}\nconst SUPPORTED_JWS_ALGS = [\n    'PS256',\n    'ES256',\n    'RS256',\n    'PS384',\n    'ES384',\n    'RS384',\n    'PS512',\n    'ES512',\n    'RS512',\n    'EdDSA',\n];\nfunction processDpopNonce(response) {\n    try {\n        const nonce = response.headers.get('dpop-nonce');\n        if (nonce) {\n            dpopNonces.set(new URL(response.url).origin, nonce);\n        }\n    }\n    catch { }\n    return response;\n}\nfunction normalizeTyp(value) {\n    return value.toLowerCase().replace(/^application\\//, '');\n}\nfunction isJsonObject(input) {\n    if (input === null || typeof input !== 'object' || Array.isArray(input)) {\n        return false;\n    }\n    return true;\n}\nfunction prepareHeaders(input) {\n    if (looseInstanceOf(input, Headers)) {\n        input = Object.fromEntries(input.entries());\n    }\n    const headers = new Headers(input);\n    if (USER_AGENT && !headers.has('user-agent')) {\n        headers.set('user-agent', USER_AGENT);\n    }\n    if (headers.has('authorization')) {\n        throw new TypeError('\"options.headers\" must not include the \"authorization\" header name');\n    }\n    if (headers.has('dpop')) {\n        throw new TypeError('\"options.headers\" must not include the \"dpop\" header name');\n    }\n    return headers;\n}\nfunction signal(value) {\n    if (typeof value === 'function') {\n        value = value();\n    }\n    if (!(value instanceof AbortSignal)) {\n        throw new TypeError('\"options.signal\" must return or be an instance of AbortSignal');\n    }\n    return value;\n}\nasync function discoveryRequest(issuerIdentifier, options) {\n    if (!(issuerIdentifier instanceof URL)) {\n        throw new TypeError('\"issuerIdentifier\" must be an instance of URL');\n    }\n    if (issuerIdentifier.protocol !== 'https:' && issuerIdentifier.protocol !== 'http:') {\n        throw new TypeError('\"issuer.protocol\" must be \"https:\" or \"http:\"');\n    }\n    const url = new URL(issuerIdentifier.href);\n    switch (options?.algorithm) {\n        case undefined:\n        case 'oidc':\n            url.pathname = `${url.pathname}/.well-known/openid-configuration`.replace('//', '/');\n            break;\n        case 'oauth2':\n            if (url.pathname === '/') {\n                url.pathname = '.well-known/oauth-authorization-server';\n            }\n            else {\n                url.pathname = `.well-known/oauth-authorization-server/${url.pathname}`.replace('//', '/');\n            }\n            break;\n        default:\n            throw new TypeError('\"options.algorithm\" must be \"oidc\" (default), or \"oauth2\"');\n    }\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return (options?.[customFetch] || fetch)(url.href, {\n        headers: Object.fromEntries(headers.entries()),\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nfunction validateString(input) {\n    return typeof input === 'string' && input.length !== 0;\n}\nasync function processDiscoveryResponse(expectedIssuerIdentifier, response) {\n    if (!(expectedIssuerIdentifier instanceof URL)) {\n        throw new TypeError('\"expectedIssuer\" must be an instance of URL');\n    }\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform Authorization Server Metadata response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.issuer)) {\n        throw new OPE('\"response\" body \"issuer\" property must be a non-empty string');\n    }\n    if (new URL(json.issuer).href !== expectedIssuerIdentifier.href) {\n        throw new OPE('\"response\" body \"issuer\" does not match \"expectedIssuer\"');\n    }\n    return json;\n}\nfunction randomBytes() {\n    return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction generateRandomCodeVerifier() {\n    return randomBytes();\n}\nfunction generateRandomState() {\n    return randomBytes();\n}\nfunction generateRandomNonce() {\n    return randomBytes();\n}\nasync function calculatePKCECodeChallenge(codeVerifier) {\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    return b64u(await crypto.subtle.digest('SHA-256', buf(codeVerifier)));\n}\nfunction getKeyAndKid(input) {\n    if (input instanceof CryptoKey) {\n        return { key: input };\n    }\n    if (!(input?.key instanceof CryptoKey)) {\n        return {};\n    }\n    if (input.kid !== undefined && !validateString(input.kid)) {\n        throw new TypeError('\"kid\" must be a non-empty string');\n    }\n    return {\n        key: input.key,\n        kid: input.kid,\n        modifyAssertion: input[modifyAssertion],\n    };\n}\nfunction formUrlEncode(token) {\n    return encodeURIComponent(token).replace(/%20/g, '+');\n}\nfunction clientSecretBasic(clientId, clientSecret) {\n    const username = formUrlEncode(clientId);\n    const password = formUrlEncode(clientSecret);\n    const credentials = btoa(`${username}:${password}`);\n    return `Basic ${credentials}`;\n}\nfunction psAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'PS256';\n        case 'SHA-384':\n            return 'PS384';\n        case 'SHA-512':\n            return 'PS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction rsAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'RS256';\n        case 'SHA-384':\n            return 'RS384';\n        case 'SHA-512':\n            return 'RS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction esAlg(key) {\n    switch (key.algorithm.namedCurve) {\n        case 'P-256':\n            return 'ES256';\n        case 'P-384':\n            return 'ES384';\n        case 'P-521':\n            return 'ES512';\n        default:\n            throw new UnsupportedOperationError('unsupported EcKeyAlgorithm namedCurve');\n    }\n}\nfunction keyToJws(key) {\n    switch (key.algorithm.name) {\n        case 'RSA-PSS':\n            return psAlg(key);\n        case 'RSASSA-PKCS1-v1_5':\n            return rsAlg(key);\n        case 'ECDSA':\n            return esAlg(key);\n        case 'Ed25519':\n        case 'Ed448':\n            return 'EdDSA';\n        default:\n            throw new UnsupportedOperationError('unsupported CryptoKey algorithm name');\n    }\n}\nfunction getClockSkew(client) {\n    const skew = client?.[clockSkew];\n    return typeof skew === 'number' && Number.isFinite(skew) ? skew : 0;\n}\nfunction getClockTolerance(client) {\n    const tolerance = client?.[clockTolerance];\n    return typeof tolerance === 'number' && Number.isFinite(tolerance) && Math.sign(tolerance) !== -1\n        ? tolerance\n        : 30;\n}\nfunction epochTime() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction clientAssertion(as, client) {\n    const now = epochTime() + getClockSkew(client);\n    return {\n        jti: randomBytes(),\n        aud: [as.issuer, as.token_endpoint],\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n        sub: client.client_id,\n    };\n}\nasync function privateKeyJwt(as, client, key, kid, modifyAssertion) {\n    const header = { alg: keyToJws(key), kid };\n    const payload = clientAssertion(as, client);\n    modifyAssertion?.(header, payload);\n    return jwt(header, payload, key);\n}\nfunction assertAs(as) {\n    if (typeof as !== 'object' || as === null) {\n        throw new TypeError('\"as\" must be an object');\n    }\n    if (!validateString(as.issuer)) {\n        throw new TypeError('\"as.issuer\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClient(client) {\n    if (typeof client !== 'object' || client === null) {\n        throw new TypeError('\"client\" must be an object');\n    }\n    if (!validateString(client.client_id)) {\n        throw new TypeError('\"client.client_id\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClientSecret(clientSecret) {\n    if (!validateString(clientSecret)) {\n        throw new TypeError('\"client.client_secret\" property must be a non-empty string');\n    }\n    return clientSecret;\n}\nfunction assertNoClientPrivateKey(clientAuthMethod, clientPrivateKey) {\n    if (clientPrivateKey !== undefined) {\n        throw new TypeError(`\"options.clientPrivateKey\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nfunction assertNoClientSecret(clientAuthMethod, clientSecret) {\n    if (clientSecret !== undefined) {\n        throw new TypeError(`\"client.client_secret\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nasync function clientAuthentication(as, client, body, headers, clientPrivateKey) {\n    body.delete('client_secret');\n    body.delete('client_assertion_type');\n    body.delete('client_assertion');\n    switch (client.token_endpoint_auth_method) {\n        case undefined:\n        case 'client_secret_basic': {\n            assertNoClientPrivateKey('client_secret_basic', clientPrivateKey);\n            headers.set('authorization', clientSecretBasic(client.client_id, assertClientSecret(client.client_secret)));\n            break;\n        }\n        case 'client_secret_post': {\n            assertNoClientPrivateKey('client_secret_post', clientPrivateKey);\n            body.set('client_id', client.client_id);\n            body.set('client_secret', assertClientSecret(client.client_secret));\n            break;\n        }\n        case 'private_key_jwt': {\n            assertNoClientSecret('private_key_jwt', client.client_secret);\n            if (clientPrivateKey === undefined) {\n                throw new TypeError('\"options.clientPrivateKey\" must be provided when \"client.token_endpoint_auth_method\" is \"private_key_jwt\"');\n            }\n            const { key, kid, modifyAssertion } = getKeyAndKid(clientPrivateKey);\n            if (!isPrivateKey(key)) {\n                throw new TypeError('\"options.clientPrivateKey.key\" must be a private CryptoKey');\n            }\n            body.set('client_id', client.client_id);\n            body.set('client_assertion_type', 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer');\n            body.set('client_assertion', await privateKeyJwt(as, client, key, kid, modifyAssertion));\n            break;\n        }\n        case 'tls_client_auth':\n        case 'self_signed_tls_client_auth':\n        case 'none': {\n            assertNoClientSecret(client.token_endpoint_auth_method, client.client_secret);\n            assertNoClientPrivateKey(client.token_endpoint_auth_method, clientPrivateKey);\n            body.set('client_id', client.client_id);\n            break;\n        }\n        default:\n            throw new UnsupportedOperationError('unsupported client token_endpoint_auth_method');\n    }\n}\nasync function jwt(header, payload, key) {\n    if (!key.usages.includes('sign')) {\n        throw new TypeError('CryptoKey instances used for signing assertions must include \"sign\" in their \"usages\"');\n    }\n    const input = `${b64u(buf(JSON.stringify(header)))}.${b64u(buf(JSON.stringify(payload)))}`;\n    const signature = b64u(await crypto.subtle.sign(keyToSubtle(key), key, buf(input)));\n    return `${input}.${signature}`;\n}\nasync function issueRequestObject(as, client, parameters, privateKey) {\n    assertAs(as);\n    assertClient(client);\n    parameters = new URLSearchParams(parameters);\n    const { key, kid, modifyAssertion } = getKeyAndKid(privateKey);\n    if (!isPrivateKey(key)) {\n        throw new TypeError('\"privateKey.key\" must be a private CryptoKey');\n    }\n    parameters.set('client_id', client.client_id);\n    const now = epochTime() + getClockSkew(client);\n    const claims = {\n        ...Object.fromEntries(parameters.entries()),\n        jti: randomBytes(),\n        aud: as.issuer,\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n    };\n    let resource;\n    if (parameters.has('resource') &&\n        (resource = parameters.getAll('resource')) &&\n        resource.length > 1) {\n        claims.resource = resource;\n    }\n    {\n        let value = parameters.get('max_age');\n        if (value !== null) {\n            claims.max_age = parseInt(value, 10);\n            if (!Number.isFinite(claims.max_age)) {\n                throw new OPE('\"max_age\" parameter must be a number');\n            }\n        }\n    }\n    {\n        let value = parameters.get('claims');\n        if (value !== null) {\n            try {\n                claims.claims = JSON.parse(value);\n            }\n            catch (cause) {\n                throw new OPE('failed to parse the \"claims\" parameter as JSON', { cause });\n            }\n            if (!isJsonObject(claims.claims)) {\n                throw new OPE('\"claims\" parameter must be a JSON with a top level object');\n            }\n        }\n    }\n    {\n        let value = parameters.get('authorization_details');\n        if (value !== null) {\n            try {\n                claims.authorization_details = JSON.parse(value);\n            }\n            catch (cause) {\n                throw new OPE('failed to parse the \"authorization_details\" parameter as JSON', { cause });\n            }\n            if (!Array.isArray(claims.authorization_details)) {\n                throw new OPE('\"authorization_details\" parameter must be a JSON with a top level array');\n            }\n        }\n    }\n    const header = {\n        alg: keyToJws(key),\n        typ: 'oauth-authz-req+jwt',\n        kid,\n    };\n    modifyAssertion?.(header, claims);\n    return jwt(header, claims, key);\n}\nasync function dpopProofJwt(headers, options, url, htm, clockSkew, accessToken) {\n    const { privateKey, publicKey, nonce = dpopNonces.get(url.origin) } = options;\n    if (!isPrivateKey(privateKey)) {\n        throw new TypeError('\"DPoP.privateKey\" must be a private CryptoKey');\n    }\n    if (!isPublicKey(publicKey)) {\n        throw new TypeError('\"DPoP.publicKey\" must be a public CryptoKey');\n    }\n    if (nonce !== undefined && !validateString(nonce)) {\n        throw new TypeError('\"DPoP.nonce\" must be a non-empty string or undefined');\n    }\n    if (!publicKey.extractable) {\n        throw new TypeError('\"DPoP.publicKey.extractable\" must be true');\n    }\n    const now = epochTime() + clockSkew;\n    const header = {\n        alg: keyToJws(privateKey),\n        typ: 'dpop+jwt',\n        jwk: await publicJwk(publicKey),\n    };\n    const payload = {\n        iat: now,\n        jti: randomBytes(),\n        htm,\n        nonce,\n        htu: `${url.origin}${url.pathname}`,\n        ath: accessToken ? b64u(await crypto.subtle.digest('SHA-256', buf(accessToken))) : undefined,\n    };\n    options[modifyAssertion]?.(header, payload);\n    headers.set('dpop', await jwt(header, payload, privateKey));\n}\nlet jwkCache;\nasync function getSetPublicJwkCache(key) {\n    const { kty, e, n, x, y, crv } = await crypto.subtle.exportKey('jwk', key);\n    const jwk = { kty, e, n, x, y, crv };\n    jwkCache.set(key, jwk);\n    return jwk;\n}\nasync function publicJwk(key) {\n    jwkCache || (jwkCache = new WeakMap());\n    return jwkCache.get(key) || getSetPublicJwkCache(key);\n}\nfunction validateEndpoint(value, endpoint, useMtlsAlias) {\n    if (typeof value !== 'string') {\n        if (useMtlsAlias) {\n            throw new TypeError(`\"as.mtls_endpoint_aliases.${endpoint}\" must be a string`);\n        }\n        throw new TypeError(`\"as.${endpoint}\" must be a string`);\n    }\n    return new URL(value);\n}\nfunction resolveEndpoint(as, endpoint, useMtlsAlias = false) {\n    if (useMtlsAlias && as.mtls_endpoint_aliases && endpoint in as.mtls_endpoint_aliases) {\n        return validateEndpoint(as.mtls_endpoint_aliases[endpoint], endpoint, useMtlsAlias);\n    }\n    return validateEndpoint(as[endpoint], endpoint, useMtlsAlias);\n}\nfunction alias(client, options) {\n    if (client.use_mtls_endpoint_aliases || options?.[useMtlsAlias]) {\n        return true;\n    }\n    return false;\n}\nasync function pushedAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'pushed_authorization_request_endpoint', alias(client, options));\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nfunction isOAuth2Error(input) {\n    const value = input;\n    if (typeof value !== 'object' || Array.isArray(value) || value === null) {\n        return false;\n    }\n    return value.error !== undefined;\n}\nfunction unquote(value) {\n    if (value.length >= 2 && value[0] === '\"' && value[value.length - 1] === '\"') {\n        return value.slice(1, -1);\n    }\n    return value;\n}\nconst SPLIT_REGEXP = /((?:,|, )?[0-9a-zA-Z!#$%&'*+-.^_`|~]+=)/;\nconst SCHEMES_REGEXP = /(?:^|, ?)([0-9a-zA-Z!#$%&'*+\\-.^_`|~]+)(?=$|[ ,])/g;\nfunction wwwAuth(scheme, params) {\n    const arr = params.split(SPLIT_REGEXP).slice(1);\n    if (!arr.length) {\n        return { scheme: scheme.toLowerCase(), parameters: {} };\n    }\n    arr[arr.length - 1] = arr[arr.length - 1].replace(/,$/, '');\n    const parameters = {};\n    for (let i = 1; i < arr.length; i += 2) {\n        const idx = i;\n        if (arr[idx][0] === '\"') {\n            while (arr[idx].slice(-1) !== '\"' && ++i < arr.length) {\n                arr[idx] += arr[i];\n            }\n        }\n        const key = arr[idx - 1].replace(/^(?:, ?)|=$/g, '').toLowerCase();\n        parameters[key] = unquote(arr[idx]);\n    }\n    return {\n        scheme: scheme.toLowerCase(),\n        parameters,\n    };\n}\nfunction parseWwwAuthenticateChallenges(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    const header = response.headers.get('www-authenticate');\n    if (header === null) {\n        return undefined;\n    }\n    const result = [];\n    for (const { 1: scheme, index } of header.matchAll(SCHEMES_REGEXP)) {\n        result.push([scheme, index]);\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    const challenges = result.map(([scheme, indexOf], i, others) => {\n        const next = others[i + 1];\n        let parameters;\n        if (next) {\n            parameters = header.slice(indexOf, next[1]);\n        }\n        else {\n            parameters = header.slice(indexOf);\n        }\n        return wwwAuth(scheme, parameters);\n    });\n    return challenges;\n}\nasync function processPushedAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 201) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Pushed Authorization Request Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.request_uri)) {\n        throw new OPE('\"response\" body \"request_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    return json;\n}\nasync function protectedResourceRequest(accessToken, method, url, headers, body, options) {\n    if (!validateString(accessToken)) {\n        throw new TypeError('\"accessToken\" must be a non-empty string');\n    }\n    if (!(url instanceof URL)) {\n        throw new TypeError('\"url\" must be an instance of URL');\n    }\n    headers = prepareHeaders(headers);\n    if (options?.DPoP === undefined) {\n        headers.set('authorization', `Bearer ${accessToken}`);\n    }\n    else {\n        await dpopProofJwt(headers, options.DPoP, url, method.toUpperCase(), getClockSkew({ [clockSkew]: options?.[clockSkew] }), accessToken);\n        headers.set('authorization', `DPoP ${accessToken}`);\n    }\n    return (options?.[customFetch] || fetch)(url.href, {\n        body,\n        headers: Object.fromEntries(headers.entries()),\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function userInfoRequest(as, client, accessToken, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'userinfo_endpoint', alias(client, options));\n    const headers = prepareHeaders(options?.headers);\n    if (client.userinfo_signed_response_alg) {\n        headers.set('accept', 'application/jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n        headers.append('accept', 'application/jwt');\n    }\n    return protectedResourceRequest(accessToken, 'GET', url, headers, null, {\n        ...options,\n        [clockSkew]: getClockSkew(client),\n    });\n}\nlet jwksMap;\nfunction setJwksCache(as, jwks, uat, cache) {\n    jwksMap || (jwksMap = new WeakMap());\n    jwksMap.set(as, {\n        jwks,\n        uat,\n        get age() {\n            return epochTime() - this.uat;\n        },\n    });\n    if (cache) {\n        Object.assign(cache, { jwks: structuredClone(jwks), uat });\n    }\n}\nfunction isFreshJwksCache(input) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || epochTime() - input.uat >= 300) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isJsonObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isJsonObject)) {\n        return false;\n    }\n    return true;\n}\nfunction clearJwksCache(as, cache) {\n    jwksMap?.delete(as);\n    delete cache?.jwks;\n    delete cache?.uat;\n}\nasync function getPublicSigKeyFromIssuerJwksUri(as, options, header) {\n    const { alg, kid } = header;\n    checkSupportedJwsAlg(alg);\n    if (!jwksMap?.has(as) && isFreshJwksCache(options?.[jwksCache])) {\n        setJwksCache(as, options?.[jwksCache].jwks, options?.[jwksCache].uat);\n    }\n    let jwks;\n    let age;\n    if (jwksMap?.has(as)) {\n        ;\n        ({ jwks, age } = jwksMap.get(as));\n        if (age >= 300) {\n            clearJwksCache(as, options?.[jwksCache]);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n    }\n    else {\n        jwks = await jwksRequest(as, options).then(processJwksResponse);\n        age = 0;\n        setJwksCache(as, jwks, epochTime(), options?.[jwksCache]);\n    }\n    let kty;\n    switch (alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            kty = 'RSA';\n            break;\n        case 'ES':\n            kty = 'EC';\n            break;\n        case 'Ed':\n            kty = 'OKP';\n            break;\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const candidates = jwks.keys.filter((jwk) => {\n        if (jwk.kty !== kty) {\n            return false;\n        }\n        if (kid !== undefined && kid !== jwk.kid) {\n            return false;\n        }\n        if (jwk.alg !== undefined && alg !== jwk.alg) {\n            return false;\n        }\n        if (jwk.use !== undefined && jwk.use !== 'sig') {\n            return false;\n        }\n        if (jwk.key_ops?.includes('verify') === false) {\n            return false;\n        }\n        switch (true) {\n            case alg === 'ES256' && jwk.crv !== 'P-256':\n            case alg === 'ES384' && jwk.crv !== 'P-384':\n            case alg === 'ES512' && jwk.crv !== 'P-521':\n            case alg === 'EdDSA' && !(jwk.crv === 'Ed25519' || jwk.crv === 'Ed448'):\n                return false;\n        }\n        return true;\n    });\n    const { 0: jwk, length } = candidates;\n    if (!length) {\n        if (age >= 60) {\n            clearJwksCache(as, options?.[jwksCache]);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n        throw new OPE('error when selecting a JWT verification key, no applicable keys found');\n    }\n    if (length !== 1) {\n        throw new OPE('error when selecting a JWT verification key, multiple applicable keys found, a \"kid\" JWT Header Parameter is required');\n    }\n    const key = await importJwk(alg, jwk);\n    if (key.type !== 'public') {\n        throw new OPE('jwks_uri must only contain public keys');\n    }\n    return key;\n}\nconst skipSubjectCheck = Symbol();\nfunction getContentType(response) {\n    return response.headers.get('content-type')?.split(';')[0];\n}\nasync function processUserInfoResponse(as, client, expectedSubject, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform UserInfo Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/jwt') {\n        assertReadableResponse(response);\n        const { claims, jwt } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.userinfo_signed_response_alg, as.userinfo_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n            .then(validateOptionalAudience.bind(undefined, client.client_id))\n            .then(validateOptionalIssuer.bind(undefined, as.issuer));\n        jwtResponseBodies.set(response, jwt);\n        json = claims;\n    }\n    else {\n        if (client.userinfo_signed_response_alg) {\n            throw new OPE('JWT UserInfo Response expected');\n        }\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.sub)) {\n        throw new OPE('\"response\" body \"sub\" property must be a non-empty string');\n    }\n    switch (expectedSubject) {\n        case skipSubjectCheck:\n            break;\n        default:\n            if (!validateString(expectedSubject)) {\n                throw new OPE('\"expectedSubject\" must be a non-empty string');\n            }\n            if (json.sub !== expectedSubject) {\n                throw new OPE('unexpected \"response\" body \"sub\" value');\n            }\n    }\n    return json;\n}\nasync function authenticatedRequest(as, client, method, url, body, headers, options) {\n    await clientAuthentication(as, client, body, headers, options?.clientPrivateKey);\n    headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n    return (options?.[customFetch] || fetch)(url.href, {\n        body,\n        headers: Object.fromEntries(headers.entries()),\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function tokenEndpointRequest(as, client, grantType, parameters, options) {\n    const url = resolveEndpoint(as, 'token_endpoint', alias(client, options));\n    parameters.set('grant_type', grantType);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, parameters, headers, options);\n}\nasync function refreshTokenGrantRequest(as, client, refreshToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(refreshToken)) {\n        throw new TypeError('\"refreshToken\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('refresh_token', refreshToken);\n    return tokenEndpointRequest(as, client, 'refresh_token', parameters, options);\n}\nconst idTokenClaims = new WeakMap();\nconst jwtResponseBodies = new WeakMap();\nfunction getValidatedIdTokenClaims(ref) {\n    if (!ref.id_token) {\n        return undefined;\n    }\n    const claims = idTokenClaims.get(ref);\n    if (!claims) {\n        throw new TypeError('\"ref\" was already garbage collected or did not resolve from the proper sources');\n    }\n    return claims[0];\n}\nasync function validateIdTokenSignature(as, ref, options) {\n    assertAs(as);\n    if (!idTokenClaims.has(ref)) {\n        throw new OPE('\"ref\" does not contain an ID Token to verify the signature of');\n    }\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, } = idTokenClaims.get(ref)[1].split('.');\n    const header = JSON.parse(buf(b64u(protectedHeader)));\n    if (header.alg.startsWith('HS')) {\n        throw new UnsupportedOperationError();\n    }\n    let key;\n    key = await getPublicSigKeyFromIssuerJwksUri(as, options, header);\n    await validateJwsSignature(protectedHeader, payload, key, b64u(encodedSignature));\n}\nasync function validateJwtResponseSignature(as, ref, options) {\n    assertAs(as);\n    if (!jwtResponseBodies.has(ref)) {\n        throw new OPE('\"ref\" does not contain a processed JWT Response to verify the signature of');\n    }\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, } = jwtResponseBodies.get(ref).split('.');\n    const header = JSON.parse(buf(b64u(protectedHeader)));\n    if (header.alg.startsWith('HS')) {\n        throw new UnsupportedOperationError();\n    }\n    let key;\n    key = await getPublicSigKeyFromIssuerJwksUri(as, options, header);\n    await validateJwsSignature(protectedHeader, payload, key, b64u(encodedSignature));\n}\nfunction validateJwtUserInfoSignature(as, ref, options) {\n    return validateJwtResponseSignature(as, ref, options);\n}\nfunction validateJwtIntrospectionSignature(as, ref, options) {\n    return validateJwtResponseSignature(as, ref, options);\n}\nasync function processGenericAccessTokenResponse(as, client, response, ignoreIdToken = false, ignoreRefreshToken = false) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Token Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.access_token)) {\n        throw new OPE('\"response\" body \"access_token\" property must be a non-empty string');\n    }\n    if (!validateString(json.token_type)) {\n        throw new OPE('\"response\" body \"token_type\" property must be a non-empty string');\n    }\n    json.token_type = json.token_type.toLowerCase();\n    if (json.token_type !== 'dpop' && json.token_type !== 'bearer') {\n        throw new UnsupportedOperationError('unsupported `token_type` value');\n    }\n    if (json.expires_in !== undefined &&\n        (typeof json.expires_in !== 'number' || json.expires_in <= 0)) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (!ignoreRefreshToken &&\n        json.refresh_token !== undefined &&\n        !validateString(json.refresh_token)) {\n        throw new OPE('\"response\" body \"refresh_token\" property must be a non-empty string');\n    }\n    if (json.scope !== undefined && typeof json.scope !== 'string') {\n        throw new OPE('\"response\" body \"scope\" property must be a string');\n    }\n    if (!ignoreIdToken) {\n        if (json.id_token !== undefined && !validateString(json.id_token)) {\n            throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n        }\n        if (json.id_token) {\n            const { claims, jwt } = await validateJwt(json.id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n                .then(validatePresence.bind(undefined, ['aud', 'exp', 'iat', 'iss', 'sub']))\n                .then(validateIssuer.bind(undefined, as.issuer))\n                .then(validateAudience.bind(undefined, client.client_id));\n            if (Array.isArray(claims.aud) && claims.aud.length !== 1) {\n                if (claims.azp === undefined) {\n                    throw new OPE('ID Token \"aud\" (audience) claim includes additional untrusted audiences');\n                }\n                if (claims.azp !== client.client_id) {\n                    throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n                }\n            }\n            if (claims.auth_time !== undefined &&\n                (!Number.isFinite(claims.auth_time) || Math.sign(claims.auth_time) !== 1)) {\n                throw new OPE('ID Token \"auth_time\" (authentication time) must be a positive number');\n            }\n            idTokenClaims.set(json, [claims, jwt]);\n        }\n    }\n    return json;\n}\nasync function processRefreshTokenResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nfunction validateOptionalAudience(expected, result) {\n    if (result.claims.aud !== undefined) {\n        return validateAudience(expected, result);\n    }\n    return result;\n}\nfunction validateAudience(expected, result) {\n    if (Array.isArray(result.claims.aud)) {\n        if (!result.claims.aud.includes(expected)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n        }\n    }\n    else if (result.claims.aud !== expected) {\n        throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n    }\n    return result;\n}\nfunction validateOptionalIssuer(expected, result) {\n    if (result.claims.iss !== undefined) {\n        return validateIssuer(expected, result);\n    }\n    return result;\n}\nfunction validateIssuer(expected, result) {\n    if (result.claims.iss !== expected) {\n        throw new OPE('unexpected JWT \"iss\" (issuer) claim value');\n    }\n    return result;\n}\nconst branded = new WeakSet();\nfunction brand(searchParams) {\n    branded.add(searchParams);\n    return searchParams;\n}\nasync function authorizationCodeGrantRequest(as, client, callbackParameters, redirectUri, codeVerifier, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!branded.has(callbackParameters)) {\n        throw new TypeError('\"callbackParameters\" must be an instance of URLSearchParams obtained from \"validateAuthResponse()\", or \"validateJwtAuthResponse()');\n    }\n    if (!validateString(redirectUri)) {\n        throw new TypeError('\"redirectUri\" must be a non-empty string');\n    }\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    const code = getURLSearchParameter(callbackParameters, 'code');\n    if (!code) {\n        throw new OPE('no authorization code in \"callbackParameters\"');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('redirect_uri', redirectUri);\n    parameters.set('code_verifier', codeVerifier);\n    parameters.set('code', code);\n    return tokenEndpointRequest(as, client, 'authorization_code', parameters, options);\n}\nconst jwtClaimNames = {\n    aud: 'audience',\n    c_hash: 'code hash',\n    client_id: 'client id',\n    exp: 'expiration time',\n    iat: 'issued at',\n    iss: 'issuer',\n    jti: 'jwt id',\n    nonce: 'nonce',\n    s_hash: 'state hash',\n    sub: 'subject',\n    ath: 'access token hash',\n    htm: 'http method',\n    htu: 'http uri',\n    cnf: 'confirmation',\n};\nfunction validatePresence(required, result) {\n    for (const claim of required) {\n        if (result.claims[claim] === undefined) {\n            throw new OPE(`JWT \"${claim}\" (${jwtClaimNames[claim]}) claim missing`);\n        }\n    }\n    return result;\n}\nconst expectNoNonce = Symbol();\nconst skipAuthTimeCheck = Symbol();\nasync function processAuthorizationCodeOpenIDResponse(as, client, response, expectedNonce, maxAge) {\n    const result = await processGenericAccessTokenResponse(as, client, response);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!validateString(result.id_token)) {\n        throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    const claims = getValidatedIdTokenClaims(result);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) &&\n        claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== 'number' || maxAge < 0) {\n            throw new TypeError('\"maxAge\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE('too much time has elapsed since the last End-User authentication');\n        }\n    }\n    switch (expectedNonce) {\n        case undefined:\n        case expectNoNonce:\n            if (claims.nonce !== undefined) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n            break;\n        default:\n            if (!validateString(expectedNonce)) {\n                throw new TypeError('\"expectedNonce\" must be a non-empty string');\n            }\n            if (claims.nonce === undefined) {\n                throw new OPE('ID Token \"nonce\" claim missing');\n            }\n            if (claims.nonce !== expectedNonce) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n    }\n    return result;\n}\nasync function processAuthorizationCodeOAuth2Response(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (result.id_token !== undefined) {\n        if (typeof result.id_token === 'string' && result.id_token.length) {\n            throw new OPE('Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing');\n        }\n        delete result.id_token;\n    }\n    return result;\n}\nfunction checkJwtType(expected, result) {\n    if (typeof result.header.typ !== 'string' || normalizeTyp(result.header.typ) !== expected) {\n        throw new OPE('unexpected JWT \"typ\" header parameter value');\n    }\n    return result;\n}\nasync function clientCredentialsGrantRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    return tokenEndpointRequest(as, client, 'client_credentials', new URLSearchParams(parameters), options);\n}\nasync function genericTokenEndpointRequest(as, client, grantType, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(grantType)) {\n        throw new TypeError('\"grantType\" must be a non-empty string');\n    }\n    return tokenEndpointRequest(as, client, grantType, new URLSearchParams(parameters), options);\n}\nasync function processClientCredentialsResponse(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    return result;\n}\nasync function revocationRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    const url = resolveEndpoint(as, 'revocation_endpoint', alias(client, options));\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    headers.delete('accept');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processRevocationResponse(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Revocation Endpoint response');\n    }\n    return undefined;\n}\nfunction assertReadableResponse(response) {\n    if (response.bodyUsed) {\n        throw new TypeError('\"response\" body has been used already');\n    }\n}\nasync function introspectionRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    const url = resolveEndpoint(as, 'introspection_endpoint', alias(client, options));\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    if (options?.requestJwtResponse ?? client.introspection_signed_response_alg) {\n        headers.set('accept', 'application/token-introspection+jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processIntrospectionResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Introspection Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/token-introspection+jwt') {\n        assertReadableResponse(response);\n        const { claims, jwt } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.introspection_signed_response_alg, as.introspection_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n            .then(checkJwtType.bind(undefined, 'token-introspection+jwt'))\n            .then(validatePresence.bind(undefined, ['aud', 'iat', 'iss']))\n            .then(validateIssuer.bind(undefined, as.issuer))\n            .then(validateAudience.bind(undefined, client.client_id));\n        jwtResponseBodies.set(response, jwt);\n        json = claims.token_introspection;\n        if (!isJsonObject(json)) {\n            throw new OPE('JWT \"token_introspection\" claim must be a JSON object');\n        }\n    }\n    else {\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n        if (!isJsonObject(json)) {\n            throw new OPE('\"response\" body must be a top level object');\n        }\n    }\n    if (typeof json.active !== 'boolean') {\n        throw new OPE('\"response\" body \"active\" property must be a boolean');\n    }\n    return json;\n}\nasync function jwksRequest(as, options) {\n    assertAs(as);\n    const url = resolveEndpoint(as, 'jwks_uri');\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    headers.append('accept', 'application/jwk-set+json');\n    return (options?.[customFetch] || fetch)(url.href, {\n        headers: Object.fromEntries(headers.entries()),\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function processJwksResponse(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform JSON Web Key Set response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!Array.isArray(json.keys)) {\n        throw new OPE('\"response\" body \"keys\" property must be an array');\n    }\n    if (!Array.prototype.every.call(json.keys, isJsonObject)) {\n        throw new OPE('\"response\" body \"keys\" property members must be JWK formatted objects');\n    }\n    return json;\n}\nasync function handleOAuthBodyError(response) {\n    if (response.status > 399 && response.status < 500) {\n        assertReadableResponse(response);\n        try {\n            const json = await response.json();\n            if (isJsonObject(json) && typeof json.error === 'string' && json.error.length) {\n                if (json.error_description !== undefined && typeof json.error_description !== 'string') {\n                    delete json.error_description;\n                }\n                if (json.error_uri !== undefined && typeof json.error_uri !== 'string') {\n                    delete json.error_uri;\n                }\n                if (json.algs !== undefined && typeof json.algs !== 'string') {\n                    delete json.algs;\n                }\n                if (json.scope !== undefined && typeof json.scope !== 'string') {\n                    delete json.scope;\n                }\n                return json;\n            }\n        }\n        catch { }\n    }\n    return undefined;\n}\nfunction checkSupportedJwsAlg(alg) {\n    if (!SUPPORTED_JWS_ALGS.includes(alg)) {\n        throw new UnsupportedOperationError('unsupported JWS \"alg\" identifier');\n    }\n    return alg;\n}\nfunction checkRsaKeyAlgorithm(algorithm) {\n    if (typeof algorithm.modulusLength !== 'number' || algorithm.modulusLength < 2048) {\n        throw new OPE(`${algorithm.name} modulusLength must be at least 2048 bits`);\n    }\n}\nfunction ecdsaHashName(namedCurve) {\n    switch (namedCurve) {\n        case 'P-256':\n            return 'SHA-256';\n        case 'P-384':\n            return 'SHA-384';\n        case 'P-521':\n            return 'SHA-512';\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nfunction keyToSubtle(key) {\n    switch (key.algorithm.name) {\n        case 'ECDSA':\n            return {\n                name: key.algorithm.name,\n                hash: ecdsaHashName(key.algorithm.namedCurve),\n            };\n        case 'RSA-PSS': {\n            checkRsaKeyAlgorithm(key.algorithm);\n            switch (key.algorithm.hash.name) {\n                case 'SHA-256':\n                case 'SHA-384':\n                case 'SHA-512':\n                    return {\n                        name: key.algorithm.name,\n                        saltLength: parseInt(key.algorithm.hash.name.slice(-3), 10) >> 3,\n                    };\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        case 'RSASSA-PKCS1-v1_5':\n            checkRsaKeyAlgorithm(key.algorithm);\n            return key.algorithm.name;\n        case 'Ed448':\n        case 'Ed25519':\n            return key.algorithm.name;\n    }\n    throw new UnsupportedOperationError();\n}\nconst noSignatureCheck = Symbol();\nasync function validateJwsSignature(protectedHeader, payload, key, signature) {\n    const input = `${protectedHeader}.${payload}`;\n    const verified = await crypto.subtle.verify(keyToSubtle(key), key, signature, buf(input));\n    if (!verified) {\n        throw new OPE('JWT signature verification failed');\n    }\n}\nasync function validateJwt(jws, checkAlg, getKey, clockSkew, clockTolerance, decryptJwt) {\n    let { 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split('.');\n    if (length === 5) {\n        if (decryptJwt !== undefined) {\n            jws = await decryptJwt(jws);\n            ({ 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split('.'));\n        }\n        else {\n            throw new UnsupportedOperationError('JWE structure JWTs are not supported');\n        }\n    }\n    if (length !== 3) {\n        throw new OPE('Invalid JWT');\n    }\n    let header;\n    try {\n        header = JSON.parse(buf(b64u(protectedHeader)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Header body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(header)) {\n        throw new OPE('JWT Header must be a top level object');\n    }\n    checkAlg(header);\n    if (header.crit !== undefined) {\n        throw new OPE('unexpected JWT \"crit\" header parameter');\n    }\n    const signature = b64u(encodedSignature);\n    let key;\n    if (getKey !== noSignatureCheck) {\n        key = await getKey(header);\n        await validateJwsSignature(protectedHeader, payload, key, signature);\n    }\n    let claims;\n    try {\n        claims = JSON.parse(buf(b64u(payload)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Payload body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(claims)) {\n        throw new OPE('JWT Payload must be a top level object');\n    }\n    const now = epochTime() + clockSkew;\n    if (claims.exp !== undefined) {\n        if (typeof claims.exp !== 'number') {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim type');\n        }\n        if (claims.exp <= now - clockTolerance) {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim value, timestamp is <= now()');\n        }\n    }\n    if (claims.iat !== undefined) {\n        if (typeof claims.iat !== 'number') {\n            throw new OPE('unexpected JWT \"iat\" (issued at) claim type');\n        }\n    }\n    if (claims.iss !== undefined) {\n        if (typeof claims.iss !== 'string') {\n            throw new OPE('unexpected JWT \"iss\" (issuer) claim type');\n        }\n    }\n    if (claims.nbf !== undefined) {\n        if (typeof claims.nbf !== 'number') {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim type');\n        }\n        if (claims.nbf > now + clockTolerance) {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim value, timestamp is > now()');\n        }\n    }\n    if (claims.aud !== undefined) {\n        if (typeof claims.aud !== 'string' && !Array.isArray(claims.aud)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim type');\n        }\n    }\n    return { header, claims, signature, key, jwt: jws };\n}\nasync function validateJwtAuthResponse(as, client, parameters, expectedState, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    const response = getURLSearchParameter(parameters, 'response');\n    if (!response) {\n        throw new OPE('\"parameters\" does not contain a JARM response');\n    }\n    const { claims } = await validateJwt(response, checkSigningAlgorithm.bind(undefined, client.authorization_signed_response_alg, as.authorization_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n        .then(validatePresence.bind(undefined, ['aud', 'exp', 'iss']))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, client.client_id));\n    const result = new URLSearchParams();\n    for (const [key, value] of Object.entries(claims)) {\n        if (typeof value === 'string' && key !== 'aud') {\n            result.set(key, value);\n        }\n    }\n    return validateAuthResponse(as, client, result, expectedState);\n}\nasync function idTokenHash(alg, data, key) {\n    let algorithm;\n    switch (alg) {\n        case 'RS256':\n        case 'PS256':\n        case 'ES256':\n            algorithm = 'SHA-256';\n            break;\n        case 'RS384':\n        case 'PS384':\n        case 'ES384':\n            algorithm = 'SHA-384';\n            break;\n        case 'RS512':\n        case 'PS512':\n        case 'ES512':\n            algorithm = 'SHA-512';\n            break;\n        case 'EdDSA':\n            if (key.algorithm.name === 'Ed25519') {\n                algorithm = 'SHA-512';\n                break;\n            }\n            throw new UnsupportedOperationError();\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const digest = await crypto.subtle.digest(algorithm, buf(data));\n    return b64u(digest.slice(0, digest.byteLength / 2));\n}\nasync function idTokenHashMatches(data, actual, alg, key) {\n    const expected = await idTokenHash(alg, data, key);\n    return actual === expected;\n}\nasync function validateDetachedSignatureResponse(as, client, parameters, expectedNonce, expectedState, maxAge, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        if (!parameters.hash.length) {\n            throw new TypeError('\"parameters\" as an instance of URL must contain a hash (fragment) with the Authorization Response parameters');\n        }\n        parameters = new URLSearchParams(parameters.hash.slice(1));\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams');\n    }\n    parameters = new URLSearchParams(parameters);\n    const id_token = getURLSearchParameter(parameters, 'id_token');\n    parameters.delete('id_token');\n    switch (expectedState) {\n        case undefined:\n        case expectNoState:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new TypeError('\"expectedState\" must be a non-empty string');\n            }\n    }\n    const result = validateAuthResponse({\n        ...as,\n        authorization_response_iss_parameter_supported: false,\n    }, client, parameters, expectedState);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!id_token) {\n        throw new OPE('\"parameters\" does not contain an ID Token');\n    }\n    const code = getURLSearchParameter(parameters, 'code');\n    if (!code) {\n        throw new OPE('\"parameters\" does not contain an Authorization Code');\n    }\n    const requiredClaims = [\n        'aud',\n        'exp',\n        'iat',\n        'iss',\n        'sub',\n        'nonce',\n        'c_hash',\n    ];\n    if (typeof expectedState === 'string') {\n        requiredClaims.push('s_hash');\n    }\n    const { claims, header, key } = await validateJwt(id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n        .then(validatePresence.bind(undefined, requiredClaims))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, client.client_id));\n    const clockSkew = getClockSkew(client);\n    const now = epochTime() + clockSkew;\n    if (claims.iat < now - 3600) {\n        throw new OPE('unexpected JWT \"iat\" (issued at) claim value, it is too far in the past');\n    }\n    if (typeof claims.c_hash !== 'string' ||\n        (await idTokenHashMatches(code, claims.c_hash, header.alg, key)) !== true) {\n        throw new OPE('invalid ID Token \"c_hash\" (code hash) claim value');\n    }\n    if (claims.s_hash !== undefined && typeof expectedState !== 'string') {\n        throw new OPE('could not verify ID Token \"s_hash\" (state hash) claim value');\n    }\n    if (typeof expectedState === 'string' &&\n        (typeof claims.s_hash !== 'string' ||\n            (await idTokenHashMatches(expectedState, claims.s_hash, header.alg, key)) !== true)) {\n        throw new OPE('invalid ID Token \"s_hash\" (state hash) claim value');\n    }\n    if (claims.auth_time !== undefined &&\n        (!Number.isFinite(claims.auth_time) || Math.sign(claims.auth_time) !== 1)) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) must be a positive number');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) &&\n        claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== 'number' || maxAge < 0) {\n            throw new TypeError('\"maxAge\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE('too much time has elapsed since the last End-User authentication');\n        }\n    }\n    if (!validateString(expectedNonce)) {\n        throw new TypeError('\"expectedNonce\" must be a non-empty string');\n    }\n    if (claims.nonce !== expectedNonce) {\n        throw new OPE('unexpected ID Token \"nonce\" claim value');\n    }\n    if (Array.isArray(claims.aud) && claims.aud.length !== 1) {\n        if (claims.azp === undefined) {\n            throw new OPE('ID Token \"aud\" (audience) claim includes additional untrusted audiences');\n        }\n        if (claims.azp !== client.client_id) {\n            throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n        }\n    }\n    return result;\n}\nfunction checkSigningAlgorithm(client, issuer, header) {\n    if (client !== undefined) {\n        if (header.alg !== client) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (Array.isArray(issuer)) {\n        if (!issuer.includes(header.alg)) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (header.alg !== 'RS256') {\n        throw new OPE('unexpected JWT \"alg\" header parameter');\n    }\n}\nfunction getURLSearchParameter(parameters, name) {\n    const { 0: value, length } = parameters.getAll(name);\n    if (length > 1) {\n        throw new OPE(`\"${name}\" parameter must be provided only once`);\n    }\n    return value;\n}\nconst skipStateCheck = Symbol();\nconst expectNoState = Symbol();\nfunction validateAuthResponse(as, client, parameters, expectedState) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    if (getURLSearchParameter(parameters, 'response')) {\n        throw new OPE('\"parameters\" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');\n    }\n    const iss = getURLSearchParameter(parameters, 'iss');\n    const state = getURLSearchParameter(parameters, 'state');\n    if (!iss && as.authorization_response_iss_parameter_supported) {\n        throw new OPE('response parameter \"iss\" (issuer) missing');\n    }\n    if (iss && iss !== as.issuer) {\n        throw new OPE('unexpected \"iss\" (issuer) response parameter value');\n    }\n    switch (expectedState) {\n        case undefined:\n        case expectNoState:\n            if (state !== undefined) {\n                throw new OPE('unexpected \"state\" response parameter encountered');\n            }\n            break;\n        case skipStateCheck:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new OPE('\"expectedState\" must be a non-empty string');\n            }\n            if (state === undefined) {\n                throw new OPE('response parameter \"state\" missing');\n            }\n            if (state !== expectedState) {\n                throw new OPE('unexpected \"state\" response parameter value');\n            }\n    }\n    const error = getURLSearchParameter(parameters, 'error');\n    if (error) {\n        return {\n            error,\n            error_description: getURLSearchParameter(parameters, 'error_description'),\n            error_uri: getURLSearchParameter(parameters, 'error_uri'),\n        };\n    }\n    const id_token = getURLSearchParameter(parameters, 'id_token');\n    const token = getURLSearchParameter(parameters, 'token');\n    if (id_token !== undefined || token !== undefined) {\n        throw new UnsupportedOperationError('implicit and hybrid flows are not supported');\n    }\n    return brand(new URLSearchParams(parameters));\n}\nfunction algToSubtle(alg, crv) {\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n        case 'ES256':\n        case 'ES384':\n            return { name: 'ECDSA', namedCurve: `P-${alg.slice(-3)}` };\n        case 'ES512':\n            return { name: 'ECDSA', namedCurve: 'P-521' };\n        case 'EdDSA': {\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    return crv;\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nasync function importJwk(alg, jwk) {\n    const { ext, key_ops, use, ...key } = jwk;\n    return crypto.subtle.importKey('jwk', key, algToSubtle(alg, jwk.crv), true, ['verify']);\n}\nasync function deviceAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'device_authorization_endpoint', alias(client, options));\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processDeviceAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Device Authorization Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.device_code)) {\n        throw new OPE('\"response\" body \"device_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.user_code)) {\n        throw new OPE('\"response\" body \"user_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.verification_uri)) {\n        throw new OPE('\"response\" body \"verification_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (json.verification_uri_complete !== undefined &&\n        !validateString(json.verification_uri_complete)) {\n        throw new OPE('\"response\" body \"verification_uri_complete\" property must be a non-empty string');\n    }\n    if (json.interval !== undefined && (typeof json.interval !== 'number' || json.interval <= 0)) {\n        throw new OPE('\"response\" body \"interval\" property must be a positive number');\n    }\n    return json;\n}\nasync function deviceCodeGrantRequest(as, client, deviceCode, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(deviceCode)) {\n        throw new TypeError('\"deviceCode\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('device_code', deviceCode);\n    return tokenEndpointRequest(as, client, 'urn:ietf:params:oauth:grant-type:device_code', parameters, options);\n}\nasync function processDeviceCodeResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nasync function generateKeyPair(alg, options) {\n    if (!validateString(alg)) {\n        throw new TypeError('\"alg\" must be a non-empty string');\n    }\n    const algorithm = algToSubtle(alg, alg === 'EdDSA' ? (options?.crv ?? 'Ed25519') : undefined);\n    if (alg.startsWith('PS') || alg.startsWith('RS')) {\n        Object.assign(algorithm, {\n            modulusLength: options?.modulusLength ?? 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        });\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, [\n        'sign',\n        'verify',\n    ]);\n}\nfunction normalizeHtu(htu) {\n    const url = new URL(htu);\n    url.search = '';\n    url.hash = '';\n    return url.href;\n}\nasync function validateDPoP(as, request, accessToken, accessTokenClaims, options) {\n    const header = request.headers.get('dpop');\n    if (header === null) {\n        throw new OPE('operation indicated DPoP use but the request has no DPoP HTTP Header');\n    }\n    if (request.headers.get('authorization')?.toLowerCase().startsWith('dpop ') === false) {\n        throw new OPE(`operation indicated DPoP use but the request's Authorization HTTP Header scheme is not DPoP`);\n    }\n    if (typeof accessTokenClaims.cnf?.jkt !== 'string') {\n        throw new OPE('operation indicated DPoP use but the JWT Access Token has no jkt confirmation claim');\n    }\n    const clockSkew = getClockSkew(options);\n    const proof = await validateJwt(header, checkSigningAlgorithm.bind(undefined, undefined, as?.dpop_signing_alg_values_supported || SUPPORTED_JWS_ALGS), async ({ jwk, alg }) => {\n        if (!jwk) {\n            throw new OPE('DPoP Proof is missing the jwk header parameter');\n        }\n        const key = await importJwk(alg, jwk);\n        if (key.type !== 'public') {\n            throw new OPE('DPoP Proof jwk header parameter must contain a public key');\n        }\n        return key;\n    }, clockSkew, getClockTolerance(options), undefined)\n        .then(checkJwtType.bind(undefined, 'dpop+jwt'))\n        .then(validatePresence.bind(undefined, ['iat', 'jti', 'ath', 'htm', 'htu']));\n    const now = epochTime() + clockSkew;\n    const diff = Math.abs(now - proof.claims.iat);\n    if (diff > 300) {\n        throw new OPE('DPoP Proof iat is not recent enough');\n    }\n    if (proof.claims.htm !== request.method) {\n        throw new OPE('DPoP Proof htm mismatch');\n    }\n    if (typeof proof.claims.htu !== 'string' ||\n        normalizeHtu(proof.claims.htu) !== normalizeHtu(request.url)) {\n        throw new OPE('DPoP Proof htu mismatch');\n    }\n    {\n        const expected = b64u(await crypto.subtle.digest('SHA-256', encoder.encode(accessToken)));\n        if (proof.claims.ath !== expected) {\n            throw new OPE('DPoP Proof ath mismatch');\n        }\n    }\n    {\n        let components;\n        switch (proof.header.jwk.kty) {\n            case 'EC':\n                components = {\n                    crv: proof.header.jwk.crv,\n                    kty: proof.header.jwk.kty,\n                    x: proof.header.jwk.x,\n                    y: proof.header.jwk.y,\n                };\n                break;\n            case 'OKP':\n                components = {\n                    crv: proof.header.jwk.crv,\n                    kty: proof.header.jwk.kty,\n                    x: proof.header.jwk.x,\n                };\n                break;\n            case 'RSA':\n                components = {\n                    e: proof.header.jwk.e,\n                    kty: proof.header.jwk.kty,\n                    n: proof.header.jwk.n,\n                };\n                break;\n            default:\n                throw new UnsupportedOperationError();\n        }\n        const expected = b64u(await crypto.subtle.digest('SHA-256', encoder.encode(JSON.stringify(components))));\n        if (accessTokenClaims.cnf.jkt !== expected) {\n            throw new OPE('JWT Access Token confirmation mismatch');\n        }\n    }\n}\nasync function validateJwtAccessToken(as, request, expectedAudience, options) {\n    assertAs(as);\n    if (!looseInstanceOf(request, Request)) {\n        throw new TypeError('\"request\" must be an instance of Request');\n    }\n    if (!validateString(expectedAudience)) {\n        throw new OPE('\"expectedAudience\" must be a non-empty string');\n    }\n    const authorization = request.headers.get('authorization');\n    if (authorization === null) {\n        throw new OPE('\"request\" is missing an Authorization HTTP Header');\n    }\n    let { 0: scheme, 1: accessToken, length } = authorization.split(' ');\n    scheme = scheme.toLowerCase();\n    switch (scheme) {\n        case 'dpop':\n        case 'bearer':\n            break;\n        default:\n            throw new UnsupportedOperationError('unsupported Authorization HTTP Header scheme');\n    }\n    if (length !== 2) {\n        throw new OPE('invalid Authorization HTTP Header format');\n    }\n    const requiredClaims = [\n        'iss',\n        'exp',\n        'aud',\n        'sub',\n        'iat',\n        'jti',\n        'client_id',\n    ];\n    if (options?.requireDPoP || scheme === 'dpop' || request.headers.has('dpop')) {\n        requiredClaims.push('cnf');\n    }\n    const { claims } = await validateJwt(accessToken, checkSigningAlgorithm.bind(undefined, undefined, SUPPORTED_JWS_ALGS), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(options), getClockTolerance(options), undefined)\n        .then(checkJwtType.bind(undefined, 'at+jwt'))\n        .then(validatePresence.bind(undefined, requiredClaims))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, expectedAudience));\n    for (const claim of ['client_id', 'jti', 'sub']) {\n        if (typeof claims[claim] !== 'string') {\n            throw new OPE(`unexpected JWT \"${claim}\" claim type`);\n        }\n    }\n    if ('cnf' in claims) {\n        if (!isJsonObject(claims.cnf)) {\n            throw new OPE('unexpected JWT \"cnf\" (confirmation) claim value');\n        }\n        const { 0: cnf, length } = Object.keys(claims.cnf);\n        if (length) {\n            if (length !== 1) {\n                throw new UnsupportedOperationError('multiple confirmation claims are not supported');\n            }\n            if (cnf !== 'jkt') {\n                throw new UnsupportedOperationError('unsupported JWT Confirmation method');\n            }\n        }\n    }\n    if (options?.requireDPoP ||\n        scheme === 'dpop' ||\n        claims.cnf?.jkt !== undefined ||\n        request.headers.has('dpop')) {\n        await validateDPoP(as, request, accessToken, claims, options);\n    }\n    return claims;\n}\nconst experimentalCustomFetch = customFetch;\nconst experimental_customFetch = customFetch;\nconst experimentalUseMtlsAlias = useMtlsAlias;\nconst experimental_useMtlsAlias = useMtlsAlias;\nconst experimental_validateDetachedSignatureResponse = (...args) => validateDetachedSignatureResponse(...args);\nconst experimental_validateJwtAccessToken = (...args) => validateJwtAccessToken(...args);\nconst validateJwtUserinfoSignature = (...args) => validateJwtUserInfoSignature(...args);\nconst experimental_jwksCache = jwksCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/oauth4webapi/build/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.module.css":
/*!*********************************!*\
  !*** ./src/app/page.module.css ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"page_main__GlU4n\",\"contentArea\":\"page_contentArea__r4RWt\",\"section\":\"page_section__61PEw\"};\n    if(true) {\n      // 1744584506385\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \nmodule.exports.__checksum = \"8cd3545be4b3\"\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcGFnZS5tb2R1bGUuY3NzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCO0FBQ2xCLE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLHdNQUF1SSxjQUFjLHNEQUFzRDtBQUN6TyxNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXHNyY1xcYXBwXFxwYWdlLm1vZHVsZS5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcIm1haW5cIjpcInBhZ2VfbWFpbl9fR2xVNG5cIixcImNvbnRlbnRBcmVhXCI6XCJwYWdlX2NvbnRlbnRBcmVhX19yNFJXdFwiLFwic2VjdGlvblwiOlwicGFnZV9zZWN0aW9uX182MVBFd1wifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzQ0NTg0NTA2Mzg1XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIkM6L1VzZXJzL2FwZ2F1L09uZURyaXZlL0Rlc2t0b3AvZWR1Y2F0aW9uLXdlYnNpdGUvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gIFxubW9kdWxlLmV4cG9ydHMuX19jaGVja3N1bSA9IFwiOGNkMzU0NWJlNGIzXCJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.module.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HomePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/stack */ \"(app-pages-browser)/./src/stack.ts\");\n/* harmony import */ var _stackframe_stack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\");\n/* harmony import */ var _components_MathQuiz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/MathQuiz */ \"(app-pages-browser)/./src/components/MathQuiz.tsx\");\n/* harmony import */ var _components_GrammarHelp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/GrammarHelp */ \"(app-pages-browser)/./src/components/GrammarHelp.tsx\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./page.module.css */ \"(app-pages-browser)/./src/app/page.module.css\");\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_page_module_css__WEBPACK_IMPORTED_MODULE_5__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n // Corrected import path\n // Import useUser hook only\n\n\n // Use Next.js Link for navigation\n // Import CSS module\nfunction HomePage() {\n    _s();\n    const user = (0,_stackframe_stack__WEBPACK_IMPORTED_MODULE_6__.useUser)(); // Get user authentication state\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().main),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().contentArea),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                    id: \"math-quiz\",\n                    className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().section),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            children: \"Math Quiz\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 18,\n                            columnNumber: 11\n                        }, this),\n                        user ? // User is authenticated\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MathQuiz__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this) : // User is not authenticated\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: [\n                                \"Please \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n                                    href: _stack__WEBPACK_IMPORTED_MODULE_1__.stackClientApp.urls.signIn,\n                                    children: \"sign in\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                                    lineNumber: 25,\n                                    columnNumber: 22\n                                }, this),\n                                \" to take the quiz.\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 24,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                    id: \"grammar-help\",\n                    className: (_page_module_css__WEBPACK_IMPORTED_MODULE_5___default().section),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            children: \"Grammar Help\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 32,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GrammarHelp__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                            lineNumber: 35,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n_s(HomePage, \"BPnln+wUpxLjLAxQmw7xYz9C+QI=\", false, function() {\n    return [\n        _stackframe_stack__WEBPACK_IMPORTED_MODULE_6__.useUser\n    ];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBRXlDLENBQUMsd0JBQXdCO0FBQ3RCLENBQUMsMkJBQTJCO0FBQzFCO0FBQ007QUFDdkIsQ0FBQyxrQ0FBa0M7QUFDekIsQ0FBQyxvQkFBb0I7QUFFN0MsU0FBU007O0lBQ3RCLE1BQU1DLE9BQU9OLDBEQUFPQSxJQUFJLGdDQUFnQztJQUV4RCxxQkFDRSw4REFBQ087UUFBS0MsV0FBV0osOERBQVc7a0JBRTFCLDRFQUFDSztZQUFJRCxXQUFXSixxRUFBa0I7OzhCQUNoQyw4REFBQ087b0JBQVFDLElBQUc7b0JBQVlKLFdBQVdKLGlFQUFjOztzQ0FDL0MsOERBQUNTO3NDQUFHOzs7Ozs7d0JBQ0hQLE9BQ0Msd0JBQXdCO3NDQUN4Qiw4REFBQ0wsNERBQVFBOzs7O21DQUVULDRCQUE0QjtzQ0FDNUIsOERBQUNhOztnQ0FBRTs4Q0FDTSw4REFBQ1gsa0RBQUlBO29DQUFDWSxNQUFNaEIsa0RBQWNBLENBQUNpQixJQUFJLENBQUNDLE1BQU07OENBQUU7Ozs7OztnQ0FBYzs7Ozs7Ozs7Ozs7Ozs4QkFNbkUsOERBQUNOO29CQUFRQyxJQUFHO29CQUFlSixXQUFXSixpRUFBYzs7c0NBQ2xELDhEQUFDUztzQ0FBRzs7Ozs7O3NDQUdKLDhEQUFDWCwrREFBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLdEI7R0E5QndCRzs7UUFDVEwsc0RBQU9BOzs7S0FERUsiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcc3JjXFxhcHBcXHBhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiOyAvLyBDb21wb25lbnRzIHVzaW5nIGhvb2tzIGxpa2UgdXNlU3RhdGUgb3IgdXNlVXNlciBuZWVkIHRvIGJlIGNsaWVudCBjb21wb25lbnRzXHJcblxyXG5pbXBvcnQgeyBzdGFja0NsaWVudEFwcCB9IGZyb20gXCJAL3N0YWNrXCI7IC8vIENvcnJlY3RlZCBpbXBvcnQgcGF0aFxyXG5pbXBvcnQgeyB1c2VVc2VyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrXCI7IC8vIEltcG9ydCB1c2VVc2VyIGhvb2sgb25seVxyXG5pbXBvcnQgTWF0aFF1aXogZnJvbSBcIi4uL2NvbXBvbmVudHMvTWF0aFF1aXpcIjtcclxuaW1wb3J0IEdyYW1tYXJIZWxwIGZyb20gXCIuLi9jb21wb25lbnRzL0dyYW1tYXJIZWxwXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjsgLy8gVXNlIE5leHQuanMgTGluayBmb3IgbmF2aWdhdGlvblxyXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3BhZ2UubW9kdWxlLmNzc1wiOyAvLyBJbXBvcnQgQ1NTIG1vZHVsZVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSG9tZVBhZ2UoKSB7XHJcbiAgY29uc3QgdXNlciA9IHVzZVVzZXIoKTsgLy8gR2V0IHVzZXIgYXV0aGVudGljYXRpb24gc3RhdGVcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxtYWluIGNsYXNzTmFtZT17c3R5bGVzLm1haW59PlxyXG4gICAgICB7LyogVGl0bGUgYW5kIFVzZXJCdXR0b24gYXJlIG5vdyBpbiB0aGUgSGVhZGVyIGNvbXBvbmVudCAqL31cclxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jb250ZW50QXJlYX0+XHJcbiAgICAgICAgPHNlY3Rpb24gaWQ9XCJtYXRoLXF1aXpcIiBjbGFzc05hbWU9e3N0eWxlcy5zZWN0aW9ufT5cclxuICAgICAgICAgIDxoMj5NYXRoIFF1aXo8L2gyPlxyXG4gICAgICAgICAge3VzZXIgPyAoXHJcbiAgICAgICAgICAgIC8vIFVzZXIgaXMgYXV0aGVudGljYXRlZFxyXG4gICAgICAgICAgICA8TWF0aFF1aXogLz5cclxuICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgIC8vIFVzZXIgaXMgbm90IGF1dGhlbnRpY2F0ZWRcclxuICAgICAgICAgICAgPHA+XHJcbiAgICAgICAgICAgICAgUGxlYXNlIDxMaW5rIGhyZWY9e3N0YWNrQ2xpZW50QXBwLnVybHMuc2lnbklufT5zaWduIGluPC9MaW5rPiB0b1xyXG4gICAgICAgICAgICAgIHRha2UgdGhlIHF1aXouXHJcbiAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG5cclxuICAgICAgICA8c2VjdGlvbiBpZD1cImdyYW1tYXItaGVscFwiIGNsYXNzTmFtZT17c3R5bGVzLnNlY3Rpb259PlxyXG4gICAgICAgICAgPGgyPkdyYW1tYXIgSGVscDwvaDI+XHJcbiAgICAgICAgICB7LyogR3JhbW1hciBIZWxwIGNvbXBvbmVudCB3aWxsIGdvIGhlcmUgLSBtYXliZSBhbHNvIHJlcXVpcmVzIGF1dGg/ICovfVxyXG4gICAgICAgICAgey8qIEVuc3VyZSBHcmFtbWFySGVscCBpcyBtYXJrZWQgJ3VzZSBjbGllbnQnIGlmIGl0IHVzZXMgaG9va3MgKi99XHJcbiAgICAgICAgICA8R3JhbW1hckhlbHAgLz5cclxuICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9tYWluPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbInN0YWNrQ2xpZW50QXBwIiwidXNlVXNlciIsIk1hdGhRdWl6IiwiR3JhbW1hckhlbHAiLCJMaW5rIiwic3R5bGVzIiwiSG9tZVBhZ2UiLCJ1c2VyIiwibWFpbiIsImNsYXNzTmFtZSIsImRpdiIsImNvbnRlbnRBcmVhIiwic2VjdGlvbiIsImlkIiwiaDIiLCJwIiwiaHJlZiIsInVybHMiLCJzaWduSW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/GrammarHelp.tsx":
/*!****************************************!*\
  !*** ./src/components/GrammarHelp.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst GrammarHelp = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                children: \"Grammar Assistance\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\GrammarHelp.tsx\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Grammar help functionality is under construction.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\GrammarHelp.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\GrammarHelp.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, undefined);\n};\n_c = GrammarHelp;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GrammarHelp);\nvar _c;\n$RefreshReg$(_c, \"GrammarHelp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0dyYW1tYXJIZWxwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUUwQjtBQUUxQixNQUFNQyxjQUF3QjtJQUM1QixxQkFDRSw4REFBQ0M7OzBCQUNDLDhEQUFDQzswQkFBRzs7Ozs7OzBCQUVKLDhEQUFDQzswQkFBRTs7Ozs7Ozs7Ozs7O0FBR1Q7S0FSTUg7QUFVTixpRUFBZUEsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxzcmNcXGNvbXBvbmVudHNcXEdyYW1tYXJIZWxwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNvbnN0IEdyYW1tYXJIZWxwOiBSZWFjdC5GQyA9ICgpID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPGgzPkdyYW1tYXIgQXNzaXN0YW5jZTwvaDM+XHJcbiAgICAgIHsvKiBHcmFtbWFyIGNoZWNraW5nL2V4cGxhbmF0aW9uIGxvZ2ljIHdpbGwgZ28gaGVyZSAqL31cclxuICAgICAgPHA+R3JhbW1hciBoZWxwIGZ1bmN0aW9uYWxpdHkgaXMgdW5kZXIgY29uc3RydWN0aW9uLjwvcD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBHcmFtbWFySGVscDtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiR3JhbW1hckhlbHAiLCJkaXYiLCJoMyIsInAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/GrammarHelp.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/MathQuiz.tsx":
/*!*************************************!*\
  !*** ./src/components/MathQuiz.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n// Function to generate a random math question\nconst generateQuestion = ()=>{\n    const operand1 = Math.floor(Math.random() * 10) + 1; // Numbers between 1 and 10\n    const operand2 = Math.floor(Math.random() * 10) + 1;\n    const operator = \"+\"; // Only addition for now\n    const correctAnswer = operand1 + operand2;\n    return {\n        operand1,\n        operand2,\n        operator,\n        correctAnswer\n    };\n};\nconst MathQuiz = ()=>{\n    _s();\n    const [currentQuestion, setCurrentQuestion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userAnswer, setUserAnswer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [score, setScore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [feedback, setFeedback] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [questionNumber, setQuestionNumber] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Track number of questions answered\n    const totalQuestions = 5; // Let's have 5 questions per quiz\n    // Generate the first question when the component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MathQuiz.useEffect\": ()=>{\n            startNewQuiz();\n        }\n    }[\"MathQuiz.useEffect\"], []);\n    const startNewQuiz = ()=>{\n        setScore(0);\n        setQuestionNumber(0);\n        setFeedback(\"\");\n        setUserAnswer(\"\");\n        setCurrentQuestion(generateQuestion());\n    };\n    const handleAnswerChange = (event)=>{\n        setUserAnswer(event.target.value);\n        setFeedback(\"\"); // Clear feedback when user types\n    };\n    const handleSubmit = (event)=>{\n        event.preventDefault();\n        if (!currentQuestion) return; // Should not happen if quiz started\n        const answer = parseInt(userAnswer, 10);\n        if (isNaN(answer)) {\n            setFeedback(\"Please enter a valid number.\");\n            return;\n        }\n        if (answer === currentQuestion.correctAnswer) {\n            setScore(score + 1);\n            setFeedback(\"Correct!\");\n        } else {\n            setFeedback(\"Incorrect. The answer was \".concat(currentQuestion.correctAnswer, \".\"));\n        }\n        // Move to the next question or end the quiz\n        const nextQuestionNum = questionNumber + 1;\n        setQuestionNumber(nextQuestionNum);\n        setUserAnswer(\"\"); // Clear input field\n        if (nextQuestionNum < totalQuestions) {\n            // Wait a moment before showing the next question to let user see feedback\n            setTimeout(()=>{\n                setCurrentQuestion(generateQuestion());\n                setFeedback(\"\"); // Clear feedback for the new question\n            }, 1500); // 1.5 second delay\n        } else {\n            // Quiz finished\n            setFeedback(\"Quiz finished! Your score: \".concat(score + (answer === currentQuestion.correctAnswer ? 1 : 0), \"/\").concat(totalQuestions));\n            setCurrentQuestion(null); // Indicate quiz is over\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                children: \"Basic Addition Quiz\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                lineNumber: 93,\n                columnNumber: 7\n            }, undefined),\n            currentQuestion ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Question \",\n                            questionNumber + 1,\n                            \" / \",\n                            totalQuestions\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 96,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        style: {\n                            fontSize: \"1.5em\",\n                            margin: \"1rem 0\"\n                        },\n                        children: [\n                            currentQuestion.operand1,\n                            \" \",\n                            currentQuestion.operator,\n                            \" \",\n                            currentQuestion.operand2,\n                            \" = ?\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"number\",\n                        value: userAnswer,\n                        onChange: handleAnswerChange,\n                        required: true,\n                        autoFocus: true\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 103,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        style: {\n                            marginLeft: \"0.5rem\"\n                        },\n                        children: \"Submit\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 110,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                lineNumber: 95,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Loading quiz...\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                lineNumber: 115,\n                columnNumber: 9\n            }, undefined) // Initial state or after finishing\n            ,\n            feedback && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                style: {\n                    marginTop: \"1rem\",\n                    fontWeight: \"bold\"\n                },\n                children: feedback\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                lineNumber: 118,\n                columnNumber: 9\n            }, undefined),\n            !currentQuestion && questionNumber >= totalQuestions && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Final Score: \",\n                            score,\n                            \"/\",\n                            totalQuestions\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 123,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: startNewQuiz,\n                        style: {\n                            marginTop: \"1rem\"\n                        },\n                        children: \"Start New Quiz\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                        lineNumber: 126,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n                lineNumber: 122,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\apgau\\\\OneDrive\\\\Desktop\\\\education-website\\\\src\\\\components\\\\MathQuiz.tsx\",\n        lineNumber: 92,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MathQuiz, \"4Vej/FI34qOK7+BwUQSvMHKgVyA=\");\n_c = MathQuiz;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MathQuiz);\nvar _c;\n$RefreshReg$(_c, \"MathQuiz\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/MathQuiz.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/stack.ts":
/*!**********************!*\
  !*** ./src/stack.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stackClientApp: () => (/* binding */ stackClientApp),\n/* harmony export */   stackServerApp: () => (/* binding */ stackServerApp)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js\");\n\nif (false) {}\n// Initialize and export the Client App\nconst stackClientApp = new _stackframe_stack__WEBPACK_IMPORTED_MODULE_0__.StackClientApp({\n    publishableClientKey: \"pck_0b4d3xze5mgp06cgr16xe761fge2j7xhfwsheya2mxt1g\",\n    tokenStore: \"memory\"\n});\n// Initialize Server App conditionally\nlet stackServerApp = null;\nif (false) {}\n// Export the potentially null server app. Consumers must handle the null case or ensure it's only used server-side.\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdGFjay50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUU7QUFFbkUsSUFBSSxLQUFxRCxFQUFFLEVBSTFEO0FBRUQsdUNBQXVDO0FBQ2hDLE1BQU1NLGlCQUFpQixJQUFJTCw2REFBY0EsQ0FBQztJQUMvQ00sc0JBQXNCTCxtREFBb0Q7SUFDMUVNLFlBQVk7QUFFZCxHQUFHO0FBRUgsc0NBQXNDO0FBQ3RDLElBQUlDLGlCQUF3QztBQUU1QyxJQUFJLEtBQTZCLEVBQUUsRUFZbEM7QUFFRCxvSEFBb0g7QUFDMUYiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcc3JjXFxzdGFjay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFja1NlcnZlckFwcCwgU3RhY2tDbGllbnRBcHAgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2tcIjtcclxuXHJcbmlmICghcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfUFVCTElTSEFCTEVfQ0xJRU5UX0tFWSkge1xyXG4gIHRocm93IG5ldyBFcnJvcihcclxuICAgIFwiTkVYVF9QVUJMSUNfU1RBQ0tfUFVCTElTSEFCTEVfQ0xJRU5UX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3Qgc2V0LlwiXHJcbiAgKTtcclxufVxyXG5cclxuLy8gSW5pdGlhbGl6ZSBhbmQgZXhwb3J0IHRoZSBDbGllbnQgQXBwXHJcbmV4cG9ydCBjb25zdCBzdGFja0NsaWVudEFwcCA9IG5ldyBTdGFja0NsaWVudEFwcCh7XHJcbiAgcHVibGlzaGFibGVDbGllbnRLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUQUNLX1BVQkxJU0hBQkxFX0NMSUVOVF9LRVksXHJcbiAgdG9rZW5TdG9yZTogXCJtZW1vcnlcIixcclxuICAvLyBhcGlVcmwgaXMgTk9UIGEgZGlyZWN0IGNvbmZpZyBvcHRpb24gaGVyZVxyXG59KTtcclxuXHJcbi8vIEluaXRpYWxpemUgU2VydmVyIEFwcCBjb25kaXRpb25hbGx5XHJcbmxldCBzdGFja1NlcnZlckFwcDogU3RhY2tTZXJ2ZXJBcHAgfCBudWxsID0gbnVsbDtcclxuXHJcbmlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgaWYgKCFwcm9jZXNzLmVudi5TVEFDS19TRUNSRVRfU0VSVkVSX0tFWSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU1RBQ0tfU0VDUkVUX1NFUlZFUl9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNldC5cIik7XHJcbiAgfVxyXG5cclxuICAvLyBJbml0aWFsaXplIGFuZCBwb3RlbnRpYWxseSBleHBvcnQgdGhlIFNlcnZlciBBcHAgb25seSBvbiB0aGUgc2VydmVyXHJcbiAgc3RhY2tTZXJ2ZXJBcHAgPSBuZXcgU3RhY2tTZXJ2ZXJBcHAoe1xyXG4gICAgdG9rZW5TdG9yZTogXCJtZW1vcnlcIixcclxuICAgIHB1Ymxpc2hhYmxlQ2xpZW50S2V5OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVEFDS19QVUJMSVNIQUJMRV9DTElFTlRfS0VZLFxyXG4gICAgc2VjcmV0U2VydmVyS2V5OiBwcm9jZXNzLmVudi5TVEFDS19TRUNSRVRfU0VSVkVSX0tFWSxcclxuICAgIC8vIGFwaVVybCBpcyBOT1QgYSBkaXJlY3QgY29uZmlnIG9wdGlvbiBoZXJlXHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIEV4cG9ydCB0aGUgcG90ZW50aWFsbHkgbnVsbCBzZXJ2ZXIgYXBwLiBDb25zdW1lcnMgbXVzdCBoYW5kbGUgdGhlIG51bGwgY2FzZSBvciBlbnN1cmUgaXQncyBvbmx5IHVzZWQgc2VydmVyLXNpZGUuXHJcbmV4cG9ydCB7IHN0YWNrU2VydmVyQXBwIH07XHJcbiJdLCJuYW1lcyI6WyJTdGFja1NlcnZlckFwcCIsIlN0YWNrQ2xpZW50QXBwIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NUQUNLX1BVQkxJU0hBQkxFX0NMSUVOVF9LRVkiLCJFcnJvciIsInN0YWNrQ2xpZW50QXBwIiwicHVibGlzaGFibGVDbGllbnRLZXkiLCJ0b2tlblN0b3JlIiwic3RhY2tTZXJ2ZXJBcHAiLCJTVEFDS19TRUNSRVRfU0VSVkVSX0tFWSIsInNlY3JldFNlcnZlcktleSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/stack.ts\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/client/components/app-router-headers.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/app-router-headers.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ACTION_HEADER: function() {\n        return ACTION_HEADER;\n    },\n    FLIGHT_HEADERS: function() {\n        return FLIGHT_HEADERS;\n    },\n    NEXT_DID_POSTPONE_HEADER: function() {\n        return NEXT_DID_POSTPONE_HEADER;\n    },\n    NEXT_HMR_REFRESH_HASH_COOKIE: function() {\n        return NEXT_HMR_REFRESH_HASH_COOKIE;\n    },\n    NEXT_HMR_REFRESH_HEADER: function() {\n        return NEXT_HMR_REFRESH_HEADER;\n    },\n    NEXT_IS_PRERENDER_HEADER: function() {\n        return NEXT_IS_PRERENDER_HEADER;\n    },\n    NEXT_REWRITTEN_PATH_HEADER: function() {\n        return NEXT_REWRITTEN_PATH_HEADER;\n    },\n    NEXT_REWRITTEN_QUERY_HEADER: function() {\n        return NEXT_REWRITTEN_QUERY_HEADER;\n    },\n    NEXT_ROUTER_PREFETCH_HEADER: function() {\n        return NEXT_ROUTER_PREFETCH_HEADER;\n    },\n    NEXT_ROUTER_SEGMENT_PREFETCH_HEADER: function() {\n        return NEXT_ROUTER_SEGMENT_PREFETCH_HEADER;\n    },\n    NEXT_ROUTER_STALE_TIME_HEADER: function() {\n        return NEXT_ROUTER_STALE_TIME_HEADER;\n    },\n    NEXT_ROUTER_STATE_TREE_HEADER: function() {\n        return NEXT_ROUTER_STATE_TREE_HEADER;\n    },\n    NEXT_RSC_UNION_QUERY: function() {\n        return NEXT_RSC_UNION_QUERY;\n    },\n    NEXT_URL: function() {\n        return NEXT_URL;\n    },\n    RSC_CONTENT_TYPE_HEADER: function() {\n        return RSC_CONTENT_TYPE_HEADER;\n    },\n    RSC_HEADER: function() {\n        return RSC_HEADER;\n    }\n});\nconst RSC_HEADER = 'RSC';\nconst ACTION_HEADER = 'Next-Action';\nconst NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree';\nconst NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch';\nconst NEXT_ROUTER_SEGMENT_PREFETCH_HEADER = 'Next-Router-Segment-Prefetch';\nconst NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh';\nconst NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__';\nconst NEXT_URL = 'Next-Url';\nconst RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nconst FLIGHT_HEADERS = [\n    RSC_HEADER,\n    NEXT_ROUTER_STATE_TREE_HEADER,\n    NEXT_ROUTER_PREFETCH_HEADER,\n    NEXT_HMR_REFRESH_HEADER,\n    NEXT_ROUTER_SEGMENT_PREFETCH_HEADER\n];\nconst NEXT_RSC_UNION_QUERY = '_rsc';\nconst NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time';\nconst NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed';\nconst NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path';\nconst NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query';\nconst NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender';\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-router-headers.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFDYUEsYUFBYTtlQUFiQTs7SUFpQkFDLGNBQWM7ZUFBZEE7O0lBV0FDLHdCQUF3QjtlQUF4QkE7O0lBZkFDLDRCQUE0QjtlQUE1QkE7O0lBREFDLHVCQUF1QjtlQUF2QkE7O0lBbUJBQyx3QkFBd0I7ZUFBeEJBOztJQUZBQywwQkFBMEI7ZUFBMUJBOztJQUNBQywyQkFBMkI7ZUFBM0JBOztJQXpCQUMsMkJBQTJCO2VBQTNCQTs7SUFLQUMsbUNBQW1DO2VBQW5DQTs7SUFpQkFDLDZCQUE2QjtlQUE3QkE7O0lBdkJBQyw2QkFBNkI7ZUFBN0JBOztJQXFCQUMsb0JBQW9CO2VBQXBCQTs7SUFYQUMsUUFBUTtlQUFSQTs7SUFDQUMsdUJBQXVCO2VBQXZCQTs7SUFoQkFDLFVBQVU7ZUFBVkE7OztBQUFOLE1BQU1BLGFBQWE7QUFDbkIsTUFBTWYsZ0JBQWdCO0FBSXRCLE1BQU1XLGdDQUFnQztBQUN0QyxNQUFNSCw4QkFBOEI7QUFLcEMsTUFBTUMsc0NBQ1g7QUFDSyxNQUFNTCwwQkFBMEI7QUFDaEMsTUFBTUQsK0JBQStCO0FBQ3JDLE1BQU1VLFdBQVc7QUFDakIsTUFBTUMsMEJBQTBCO0FBRWhDLE1BQU1iLGlCQUFpQjtJQUM1QmM7SUFDQUo7SUFDQUg7SUFDQUo7SUFDQUs7Q0FDRDtBQUVNLE1BQU1HLHVCQUF1QjtBQUU3QixNQUFNRixnQ0FBZ0M7QUFDdEMsTUFBTVIsMkJBQTJCO0FBQ2pDLE1BQU1JLDZCQUE2QjtBQUNuQyxNQUFNQyw4QkFBOEI7QUFDcEMsTUFBTUYsMkJBQTJCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxzcmNcXGNsaWVudFxcY29tcG9uZW50c1xcYXBwLXJvdXRlci1oZWFkZXJzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBSU0NfSEVBREVSID0gJ1JTQycgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBBQ1RJT05fSEVBREVSID0gJ05leHQtQWN0aW9uJyBhcyBjb25zdFxuLy8gVE9ETzogSW5zdGVhZCBvZiBzZW5kaW5nIHRoZSBmdWxsIHJvdXRlciBzdGF0ZSwgd2Ugb25seSBuZWVkIHRvIHNlbmQgdGhlXG4vLyBzZWdtZW50IHBhdGguIFNhdmVzIGJ5dGVzLiBUaGVuIHdlIGNvdWxkIGFsc28gdXNlIHRoaXMgZmllbGQgZm9yIHNlZ21lbnRcbi8vIHByZWZldGNoZXMsIHdoaWNoIGFsc28gbmVlZCB0byBzcGVjaWZ5IGEgcGFydGljdWxhciBzZWdtZW50LlxuZXhwb3J0IGNvbnN0IE5FWFRfUk9VVEVSX1NUQVRFX1RSRUVfSEVBREVSID0gJ05leHQtUm91dGVyLVN0YXRlLVRyZWUnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSID0gJ05leHQtUm91dGVyLVByZWZldGNoJyBhcyBjb25zdFxuLy8gVGhpcyBjb250YWlucyB0aGUgcGF0aCB0byB0aGUgc2VnbWVudCBiZWluZyBwcmVmZXRjaGVkLlxuLy8gVE9ETzogSWYgd2UgY2hhbmdlIE5leHQtUm91dGVyLVN0YXRlLVRyZWUgdG8gYmUgYSBzZWdtZW50IHBhdGgsIHdlIGNhbiB1c2Vcbi8vIHRoYXQgaW5zdGVhZC4gVGhlbiBOZXh0LVJvdXRlci1QcmVmZXRjaCBhbmQgTmV4dC1Sb3V0ZXItU2VnbWVudC1QcmVmZXRjaCBjYW5cbi8vIGJlIG1lcmdlZCBpbnRvIGEgc2luZ2xlIGVudW0uXG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfU0VHTUVOVF9QUkVGRVRDSF9IRUFERVIgPVxuICAnTmV4dC1Sb3V0ZXItU2VnbWVudC1QcmVmZXRjaCcgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX0hNUl9SRUZSRVNIX0hFQURFUiA9ICdOZXh0LUhNUi1SZWZyZXNoJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IE5FWFRfSE1SX1JFRlJFU0hfSEFTSF9DT09LSUUgPSAnX19uZXh0X2htcl9yZWZyZXNoX2hhc2hfXycgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX1VSTCA9ICdOZXh0LVVybCcgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiA9ICd0ZXh0L3gtY29tcG9uZW50JyBhcyBjb25zdFxuXG5leHBvcnQgY29uc3QgRkxJR0hUX0hFQURFUlMgPSBbXG4gIFJTQ19IRUFERVIsXG4gIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUVfSEVBREVSLFxuICBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVIsXG4gIE5FWFRfSE1SX1JFRlJFU0hfSEVBREVSLFxuICBORVhUX1JPVVRFUl9TRUdNRU5UX1BSRUZFVENIX0hFQURFUixcbl0gYXMgY29uc3RcblxuZXhwb3J0IGNvbnN0IE5FWFRfUlNDX1VOSU9OX1FVRVJZID0gJ19yc2MnIGFzIGNvbnN0XG5cbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9TVEFMRV9USU1FX0hFQURFUiA9ICd4LW5leHRqcy1zdGFsZS10aW1lJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IE5FWFRfRElEX1BPU1RQT05FX0hFQURFUiA9ICd4LW5leHRqcy1wb3N0cG9uZWQnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9SRVdSSVRURU5fUEFUSF9IRUFERVIgPSAneC1uZXh0anMtcmV3cml0dGVuLXBhdGgnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9SRVdSSVRURU5fUVVFUllfSEVBREVSID0gJ3gtbmV4dGpzLXJld3JpdHRlbi1xdWVyeScgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX0lTX1BSRVJFTkRFUl9IRUFERVIgPSAneC1uZXh0anMtcHJlcmVuZGVyJyBhcyBjb25zdFxuIl0sIm5hbWVzIjpbIkFDVElPTl9IRUFERVIiLCJGTElHSFRfSEVBREVSUyIsIk5FWFRfRElEX1BPU1RQT05FX0hFQURFUiIsIk5FWFRfSE1SX1JFRlJFU0hfSEFTSF9DT09LSUUiLCJORVhUX0hNUl9SRUZSRVNIX0hFQURFUiIsIk5FWFRfSVNfUFJFUkVOREVSX0hFQURFUiIsIk5FWFRfUkVXUklUVEVOX1BBVEhfSEVBREVSIiwiTkVYVF9SRVdSSVRURU5fUVVFUllfSEVBREVSIiwiTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSIiwiTkVYVF9ST1VURVJfU0VHTUVOVF9QUkVGRVRDSF9IRUFERVIiLCJORVhUX1JPVVRFUl9TVEFMRV9USU1FX0hFQURFUiIsIk5FWFRfUk9VVEVSX1NUQVRFX1RSRUVfSEVBREVSIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiLCJORVhUX1VSTCIsIlJTQ19DT05URU5UX1RZUEVfSEVBREVSIiwiUlNDX0hFQURFUiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/client/components/app-router-headers.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBSUw7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxzZXJ2ZXJcXGFwcC1yZW5kZXJcXGFzeW5jLWxvY2FsLXN0b3JhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBiaW5kU25hcHNob3Q6IG51bGwsXG4gICAgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U6IG51bGwsXG4gICAgY3JlYXRlU25hcHNob3Q6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgYmluZFNuYXBzaG90OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGJpbmRTbmFwc2hvdDtcbiAgICB9LFxuICAgIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlO1xuICAgIH0sXG4gICAgY3JlYXRlU25hcHNob3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlU25hcHNob3Q7XG4gICAgfVxufSk7XG5jb25zdCBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcignSW52YXJpYW50OiBBc3luY0xvY2FsU3RvcmFnZSBhY2Nlc3NlZCBpbiBydW50aW1lIHdoZXJlIGl0IGlzIG5vdCBhdmFpbGFibGUnKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgdmFsdWU6IFwiRTUwNFwiLFxuICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5jbGFzcyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2Uge1xuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGdldFN0b3JlKCkge1xuICAgICAgICAvLyBUaGlzIGZha2UgaW1wbGVtZW50YXRpb24gb2YgQXN5bmNMb2NhbFN0b3JhZ2UgYWx3YXlzIHJldHVybnMgYHVuZGVmaW5lZGAuXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJ1bigpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZXhpdCgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZW50ZXJXaXRoKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBzdGF0aWMgYmluZChmbikge1xuICAgICAgICByZXR1cm4gZm47XG4gICAgfVxufVxuY29uc3QgbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyAmJiBnbG9iYWxUaGlzLkFzeW5jTG9jYWxTdG9yYWdlO1xuZnVuY3Rpb24gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRmFrZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG59XG5mdW5jdGlvbiBiaW5kU25hcHNob3QoZm4pIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZS5iaW5kKGZuKTtcbiAgICB9XG4gICAgcmV0dXJuIEZha2VBc3luY0xvY2FsU3RvcmFnZS5iaW5kKGZuKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNuYXBzaG90KCkge1xuICAgIGlmIChtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlLnNuYXBzaG90KCk7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihmbiwgLi4uYXJncykge1xuICAgICAgICByZXR1cm4gZm4oLi4uYXJncyk7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMtbG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-async-storage-instance.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDREQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLDJCQUEyQixtQkFBTyxDQUFDLHlHQUF1QjtBQUMxRDs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhcGdhdVxcT25lRHJpdmVcXERlc2t0b3BcXGVkdWNhdGlvbi13ZWJzaXRlXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcd29yay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwid29ya0FzeW5jU3RvcmFnZUluc3RhbmNlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3b3JrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3Qgd29ya0FzeW5jU3RvcmFnZUluc3RhbmNlID0gKDAsIF9hc3luY2xvY2Fsc3RvcmFnZS5jcmVhdGVBc3luY0xvY2FsU3RvcmFnZSkoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29yay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-async-storage.external.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n}));\nconst _workasyncstorageinstance = __webpack_require__(/*! ./work-async-storage-instance */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js\");\n\n//# sourceMappingURL=work-async-storage.external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG9EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLGtDQUFrQyxtQkFBTyxDQUFDLHlIQUErQjs7QUFFekUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXBnYXVcXE9uZURyaXZlXFxEZXNrdG9wXFxlZHVjYXRpb24td2Vic2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxzZXJ2ZXJcXGFwcC1yZW5kZXJcXHdvcmstYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIndvcmtBc3luY1N0b3JhZ2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF93b3JrYXN5bmNzdG9yYWdlaW5zdGFuY2Uud29ya0FzeW5jU3RvcmFnZUluc3RhbmNlO1xuICAgIH1cbn0pO1xuY29uc3QgX3dvcmthc3luY3N0b3JhZ2VpbnN0YW5jZSA9IHJlcXVpcmUoXCIuL3dvcmstYXN5bmMtc3RvcmFnZS1pbnN0YW5jZVwiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29yay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workUnitAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return workUnitAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst workUnitAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstdW5pdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsZ0VBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkJBQTJCLG1CQUFPLENBQUMseUdBQXVCO0FBQzFEOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxhcHAtcmVuZGVyXFx3b3JrLXVuaXQtYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIndvcmtVbml0QXN5bmNTdG9yYWdlSW5zdGFuY2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHdvcmtVbml0QXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3Qgd29ya1VuaXRBc3luY1N0b3JhZ2VJbnN0YW5jZSA9ICgwLCBfYXN5bmNsb2NhbHN0b3JhZ2UuY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UpKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdvcmstdW5pdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getDraftModeProviderForCacheScope: function() {\n        return getDraftModeProviderForCacheScope;\n    },\n    getExpectedRequestStore: function() {\n        return getExpectedRequestStore;\n    },\n    getHmrRefreshHash: function() {\n        return getHmrRefreshHash;\n    },\n    getPrerenderResumeDataCache: function() {\n        return getPrerenderResumeDataCache;\n    },\n    getRenderResumeDataCache: function() {\n        return getRenderResumeDataCache;\n    },\n    throwForMissingRequestStore: function() {\n        return throwForMissingRequestStore;\n    },\n    workUnitAsyncStorage: function() {\n        return _workunitasyncstorageinstance.workUnitAsyncStorageInstance;\n    }\n});\nconst _workunitasyncstorageinstance = __webpack_require__(/*! ./work-unit-async-storage-instance */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js\");\nconst _approuterheaders = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(shared)/./node_modules/next/dist/client/components/app-router-headers.js\");\nfunction getExpectedRequestStore(callingExpression) {\n    const workUnitStore = _workunitasyncstorageinstance.workUnitAsyncStorageInstance.getStore();\n    if (!workUnitStore) {\n        throwForMissingRequestStore(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore;\n        case 'prerender':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // This should not happen because we should have checked it already.\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E401\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E37\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'unstable-cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E69\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nfunction throwForMissingRequestStore(callingExpression) {\n    throw Object.defineProperty(new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`), \"__NEXT_ERROR_CODE\", {\n        value: \"E251\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction getPrerenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr') {\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nfunction getRenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type !== 'prerender-legacy' && workUnitStore.type !== 'cache' && workUnitStore.type !== 'unstable-cache') {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore.renderResumeDataCache;\n        }\n        // We return the mutable resume data cache here as an immutable version of\n        // the cache as it can also be used for reading.\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nfunction getHmrRefreshHash(workStore, workUnitStore) {\n    var _workUnitStore_cookies_get;\n    if (!workStore.dev) {\n        return undefined;\n    }\n    return workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' ? workUnitStore.hmrRefreshHash : workUnitStore.type === 'request' ? (_workUnitStore_cookies_get = workUnitStore.cookies.get(_approuterheaders.NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _workUnitStore_cookies_get.value : undefined;\n}\nfunction getDraftModeProviderForCacheScope(workStore, workUnitStore) {\n    if (workStore.isDraftMode) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n            case 'request':\n                return workUnitStore.draftMode;\n            default:\n                return undefined;\n        }\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstdW5pdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQVFMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQ0FBc0MsbUJBQU8sQ0FBQyxtSUFBb0M7QUFDbEYsMEJBQTBCLG1CQUFPLENBQUMsNkhBQTRDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxrQkFBa0I7QUFDekU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsdURBQXVELGtCQUFrQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx1REFBdUQsa0JBQWtCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msa0JBQWtCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFwZ2F1XFxPbmVEcml2ZVxcRGVza3RvcFxcZWR1Y2F0aW9uLXdlYnNpdGVcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxhcHAtcmVuZGVyXFx3b3JrLXVuaXQtYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldERyYWZ0TW9kZVByb3ZpZGVyRm9yQ2FjaGVTY29wZTogbnVsbCxcbiAgICBnZXRFeHBlY3RlZFJlcXVlc3RTdG9yZTogbnVsbCxcbiAgICBnZXRIbXJSZWZyZXNoSGFzaDogbnVsbCxcbiAgICBnZXRQcmVyZW5kZXJSZXN1bWVEYXRhQ2FjaGU6IG51bGwsXG4gICAgZ2V0UmVuZGVyUmVzdW1lRGF0YUNhY2hlOiBudWxsLFxuICAgIHRocm93Rm9yTWlzc2luZ1JlcXVlc3RTdG9yZTogbnVsbCxcbiAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBnZXREcmFmdE1vZGVQcm92aWRlckZvckNhY2hlU2NvcGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0RHJhZnRNb2RlUHJvdmlkZXJGb3JDYWNoZVNjb3BlO1xuICAgIH0sXG4gICAgZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmU7XG4gICAgfSxcbiAgICBnZXRIbXJSZWZyZXNoSGFzaDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRIbXJSZWZyZXNoSGFzaDtcbiAgICB9LFxuICAgIGdldFByZXJlbmRlclJlc3VtZURhdGFDYWNoZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRQcmVyZW5kZXJSZXN1bWVEYXRhQ2FjaGU7XG4gICAgfSxcbiAgICBnZXRSZW5kZXJSZXN1bWVEYXRhQ2FjaGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0UmVuZGVyUmVzdW1lRGF0YUNhY2hlO1xuICAgIH0sXG4gICAgdGhyb3dGb3JNaXNzaW5nUmVxdWVzdFN0b3JlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRocm93Rm9yTWlzc2luZ1JlcXVlc3RTdG9yZTtcbiAgICB9LFxuICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF93b3JrdW5pdGFzeW5jc3RvcmFnZWluc3RhbmNlLndvcmtVbml0QXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfd29ya3VuaXRhc3luY3N0b3JhZ2VpbnN0YW5jZSA9IHJlcXVpcmUoXCIuL3dvcmstdW5pdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlXCIpO1xuY29uc3QgX2FwcHJvdXRlcmhlYWRlcnMgPSByZXF1aXJlKFwiLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCIpO1xuZnVuY3Rpb24gZ2V0RXhwZWN0ZWRSZXF1ZXN0U3RvcmUoY2FsbGluZ0V4cHJlc3Npb24pIHtcbiAgICBjb25zdCB3b3JrVW5pdFN0b3JlID0gX3dvcmt1bml0YXN5bmNzdG9yYWdlaW5zdGFuY2Uud29ya1VuaXRBc3luY1N0b3JhZ2VJbnN0YW5jZS5nZXRTdG9yZSgpO1xuICAgIGlmICghd29ya1VuaXRTdG9yZSkge1xuICAgICAgICB0aHJvd0Zvck1pc3NpbmdSZXF1ZXN0U3RvcmUoY2FsbGluZ0V4cHJlc3Npb24pO1xuICAgIH1cbiAgICBzd2l0Y2god29ya1VuaXRTdG9yZS50eXBlKXtcbiAgICAgICAgY2FzZSAncmVxdWVzdCc6XG4gICAgICAgICAgICByZXR1cm4gd29ya1VuaXRTdG9yZTtcbiAgICAgICAgY2FzZSAncHJlcmVuZGVyJzpcbiAgICAgICAgY2FzZSAncHJlcmVuZGVyLXBwcic6XG4gICAgICAgIGNhc2UgJ3ByZXJlbmRlci1sZWdhY3knOlxuICAgICAgICAgICAgLy8gVGhpcyBzaG91bGQgbm90IGhhcHBlbiBiZWNhdXNlIHdlIHNob3VsZCBoYXZlIGNoZWNrZWQgaXQgYWxyZWFkeS5cbiAgICAgICAgICAgIHRocm93IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXcgRXJyb3IoYFxcYCR7Y2FsbGluZ0V4cHJlc3Npb259XFxgIGNhbm5vdCBiZSBjYWxsZWQgaW5zaWRlIGEgcHJlcmVuZGVyLiBUaGlzIGlzIGEgYnVnIGluIE5leHQuanMuYCksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBcIkU0MDFcIixcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlICdjYWNoZSc6XG4gICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBcXGAke2NhbGxpbmdFeHByZXNzaW9ufVxcYCBjYW5ub3QgYmUgY2FsbGVkIGluc2lkZSBcInVzZSBjYWNoZVwiLiBDYWxsIGl0IG91dHNpZGUgYW5kIHBhc3MgYW4gYXJndW1lbnQgaW5zdGVhZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LXJlcXVlc3QtaW4tdXNlLWNhY2hlYCksIFwiX19ORVhUX0VSUk9SX0NPREVcIiwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBcIkUzN1wiLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgJ3Vuc3RhYmxlLWNhY2hlJzpcbiAgICAgICAgICAgIHRocm93IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXcgRXJyb3IoYFxcYCR7Y2FsbGluZ0V4cHJlc3Npb259XFxgIGNhbm5vdCBiZSBjYWxsZWQgaW5zaWRlIHVuc3RhYmxlX2NhY2hlLiBDYWxsIGl0IG91dHNpZGUgYW5kIHBhc3MgYW4gYXJndW1lbnQgaW5zdGVhZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYXBpLXJlZmVyZW5jZS9mdW5jdGlvbnMvdW5zdGFibGVfY2FjaGVgKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiRTY5XCIsXG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnN0IF9leGhhdXN0aXZlQ2hlY2sgPSB3b3JrVW5pdFN0b3JlO1xuICAgICAgICAgICAgcmV0dXJuIF9leGhhdXN0aXZlQ2hlY2s7XG4gICAgfVxufVxuZnVuY3Rpb24gdGhyb3dGb3JNaXNzaW5nUmVxdWVzdFN0b3JlKGNhbGxpbmdFeHByZXNzaW9uKSB7XG4gICAgdGhyb3cgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcihgXFxgJHtjYWxsaW5nRXhwcmVzc2lvbn1cXGAgd2FzIGNhbGxlZCBvdXRzaWRlIGEgcmVxdWVzdCBzY29wZS4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWR5bmFtaWMtYXBpLXdyb25nLWNvbnRleHRgKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgIHZhbHVlOiBcIkUyNTFcIixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0UHJlcmVuZGVyUmVzdW1lRGF0YUNhY2hlKHdvcmtVbml0U3RvcmUpIHtcbiAgICBpZiAod29ya1VuaXRTdG9yZS50eXBlID09PSAncHJlcmVuZGVyJyB8fCB3b3JrVW5pdFN0b3JlLnR5cGUgPT09ICdwcmVyZW5kZXItcHByJykge1xuICAgICAgICByZXR1cm4gd29ya1VuaXRTdG9yZS5wcmVyZW5kZXJSZXN1bWVEYXRhQ2FjaGU7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0UmVuZGVyUmVzdW1lRGF0YUNhY2hlKHdvcmtVbml0U3RvcmUpIHtcbiAgICBpZiAod29ya1VuaXRTdG9yZS50eXBlICE9PSAncHJlcmVuZGVyLWxlZ2FjeScgJiYgd29ya1VuaXRTdG9yZS50eXBlICE9PSAnY2FjaGUnICYmIHdvcmtVbml0U3RvcmUudHlwZSAhPT0gJ3Vuc3RhYmxlLWNhY2hlJykge1xuICAgICAgICBpZiAod29ya1VuaXRTdG9yZS50eXBlID09PSAncmVxdWVzdCcpIHtcbiAgICAgICAgICAgIHJldHVybiB3b3JrVW5pdFN0b3JlLnJlbmRlclJlc3VtZURhdGFDYWNoZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBXZSByZXR1cm4gdGhlIG11dGFibGUgcmVzdW1lIGRhdGEgY2FjaGUgaGVyZSBhcyBhbiBpbW11dGFibGUgdmVyc2lvbiBvZlxuICAgICAgICAvLyB0aGUgY2FjaGUgYXMgaXQgY2FuIGFsc28gYmUgdXNlZCBmb3IgcmVhZGluZy5cbiAgICAgICAgcmV0dXJuIHdvcmtVbml0U3RvcmUucHJlcmVuZGVyUmVzdW1lRGF0YUNhY2hlO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEhtclJlZnJlc2hIYXNoKHdvcmtTdG9yZSwgd29ya1VuaXRTdG9yZSkge1xuICAgIHZhciBfd29ya1VuaXRTdG9yZV9jb29raWVzX2dldDtcbiAgICBpZiAoIXdvcmtTdG9yZS5kZXYpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHdvcmtVbml0U3RvcmUudHlwZSA9PT0gJ2NhY2hlJyB8fCB3b3JrVW5pdFN0b3JlLnR5cGUgPT09ICdwcmVyZW5kZXInID8gd29ya1VuaXRTdG9yZS5obXJSZWZyZXNoSGFzaCA6IHdvcmtVbml0U3RvcmUudHlwZSA9PT0gJ3JlcXVlc3QnID8gKF93b3JrVW5pdFN0b3JlX2Nvb2tpZXNfZ2V0ID0gd29ya1VuaXRTdG9yZS5jb29raWVzLmdldChfYXBwcm91dGVyaGVhZGVycy5ORVhUX0hNUl9SRUZSRVNIX0hBU0hfQ09PS0lFKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF93b3JrVW5pdFN0b3JlX2Nvb2tpZXNfZ2V0LnZhbHVlIDogdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gZ2V0RHJhZnRNb2RlUHJvdmlkZXJGb3JDYWNoZVNjb3BlKHdvcmtTdG9yZSwgd29ya1VuaXRTdG9yZSkge1xuICAgIGlmICh3b3JrU3RvcmUuaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgc3dpdGNoKHdvcmtVbml0U3RvcmUudHlwZSl7XG4gICAgICAgICAgICBjYXNlICdjYWNoZSc6XG4gICAgICAgICAgICBjYXNlICd1bnN0YWJsZS1jYWNoZSc6XG4gICAgICAgICAgICBjYXNlICdyZXF1ZXN0JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gd29ya1VuaXRTdG9yZS5kcmFmdE1vZGU7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29yay11bml0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5Capgau%5C%5COneDrive%5C%5CDesktop%5C%5Ceducation-website%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);